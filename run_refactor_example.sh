#!/bin/bash

# Android Project Refactoring Agent - Usage Example
# This script demonstrates how to use the Android refactoring agent

echo "üöÄ Android Project Refactoring Agent - Usage Example"
echo "=================================================="
echo ""

# Check if the agent script exists
if [ ! -f "android_refactor_agent.py" ]; then
    echo "‚ùå Error: android_refactor_agent.py not found in current directory"
    echo "Please ensure the script is in the same directory as this example"
    exit 1
fi

# Check if Python 3 is available
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Error: Python 3 is not installed or not in PATH"
    echo "Please install Python 3 to use this agent"
    exit 1
fi

echo "‚úÖ Prerequisites check passed"
echo ""

# Get the current directory (assuming it's an Android project)
PROJECT_PATH="."

echo "üìã Usage Examples:"
echo "=================="
echo ""

echo "1. üîç DRY RUN (Preview changes without modifying files):"
echo "   python3 android_refactor_agent.py $PROJECT_PATH"
echo ""

echo "2. üöÄ EXECUTE REFACTORING (Actually rename files):"
echo "   python3 android_refactor_agent.py $PROJECT_PATH --execute"
echo ""

echo "3. üìÑ View the generated report:"
echo "   cat refactoring_report.txt"
echo ""

echo "‚ö†Ô∏è  IMPORTANT SAFETY NOTES:"
echo "=========================="
echo "‚Ä¢ Always run dry run first to preview changes"
echo "‚Ä¢ Commit your code to version control before executing"
echo "‚Ä¢ Test your project after refactoring"
echo "‚Ä¢ Review the generated report carefully"
echo ""

# Ask user if they want to run dry run
read -p "Would you like to run a dry run now? (y/n): " -n 1 -r
echo ""

if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo ""
    echo "üîç Running dry run analysis..."
    echo "=============================="
    python3 android_refactor_agent.py "$PROJECT_PATH"
    
    echo ""
    echo "üìÑ Report generated: refactoring_report.txt"
    echo ""
    echo "Next steps:"
    echo "1. Review the report above"
    echo "2. If satisfied with changes, run: python3 android_refactor_agent.py $PROJECT_PATH --execute"
    echo "3. Test your project after refactoring"
else
    echo ""
    echo "‚ÑπÔ∏è  To run the agent manually:"
    echo "   python3 android_refactor_agent.py $PROJECT_PATH"
    echo ""
fi

echo ""
echo "üéØ What the agent will do:"
echo "========================="
echo "‚Ä¢ Analyze your Android project structure"
echo "‚Ä¢ Identify files that don't follow Android naming conventions"
echo "‚Ä¢ Rename files with appropriate prefixes/suffixes:"
echo "  - Layout files: activity_, fragment_, item_, dialog_, etc."
echo "  - Java/Kotlin: Activity, Fragment, Adapter, Service, etc."
echo "  - Drawables: ic_, bg_, button_, etc."
echo "  - Menus: menu_ prefix"
echo "‚Ä¢ Update all references throughout your project"
echo "‚Ä¢ Generate a detailed report of all changes"
echo ""

echo "‚ú® Happy refactoring!"