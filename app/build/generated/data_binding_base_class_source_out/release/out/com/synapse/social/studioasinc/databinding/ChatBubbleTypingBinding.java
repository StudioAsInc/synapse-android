// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChatBubbleTypingBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout body;

  @NonNull
  public final LottieAnimationView lottieTyping;

  @NonNull
  public final CardView mProfileCard;

  @NonNull
  public final ImageView mProfileImage;

  @NonNull
  public final LinearLayout messageBG;

  @NonNull
  public final LinearLayout messageLayout;

  private ChatBubbleTypingBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout body,
      @NonNull LottieAnimationView lottieTyping, @NonNull CardView mProfileCard,
      @NonNull ImageView mProfileImage, @NonNull LinearLayout messageBG,
      @NonNull LinearLayout messageLayout) {
    this.rootView = rootView;
    this.body = body;
    this.lottieTyping = lottieTyping;
    this.mProfileCard = mProfileCard;
    this.mProfileImage = mProfileImage;
    this.messageBG = messageBG;
    this.messageLayout = messageLayout;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ChatBubbleTypingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChatBubbleTypingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.chat_bubble_typing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChatBubbleTypingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.body;
      LinearLayout body = ViewBindings.findChildViewById(rootView, id);
      if (body == null) {
        break missingId;
      }

      id = R.id.lottie_typing;
      LottieAnimationView lottieTyping = ViewBindings.findChildViewById(rootView, id);
      if (lottieTyping == null) {
        break missingId;
      }

      id = R.id.mProfileCard;
      CardView mProfileCard = ViewBindings.findChildViewById(rootView, id);
      if (mProfileCard == null) {
        break missingId;
      }

      id = R.id.mProfileImage;
      ImageView mProfileImage = ViewBindings.findChildViewById(rootView, id);
      if (mProfileImage == null) {
        break missingId;
      }

      id = R.id.messageBG;
      LinearLayout messageBG = ViewBindings.findChildViewById(rootView, id);
      if (messageBG == null) {
        break missingId;
      }

      id = R.id.message_layout;
      LinearLayout messageLayout = ViewBindings.findChildViewById(rootView, id);
      if (messageLayout == null) {
        break missingId;
      }

      return new ChatBubbleTypingBinding((LinearLayout) rootView, body, lottieTyping, mProfileCard,
          mProfileImage, messageBG, messageLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
