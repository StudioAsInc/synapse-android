// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.imageview.ShapeableImageView;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemGroupBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ShapeableImageView ivGroupIcon;

  @NonNull
  public final ImageView ivPrivateIndicator;

  @NonNull
  public final TextView tvGroupName;

  @NonNull
  public final TextView tvLastMessage;

  @NonNull
  public final TextView tvLastMessageTime;

  @NonNull
  public final TextView tvMemberCount;

  @NonNull
  public final View unreadIndicator;

  private ItemGroupBinding(@NonNull MaterialCardView rootView,
      @NonNull ShapeableImageView ivGroupIcon, @NonNull ImageView ivPrivateIndicator,
      @NonNull TextView tvGroupName, @NonNull TextView tvLastMessage,
      @NonNull TextView tvLastMessageTime, @NonNull TextView tvMemberCount,
      @NonNull View unreadIndicator) {
    this.rootView = rootView;
    this.ivGroupIcon = ivGroupIcon;
    this.ivPrivateIndicator = ivPrivateIndicator;
    this.tvGroupName = tvGroupName;
    this.tvLastMessage = tvLastMessage;
    this.tvLastMessageTime = tvLastMessageTime;
    this.tvMemberCount = tvMemberCount;
    this.unreadIndicator = unreadIndicator;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemGroupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemGroupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_group, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemGroupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivGroupIcon;
      ShapeableImageView ivGroupIcon = ViewBindings.findChildViewById(rootView, id);
      if (ivGroupIcon == null) {
        break missingId;
      }

      id = R.id.ivPrivateIndicator;
      ImageView ivPrivateIndicator = ViewBindings.findChildViewById(rootView, id);
      if (ivPrivateIndicator == null) {
        break missingId;
      }

      id = R.id.tvGroupName;
      TextView tvGroupName = ViewBindings.findChildViewById(rootView, id);
      if (tvGroupName == null) {
        break missingId;
      }

      id = R.id.tvLastMessage;
      TextView tvLastMessage = ViewBindings.findChildViewById(rootView, id);
      if (tvLastMessage == null) {
        break missingId;
      }

      id = R.id.tvLastMessageTime;
      TextView tvLastMessageTime = ViewBindings.findChildViewById(rootView, id);
      if (tvLastMessageTime == null) {
        break missingId;
      }

      id = R.id.tvMemberCount;
      TextView tvMemberCount = ViewBindings.findChildViewById(rootView, id);
      if (tvMemberCount == null) {
        break missingId;
      }

      id = R.id.unreadIndicator;
      View unreadIndicator = ViewBindings.findChildViewById(rootView, id);
      if (unreadIndicator == null) {
        break missingId;
      }

      return new ItemGroupBinding((MaterialCardView) rootView, ivGroupIcon, ivPrivateIndicator,
          tvGroupName, tvLastMessage, tvLastMessageTime, tvMemberCount, unreadIndicator);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
