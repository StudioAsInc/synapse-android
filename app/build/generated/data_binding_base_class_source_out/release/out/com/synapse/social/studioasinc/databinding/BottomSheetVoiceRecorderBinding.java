// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Chronometer;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cleveroad.audiovisualization.GLAudioVisualizationView;
import com.google.android.material.slider.RangeSlider;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetVoiceRecorderBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton cancelButton;

  @NonNull
  public final ImageButton deleteButton;

  @NonNull
  public final ImageButton pauseResumeButton;

  @NonNull
  public final TextView previewDuration;

  @NonNull
  public final ImageButton previewPlayPauseButton;

  @NonNull
  public final LinearLayout previewView;

  @NonNull
  public final Chronometer recordingTimer;

  @NonNull
  public final LinearLayout recordingView;

  @NonNull
  public final Button sendButton;

  @NonNull
  public final ImageButton stopButton;

  @NonNull
  public final RangeSlider trimSlider;

  @NonNull
  public final GLAudioVisualizationView waveformView;

  private BottomSheetVoiceRecorderBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton cancelButton, @NonNull ImageButton deleteButton,
      @NonNull ImageButton pauseResumeButton, @NonNull TextView previewDuration,
      @NonNull ImageButton previewPlayPauseButton, @NonNull LinearLayout previewView,
      @NonNull Chronometer recordingTimer, @NonNull LinearLayout recordingView,
      @NonNull Button sendButton, @NonNull ImageButton stopButton, @NonNull RangeSlider trimSlider,
      @NonNull GLAudioVisualizationView waveformView) {
    this.rootView = rootView;
    this.cancelButton = cancelButton;
    this.deleteButton = deleteButton;
    this.pauseResumeButton = pauseResumeButton;
    this.previewDuration = previewDuration;
    this.previewPlayPauseButton = previewPlayPauseButton;
    this.previewView = previewView;
    this.recordingTimer = recordingTimer;
    this.recordingView = recordingView;
    this.sendButton = sendButton;
    this.stopButton = stopButton;
    this.trimSlider = trimSlider;
    this.waveformView = waveformView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetVoiceRecorderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetVoiceRecorderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_voice_recorder, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetVoiceRecorderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancel_button;
      ImageButton cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.delete_button;
      ImageButton deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.pause_resume_button;
      ImageButton pauseResumeButton = ViewBindings.findChildViewById(rootView, id);
      if (pauseResumeButton == null) {
        break missingId;
      }

      id = R.id.preview_duration;
      TextView previewDuration = ViewBindings.findChildViewById(rootView, id);
      if (previewDuration == null) {
        break missingId;
      }

      id = R.id.preview_play_pause_button;
      ImageButton previewPlayPauseButton = ViewBindings.findChildViewById(rootView, id);
      if (previewPlayPauseButton == null) {
        break missingId;
      }

      id = R.id.preview_view;
      LinearLayout previewView = ViewBindings.findChildViewById(rootView, id);
      if (previewView == null) {
        break missingId;
      }

      id = R.id.recording_timer;
      Chronometer recordingTimer = ViewBindings.findChildViewById(rootView, id);
      if (recordingTimer == null) {
        break missingId;
      }

      id = R.id.recording_view;
      LinearLayout recordingView = ViewBindings.findChildViewById(rootView, id);
      if (recordingView == null) {
        break missingId;
      }

      id = R.id.send_button;
      Button sendButton = ViewBindings.findChildViewById(rootView, id);
      if (sendButton == null) {
        break missingId;
      }

      id = R.id.stop_button;
      ImageButton stopButton = ViewBindings.findChildViewById(rootView, id);
      if (stopButton == null) {
        break missingId;
      }

      id = R.id.trim_slider;
      RangeSlider trimSlider = ViewBindings.findChildViewById(rootView, id);
      if (trimSlider == null) {
        break missingId;
      }

      id = R.id.waveform_view;
      GLAudioVisualizationView waveformView = ViewBindings.findChildViewById(rootView, id);
      if (waveformView == null) {
        break missingId;
      }

      return new BottomSheetVoiceRecorderBinding((LinearLayout) rootView, cancelButton,
          deleteButton, pauseResumeButton, previewDuration, previewPlayPauseButton, previewView,
          recordingTimer, recordingView, sendButton, stopButton, trimSlider, waveformView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
