// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DebugBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout Main;

  @NonNull
  public final LinearLayout body;

  @NonNull
  public final CardView cardview1;

  @NonNull
  public final Button clearDataBtn;

  @NonNull
  public final TextView errorText;

  @NonNull
  public final ImageView icBug;

  @NonNull
  public final ScrollView scroll;

  @NonNull
  public final TextView subtitle;

  @NonNull
  public final TextView title;

  private DebugBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout Main,
      @NonNull LinearLayout body, @NonNull CardView cardview1, @NonNull Button clearDataBtn,
      @NonNull TextView errorText, @NonNull ImageView icBug, @NonNull ScrollView scroll,
      @NonNull TextView subtitle, @NonNull TextView title) {
    this.rootView = rootView;
    this.Main = Main;
    this.body = body;
    this.cardview1 = cardview1;
    this.clearDataBtn = clearDataBtn;
    this.errorText = errorText;
    this.icBug = icBug;
    this.scroll = scroll;
    this.subtitle = subtitle;
    this.title = title;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DebugBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DebugBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.debug, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DebugBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout Main = (LinearLayout) rootView;

      id = R.id.body;
      LinearLayout body = ViewBindings.findChildViewById(rootView, id);
      if (body == null) {
        break missingId;
      }

      id = R.id.cardview1;
      CardView cardview1 = ViewBindings.findChildViewById(rootView, id);
      if (cardview1 == null) {
        break missingId;
      }

      id = R.id.clearData_btn;
      Button clearDataBtn = ViewBindings.findChildViewById(rootView, id);
      if (clearDataBtn == null) {
        break missingId;
      }

      id = R.id.error_text;
      TextView errorText = ViewBindings.findChildViewById(rootView, id);
      if (errorText == null) {
        break missingId;
      }

      id = R.id.ic_bug;
      ImageView icBug = ViewBindings.findChildViewById(rootView, id);
      if (icBug == null) {
        break missingId;
      }

      id = R.id.scroll;
      ScrollView scroll = ViewBindings.findChildViewById(rootView, id);
      if (scroll == null) {
        break missingId;
      }

      id = R.id.subtitle;
      TextView subtitle = ViewBindings.findChildViewById(rootView, id);
      if (subtitle == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new DebugBinding((LinearLayout) rootView, Main, body, cardview1, clearDataBtn,
          errorText, icBug, scroll, subtitle, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
