// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SynapseCreateImgPostImageCvBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView image;

  @NonNull
  public final CardView main;

  @NonNull
  public final TextView mediaDuration;

  @NonNull
  public final RelativeLayout relative;

  @NonNull
  public final LinearLayout relativeSpc;

  @NonNull
  public final LinearLayout relativeTop;

  @NonNull
  public final LinearLayout rvtSpc;

  @NonNull
  public final ImageView typeIcon;

  private SynapseCreateImgPostImageCvBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView image, @NonNull CardView main, @NonNull TextView mediaDuration,
      @NonNull RelativeLayout relative, @NonNull LinearLayout relativeSpc,
      @NonNull LinearLayout relativeTop, @NonNull LinearLayout rvtSpc,
      @NonNull ImageView typeIcon) {
    this.rootView = rootView;
    this.image = image;
    this.main = main;
    this.mediaDuration = mediaDuration;
    this.relative = relative;
    this.relativeSpc = relativeSpc;
    this.relativeTop = relativeTop;
    this.rvtSpc = rvtSpc;
    this.typeIcon = typeIcon;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SynapseCreateImgPostImageCvBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SynapseCreateImgPostImageCvBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.synapse_create_img_post_image_cv, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SynapseCreateImgPostImageCvBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.image;
      ImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.main;
      CardView main = ViewBindings.findChildViewById(rootView, id);
      if (main == null) {
        break missingId;
      }

      id = R.id.mediaDuration;
      TextView mediaDuration = ViewBindings.findChildViewById(rootView, id);
      if (mediaDuration == null) {
        break missingId;
      }

      id = R.id.relative;
      RelativeLayout relative = ViewBindings.findChildViewById(rootView, id);
      if (relative == null) {
        break missingId;
      }

      id = R.id.relativeSpc;
      LinearLayout relativeSpc = ViewBindings.findChildViewById(rootView, id);
      if (relativeSpc == null) {
        break missingId;
      }

      id = R.id.relativeTop;
      LinearLayout relativeTop = ViewBindings.findChildViewById(rootView, id);
      if (relativeTop == null) {
        break missingId;
      }

      id = R.id.rvtSpc;
      LinearLayout rvtSpc = ViewBindings.findChildViewById(rootView, id);
      if (rvtSpc == null) {
        break missingId;
      }

      id = R.id.typeIcon;
      ImageView typeIcon = ViewBindings.findChildViewById(rootView, id);
      if (typeIcon == null) {
        break missingId;
      }

      return new SynapseCreateImgPostImageCvBinding((LinearLayout) rootView, image, main,
          mediaDuration, relative, relativeSpc, relativeTop, rvtSpc, typeIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
