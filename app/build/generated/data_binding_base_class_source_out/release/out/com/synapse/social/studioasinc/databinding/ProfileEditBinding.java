// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.synapse.social.studioasinc.FadeEditText;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProfileEditBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout Main;

  @NonNull
  public final LinearLayout body;

  @NonNull
  public final LinearLayout coverImageHistoryStage;

  @NonNull
  public final ImageView coverImageHistoryStageArrow;

  @NonNull
  public final TextView coverImageHistoryStageSubtext;

  @NonNull
  public final TextView coverImageHistoryStageTitle;

  @NonNull
  public final LinearLayout coverImageHistoryStageTop;

  @NonNull
  public final LinearLayout gender;

  @NonNull
  public final LinearLayout genderFemale;

  @NonNull
  public final ImageView genderFemaleCheckbox;

  @NonNull
  public final ImageView genderFemaleIc;

  @NonNull
  public final TextView genderFemaleTitle;

  @NonNull
  public final LinearLayout genderGone;

  @NonNull
  public final ImageView genderGoneCheckbox;

  @NonNull
  public final ImageView genderGoneIc;

  @NonNull
  public final TextView genderGoneTitle;

  @NonNull
  public final LinearLayout genderMale;

  @NonNull
  public final ImageView genderMaleCheckbox;

  @NonNull
  public final ImageView genderMaleIc;

  @NonNull
  public final TextView genderMaleTitle;

  @NonNull
  public final LinearLayout genderSpc1;

  @NonNull
  public final LinearLayout genderSpc2;

  @NonNull
  public final TextView genderSubtitle;

  @NonNull
  public final TextView genderTitle;

  @NonNull
  public final ImageView mBack;

  @NonNull
  public final FadeEditText mBiographyInput;

  @NonNull
  public final ProgressBar mLoadingBar;

  @NonNull
  public final LinearLayout mLoadingBody;

  @NonNull
  public final FadeEditText mNicknameInput;

  @NonNull
  public final ImageView mSave;

  @NonNull
  public final ScrollView mScroll;

  @NonNull
  public final LinearLayout mScrollBody;

  @NonNull
  public final TextView mTitle;

  @NonNull
  public final FadeEditText mUsernameInput;

  @NonNull
  public final ImageView profileCoverImage;

  @NonNull
  public final LinearLayout profileImageHistoryStage;

  @NonNull
  public final ImageView profileImageHistoryStageArrow;

  @NonNull
  public final TextView profileImageHistoryStageSubtext;

  @NonNull
  public final TextView profileImageHistoryStageTitle;

  @NonNull
  public final LinearLayout profileImageHistoryStageTop;

  @NonNull
  public final CardView profileRelativeCard;

  @NonNull
  public final LinearLayout region;

  @NonNull
  public final ImageView regionArrow;

  @NonNull
  public final TextView regionSubtitle;

  @NonNull
  public final TextView regionTitle;

  @NonNull
  public final LinearLayout regionTop;

  @NonNull
  public final RelativeLayout stage1Relative;

  @NonNull
  public final LinearLayout stage1RelativeUp;

  @NonNull
  public final CardView stage1RelativeUpProfileCard;

  @NonNull
  public final ImageView stage1RelativeUpProfileImage;

  @NonNull
  public final LinearLayout top;

  private ProfileEditBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout Main,
      @NonNull LinearLayout body, @NonNull LinearLayout coverImageHistoryStage,
      @NonNull ImageView coverImageHistoryStageArrow,
      @NonNull TextView coverImageHistoryStageSubtext,
      @NonNull TextView coverImageHistoryStageTitle,
      @NonNull LinearLayout coverImageHistoryStageTop, @NonNull LinearLayout gender,
      @NonNull LinearLayout genderFemale, @NonNull ImageView genderFemaleCheckbox,
      @NonNull ImageView genderFemaleIc, @NonNull TextView genderFemaleTitle,
      @NonNull LinearLayout genderGone, @NonNull ImageView genderGoneCheckbox,
      @NonNull ImageView genderGoneIc, @NonNull TextView genderGoneTitle,
      @NonNull LinearLayout genderMale, @NonNull ImageView genderMaleCheckbox,
      @NonNull ImageView genderMaleIc, @NonNull TextView genderMaleTitle,
      @NonNull LinearLayout genderSpc1, @NonNull LinearLayout genderSpc2,
      @NonNull TextView genderSubtitle, @NonNull TextView genderTitle, @NonNull ImageView mBack,
      @NonNull FadeEditText mBiographyInput, @NonNull ProgressBar mLoadingBar,
      @NonNull LinearLayout mLoadingBody, @NonNull FadeEditText mNicknameInput,
      @NonNull ImageView mSave, @NonNull ScrollView mScroll, @NonNull LinearLayout mScrollBody,
      @NonNull TextView mTitle, @NonNull FadeEditText mUsernameInput,
      @NonNull ImageView profileCoverImage, @NonNull LinearLayout profileImageHistoryStage,
      @NonNull ImageView profileImageHistoryStageArrow,
      @NonNull TextView profileImageHistoryStageSubtext,
      @NonNull TextView profileImageHistoryStageTitle,
      @NonNull LinearLayout profileImageHistoryStageTop, @NonNull CardView profileRelativeCard,
      @NonNull LinearLayout region, @NonNull ImageView regionArrow,
      @NonNull TextView regionSubtitle, @NonNull TextView regionTitle,
      @NonNull LinearLayout regionTop, @NonNull RelativeLayout stage1Relative,
      @NonNull LinearLayout stage1RelativeUp, @NonNull CardView stage1RelativeUpProfileCard,
      @NonNull ImageView stage1RelativeUpProfileImage, @NonNull LinearLayout top) {
    this.rootView = rootView;
    this.Main = Main;
    this.body = body;
    this.coverImageHistoryStage = coverImageHistoryStage;
    this.coverImageHistoryStageArrow = coverImageHistoryStageArrow;
    this.coverImageHistoryStageSubtext = coverImageHistoryStageSubtext;
    this.coverImageHistoryStageTitle = coverImageHistoryStageTitle;
    this.coverImageHistoryStageTop = coverImageHistoryStageTop;
    this.gender = gender;
    this.genderFemale = genderFemale;
    this.genderFemaleCheckbox = genderFemaleCheckbox;
    this.genderFemaleIc = genderFemaleIc;
    this.genderFemaleTitle = genderFemaleTitle;
    this.genderGone = genderGone;
    this.genderGoneCheckbox = genderGoneCheckbox;
    this.genderGoneIc = genderGoneIc;
    this.genderGoneTitle = genderGoneTitle;
    this.genderMale = genderMale;
    this.genderMaleCheckbox = genderMaleCheckbox;
    this.genderMaleIc = genderMaleIc;
    this.genderMaleTitle = genderMaleTitle;
    this.genderSpc1 = genderSpc1;
    this.genderSpc2 = genderSpc2;
    this.genderSubtitle = genderSubtitle;
    this.genderTitle = genderTitle;
    this.mBack = mBack;
    this.mBiographyInput = mBiographyInput;
    this.mLoadingBar = mLoadingBar;
    this.mLoadingBody = mLoadingBody;
    this.mNicknameInput = mNicknameInput;
    this.mSave = mSave;
    this.mScroll = mScroll;
    this.mScrollBody = mScrollBody;
    this.mTitle = mTitle;
    this.mUsernameInput = mUsernameInput;
    this.profileCoverImage = profileCoverImage;
    this.profileImageHistoryStage = profileImageHistoryStage;
    this.profileImageHistoryStageArrow = profileImageHistoryStageArrow;
    this.profileImageHistoryStageSubtext = profileImageHistoryStageSubtext;
    this.profileImageHistoryStageTitle = profileImageHistoryStageTitle;
    this.profileImageHistoryStageTop = profileImageHistoryStageTop;
    this.profileRelativeCard = profileRelativeCard;
    this.region = region;
    this.regionArrow = regionArrow;
    this.regionSubtitle = regionSubtitle;
    this.regionTitle = regionTitle;
    this.regionTop = regionTop;
    this.stage1Relative = stage1Relative;
    this.stage1RelativeUp = stage1RelativeUp;
    this.stage1RelativeUpProfileCard = stage1RelativeUpProfileCard;
    this.stage1RelativeUpProfileImage = stage1RelativeUpProfileImage;
    this.top = top;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ProfileEditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProfileEditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.profile_edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProfileEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout Main = (LinearLayout) rootView;

      id = R.id.body;
      LinearLayout body = ViewBindings.findChildViewById(rootView, id);
      if (body == null) {
        break missingId;
      }

      id = R.id.cover_image_history_stage;
      LinearLayout coverImageHistoryStage = ViewBindings.findChildViewById(rootView, id);
      if (coverImageHistoryStage == null) {
        break missingId;
      }

      id = R.id.cover_image_history_stage_arrow;
      ImageView coverImageHistoryStageArrow = ViewBindings.findChildViewById(rootView, id);
      if (coverImageHistoryStageArrow == null) {
        break missingId;
      }

      id = R.id.cover_image_history_stage_subtext;
      TextView coverImageHistoryStageSubtext = ViewBindings.findChildViewById(rootView, id);
      if (coverImageHistoryStageSubtext == null) {
        break missingId;
      }

      id = R.id.cover_image_history_stage_title;
      TextView coverImageHistoryStageTitle = ViewBindings.findChildViewById(rootView, id);
      if (coverImageHistoryStageTitle == null) {
        break missingId;
      }

      id = R.id.cover_image_history_stage_top;
      LinearLayout coverImageHistoryStageTop = ViewBindings.findChildViewById(rootView, id);
      if (coverImageHistoryStageTop == null) {
        break missingId;
      }

      id = R.id.gender;
      LinearLayout gender = ViewBindings.findChildViewById(rootView, id);
      if (gender == null) {
        break missingId;
      }

      id = R.id.gender_female;
      LinearLayout genderFemale = ViewBindings.findChildViewById(rootView, id);
      if (genderFemale == null) {
        break missingId;
      }

      id = R.id.gender_female_checkbox;
      ImageView genderFemaleCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (genderFemaleCheckbox == null) {
        break missingId;
      }

      id = R.id.gender_female_ic;
      ImageView genderFemaleIc = ViewBindings.findChildViewById(rootView, id);
      if (genderFemaleIc == null) {
        break missingId;
      }

      id = R.id.gender_female_title;
      TextView genderFemaleTitle = ViewBindings.findChildViewById(rootView, id);
      if (genderFemaleTitle == null) {
        break missingId;
      }

      id = R.id.gender_gone;
      LinearLayout genderGone = ViewBindings.findChildViewById(rootView, id);
      if (genderGone == null) {
        break missingId;
      }

      id = R.id.gender_gone_checkbox;
      ImageView genderGoneCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (genderGoneCheckbox == null) {
        break missingId;
      }

      id = R.id.gender_gone_ic;
      ImageView genderGoneIc = ViewBindings.findChildViewById(rootView, id);
      if (genderGoneIc == null) {
        break missingId;
      }

      id = R.id.gender_gone_title;
      TextView genderGoneTitle = ViewBindings.findChildViewById(rootView, id);
      if (genderGoneTitle == null) {
        break missingId;
      }

      id = R.id.gender_male;
      LinearLayout genderMale = ViewBindings.findChildViewById(rootView, id);
      if (genderMale == null) {
        break missingId;
      }

      id = R.id.gender_male_checkbox;
      ImageView genderMaleCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (genderMaleCheckbox == null) {
        break missingId;
      }

      id = R.id.gender_male_ic;
      ImageView genderMaleIc = ViewBindings.findChildViewById(rootView, id);
      if (genderMaleIc == null) {
        break missingId;
      }

      id = R.id.gender_male_title;
      TextView genderMaleTitle = ViewBindings.findChildViewById(rootView, id);
      if (genderMaleTitle == null) {
        break missingId;
      }

      id = R.id.gender_spc1;
      LinearLayout genderSpc1 = ViewBindings.findChildViewById(rootView, id);
      if (genderSpc1 == null) {
        break missingId;
      }

      id = R.id.gender_spc2;
      LinearLayout genderSpc2 = ViewBindings.findChildViewById(rootView, id);
      if (genderSpc2 == null) {
        break missingId;
      }

      id = R.id.gender_subtitle;
      TextView genderSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (genderSubtitle == null) {
        break missingId;
      }

      id = R.id.gender_title;
      TextView genderTitle = ViewBindings.findChildViewById(rootView, id);
      if (genderTitle == null) {
        break missingId;
      }

      id = R.id.mBack;
      ImageView mBack = ViewBindings.findChildViewById(rootView, id);
      if (mBack == null) {
        break missingId;
      }

      id = R.id.mBiographyInput;
      FadeEditText mBiographyInput = ViewBindings.findChildViewById(rootView, id);
      if (mBiographyInput == null) {
        break missingId;
      }

      id = R.id.mLoadingBar;
      ProgressBar mLoadingBar = ViewBindings.findChildViewById(rootView, id);
      if (mLoadingBar == null) {
        break missingId;
      }

      id = R.id.mLoadingBody;
      LinearLayout mLoadingBody = ViewBindings.findChildViewById(rootView, id);
      if (mLoadingBody == null) {
        break missingId;
      }

      id = R.id.mNicknameInput;
      FadeEditText mNicknameInput = ViewBindings.findChildViewById(rootView, id);
      if (mNicknameInput == null) {
        break missingId;
      }

      id = R.id.mSave;
      ImageView mSave = ViewBindings.findChildViewById(rootView, id);
      if (mSave == null) {
        break missingId;
      }

      id = R.id.mScroll;
      ScrollView mScroll = ViewBindings.findChildViewById(rootView, id);
      if (mScroll == null) {
        break missingId;
      }

      id = R.id.mScrollBody;
      LinearLayout mScrollBody = ViewBindings.findChildViewById(rootView, id);
      if (mScrollBody == null) {
        break missingId;
      }

      id = R.id.mTitle;
      TextView mTitle = ViewBindings.findChildViewById(rootView, id);
      if (mTitle == null) {
        break missingId;
      }

      id = R.id.mUsernameInput;
      FadeEditText mUsernameInput = ViewBindings.findChildViewById(rootView, id);
      if (mUsernameInput == null) {
        break missingId;
      }

      id = R.id.profileCoverImage;
      ImageView profileCoverImage = ViewBindings.findChildViewById(rootView, id);
      if (profileCoverImage == null) {
        break missingId;
      }

      id = R.id.profile_image_history_stage;
      LinearLayout profileImageHistoryStage = ViewBindings.findChildViewById(rootView, id);
      if (profileImageHistoryStage == null) {
        break missingId;
      }

      id = R.id.profile_image_history_stage_arrow;
      ImageView profileImageHistoryStageArrow = ViewBindings.findChildViewById(rootView, id);
      if (profileImageHistoryStageArrow == null) {
        break missingId;
      }

      id = R.id.profile_image_history_stage_subtext;
      TextView profileImageHistoryStageSubtext = ViewBindings.findChildViewById(rootView, id);
      if (profileImageHistoryStageSubtext == null) {
        break missingId;
      }

      id = R.id.profile_image_history_stage_title;
      TextView profileImageHistoryStageTitle = ViewBindings.findChildViewById(rootView, id);
      if (profileImageHistoryStageTitle == null) {
        break missingId;
      }

      id = R.id.profile_image_history_stage_top;
      LinearLayout profileImageHistoryStageTop = ViewBindings.findChildViewById(rootView, id);
      if (profileImageHistoryStageTop == null) {
        break missingId;
      }

      id = R.id.profileRelativeCard;
      CardView profileRelativeCard = ViewBindings.findChildViewById(rootView, id);
      if (profileRelativeCard == null) {
        break missingId;
      }

      id = R.id.region;
      LinearLayout region = ViewBindings.findChildViewById(rootView, id);
      if (region == null) {
        break missingId;
      }

      id = R.id.region_arrow;
      ImageView regionArrow = ViewBindings.findChildViewById(rootView, id);
      if (regionArrow == null) {
        break missingId;
      }

      id = R.id.region_subtitle;
      TextView regionSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (regionSubtitle == null) {
        break missingId;
      }

      id = R.id.region_title;
      TextView regionTitle = ViewBindings.findChildViewById(rootView, id);
      if (regionTitle == null) {
        break missingId;
      }

      id = R.id.region_top;
      LinearLayout regionTop = ViewBindings.findChildViewById(rootView, id);
      if (regionTop == null) {
        break missingId;
      }

      id = R.id.stage1Relative;
      RelativeLayout stage1Relative = ViewBindings.findChildViewById(rootView, id);
      if (stage1Relative == null) {
        break missingId;
      }

      id = R.id.stage1RelativeUp;
      LinearLayout stage1RelativeUp = ViewBindings.findChildViewById(rootView, id);
      if (stage1RelativeUp == null) {
        break missingId;
      }

      id = R.id.stage1RelativeUpProfileCard;
      CardView stage1RelativeUpProfileCard = ViewBindings.findChildViewById(rootView, id);
      if (stage1RelativeUpProfileCard == null) {
        break missingId;
      }

      id = R.id.stage1RelativeUpProfileImage;
      ImageView stage1RelativeUpProfileImage = ViewBindings.findChildViewById(rootView, id);
      if (stage1RelativeUpProfileImage == null) {
        break missingId;
      }

      id = R.id.top;
      LinearLayout top = ViewBindings.findChildViewById(rootView, id);
      if (top == null) {
        break missingId;
      }

      return new ProfileEditBinding((LinearLayout) rootView, Main, body, coverImageHistoryStage,
          coverImageHistoryStageArrow, coverImageHistoryStageSubtext, coverImageHistoryStageTitle,
          coverImageHistoryStageTop, gender, genderFemale, genderFemaleCheckbox, genderFemaleIc,
          genderFemaleTitle, genderGone, genderGoneCheckbox, genderGoneIc, genderGoneTitle,
          genderMale, genderMaleCheckbox, genderMaleIc, genderMaleTitle, genderSpc1, genderSpc2,
          genderSubtitle, genderTitle, mBack, mBiographyInput, mLoadingBar, mLoadingBody,
          mNicknameInput, mSave, mScroll, mScrollBody, mTitle, mUsernameInput, profileCoverImage,
          profileImageHistoryStage, profileImageHistoryStageArrow, profileImageHistoryStageSubtext,
          profileImageHistoryStageTitle, profileImageHistoryStageTop, profileRelativeCard, region,
          regionArrow, regionSubtitle, regionTitle, regionTop, stage1Relative, stage1RelativeUp,
          stage1RelativeUpProfileCard, stage1RelativeUpProfileImage, top);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
