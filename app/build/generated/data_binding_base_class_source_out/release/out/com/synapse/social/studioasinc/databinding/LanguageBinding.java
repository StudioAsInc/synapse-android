// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LanguageBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout devider;

  @NonNull
  public final TextView languageName;

  @NonNull
  public final TextView languagePreview;

  @NonNull
  public final LinearLayout linear2;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final ImageView selectionIc;

  private LanguageBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout devider,
      @NonNull TextView languageName, @NonNull TextView languagePreview,
      @NonNull LinearLayout linear2, @NonNull LinearLayout main, @NonNull ImageView selectionIc) {
    this.rootView = rootView;
    this.devider = devider;
    this.languageName = languageName;
    this.languagePreview = languagePreview;
    this.linear2 = linear2;
    this.main = main;
    this.selectionIc = selectionIc;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LanguageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LanguageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.language, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LanguageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.devider;
      LinearLayout devider = ViewBindings.findChildViewById(rootView, id);
      if (devider == null) {
        break missingId;
      }

      id = R.id.language_name;
      TextView languageName = ViewBindings.findChildViewById(rootView, id);
      if (languageName == null) {
        break missingId;
      }

      id = R.id.language_preview;
      TextView languagePreview = ViewBindings.findChildViewById(rootView, id);
      if (languagePreview == null) {
        break missingId;
      }

      id = R.id.linear2;
      LinearLayout linear2 = ViewBindings.findChildViewById(rootView, id);
      if (linear2 == null) {
        break missingId;
      }

      id = R.id.main;
      LinearLayout main = ViewBindings.findChildViewById(rootView, id);
      if (main == null) {
        break missingId;
      }

      id = R.id.selection_ic;
      ImageView selectionIc = ViewBindings.findChildViewById(rootView, id);
      if (selectionIc == null) {
        break missingId;
      }

      return new LanguageBinding((LinearLayout) rootView, devider, languageName, languagePreview,
          linear2, main, selectionIc);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
