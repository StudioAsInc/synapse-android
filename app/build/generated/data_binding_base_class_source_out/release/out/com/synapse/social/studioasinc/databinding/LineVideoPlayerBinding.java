// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LineVideoPlayerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout Main;

  @NonNull
  public final LinearLayout body;

  @NonNull
  public final LinearLayout bottomBar;

  @NonNull
  public final LinearLayout bottomChats;

  @NonNull
  public final ImageView bottomChatsIc;

  @NonNull
  public final LinearLayout bottomHome;

  @NonNull
  public final ImageView bottomHomeIc;

  @NonNull
  public final LinearLayout bottomProfile;

  @NonNull
  public final ImageView bottomProfileIc;

  @NonNull
  public final LinearLayout bottomSearch;

  @NonNull
  public final ImageView bottomSearchIc;

  @NonNull
  public final LinearLayout bottomVideos;

  @NonNull
  public final ImageView bottomVideosIc;

  @NonNull
  public final LinearLayout loadedBody;

  @NonNull
  public final RelativeLayout middleRelative;

  @NonNull
  public final LinearLayout middleRelativeBottom;

  @NonNull
  public final LinearLayout middleRelativeBottomTop;

  @NonNull
  public final ImageView middleRelativeBottomTopBack;

  @NonNull
  public final ImageView middleRelativeBottomTopCoverIc;

  @NonNull
  public final LinearLayout middleRelativeTop;

  @NonNull
  public final SwipeRefreshLayout middleRelativeTopSwipe;

  @NonNull
  public final LinearLayout middleRelativeTopSwipeBody;

  @NonNull
  public final LinearLayout noInternetBody;

  @NonNull
  public final ImageView noInternetBodyIc;

  @NonNull
  public final TextView noInternetBodyRetry;

  @NonNull
  public final TextView noInternetBodySubtitle;

  @NonNull
  public final TextView noInternetBodyTitle;

  @NonNull
  public final RecyclerView videosRecyclerView;

  private LineVideoPlayerBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout Main,
      @NonNull LinearLayout body, @NonNull LinearLayout bottomBar,
      @NonNull LinearLayout bottomChats, @NonNull ImageView bottomChatsIc,
      @NonNull LinearLayout bottomHome, @NonNull ImageView bottomHomeIc,
      @NonNull LinearLayout bottomProfile, @NonNull ImageView bottomProfileIc,
      @NonNull LinearLayout bottomSearch, @NonNull ImageView bottomSearchIc,
      @NonNull LinearLayout bottomVideos, @NonNull ImageView bottomVideosIc,
      @NonNull LinearLayout loadedBody, @NonNull RelativeLayout middleRelative,
      @NonNull LinearLayout middleRelativeBottom, @NonNull LinearLayout middleRelativeBottomTop,
      @NonNull ImageView middleRelativeBottomTopBack,
      @NonNull ImageView middleRelativeBottomTopCoverIc, @NonNull LinearLayout middleRelativeTop,
      @NonNull SwipeRefreshLayout middleRelativeTopSwipe,
      @NonNull LinearLayout middleRelativeTopSwipeBody, @NonNull LinearLayout noInternetBody,
      @NonNull ImageView noInternetBodyIc, @NonNull TextView noInternetBodyRetry,
      @NonNull TextView noInternetBodySubtitle, @NonNull TextView noInternetBodyTitle,
      @NonNull RecyclerView videosRecyclerView) {
    this.rootView = rootView;
    this.Main = Main;
    this.body = body;
    this.bottomBar = bottomBar;
    this.bottomChats = bottomChats;
    this.bottomChatsIc = bottomChatsIc;
    this.bottomHome = bottomHome;
    this.bottomHomeIc = bottomHomeIc;
    this.bottomProfile = bottomProfile;
    this.bottomProfileIc = bottomProfileIc;
    this.bottomSearch = bottomSearch;
    this.bottomSearchIc = bottomSearchIc;
    this.bottomVideos = bottomVideos;
    this.bottomVideosIc = bottomVideosIc;
    this.loadedBody = loadedBody;
    this.middleRelative = middleRelative;
    this.middleRelativeBottom = middleRelativeBottom;
    this.middleRelativeBottomTop = middleRelativeBottomTop;
    this.middleRelativeBottomTopBack = middleRelativeBottomTopBack;
    this.middleRelativeBottomTopCoverIc = middleRelativeBottomTopCoverIc;
    this.middleRelativeTop = middleRelativeTop;
    this.middleRelativeTopSwipe = middleRelativeTopSwipe;
    this.middleRelativeTopSwipeBody = middleRelativeTopSwipeBody;
    this.noInternetBody = noInternetBody;
    this.noInternetBodyIc = noInternetBodyIc;
    this.noInternetBodyRetry = noInternetBodyRetry;
    this.noInternetBodySubtitle = noInternetBodySubtitle;
    this.noInternetBodyTitle = noInternetBodyTitle;
    this.videosRecyclerView = videosRecyclerView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LineVideoPlayerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LineVideoPlayerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.line_video_player, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LineVideoPlayerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout Main = (LinearLayout) rootView;

      id = R.id.body;
      LinearLayout body = ViewBindings.findChildViewById(rootView, id);
      if (body == null) {
        break missingId;
      }

      id = R.id.bottomBar;
      LinearLayout bottomBar = ViewBindings.findChildViewById(rootView, id);
      if (bottomBar == null) {
        break missingId;
      }

      id = R.id.bottom_chats;
      LinearLayout bottomChats = ViewBindings.findChildViewById(rootView, id);
      if (bottomChats == null) {
        break missingId;
      }

      id = R.id.bottom_chats_ic;
      ImageView bottomChatsIc = ViewBindings.findChildViewById(rootView, id);
      if (bottomChatsIc == null) {
        break missingId;
      }

      id = R.id.bottom_home;
      LinearLayout bottomHome = ViewBindings.findChildViewById(rootView, id);
      if (bottomHome == null) {
        break missingId;
      }

      id = R.id.bottom_home_ic;
      ImageView bottomHomeIc = ViewBindings.findChildViewById(rootView, id);
      if (bottomHomeIc == null) {
        break missingId;
      }

      id = R.id.bottom_profile;
      LinearLayout bottomProfile = ViewBindings.findChildViewById(rootView, id);
      if (bottomProfile == null) {
        break missingId;
      }

      id = R.id.bottom_profile_ic;
      ImageView bottomProfileIc = ViewBindings.findChildViewById(rootView, id);
      if (bottomProfileIc == null) {
        break missingId;
      }

      id = R.id.bottom_search;
      LinearLayout bottomSearch = ViewBindings.findChildViewById(rootView, id);
      if (bottomSearch == null) {
        break missingId;
      }

      id = R.id.bottom_search_ic;
      ImageView bottomSearchIc = ViewBindings.findChildViewById(rootView, id);
      if (bottomSearchIc == null) {
        break missingId;
      }

      id = R.id.bottom_videos;
      LinearLayout bottomVideos = ViewBindings.findChildViewById(rootView, id);
      if (bottomVideos == null) {
        break missingId;
      }

      id = R.id.bottom_videos_ic;
      ImageView bottomVideosIc = ViewBindings.findChildViewById(rootView, id);
      if (bottomVideosIc == null) {
        break missingId;
      }

      id = R.id.loadedBody;
      LinearLayout loadedBody = ViewBindings.findChildViewById(rootView, id);
      if (loadedBody == null) {
        break missingId;
      }

      id = R.id.middleRelative;
      RelativeLayout middleRelative = ViewBindings.findChildViewById(rootView, id);
      if (middleRelative == null) {
        break missingId;
      }

      id = R.id.middleRelativeBottom;
      LinearLayout middleRelativeBottom = ViewBindings.findChildViewById(rootView, id);
      if (middleRelativeBottom == null) {
        break missingId;
      }

      id = R.id.middleRelativeBottomTop;
      LinearLayout middleRelativeBottomTop = ViewBindings.findChildViewById(rootView, id);
      if (middleRelativeBottomTop == null) {
        break missingId;
      }

      id = R.id.middleRelativeBottomTopBack;
      ImageView middleRelativeBottomTopBack = ViewBindings.findChildViewById(rootView, id);
      if (middleRelativeBottomTopBack == null) {
        break missingId;
      }

      id = R.id.middleRelativeBottomTopCoverIc;
      ImageView middleRelativeBottomTopCoverIc = ViewBindings.findChildViewById(rootView, id);
      if (middleRelativeBottomTopCoverIc == null) {
        break missingId;
      }

      id = R.id.middleRelativeTop;
      LinearLayout middleRelativeTop = ViewBindings.findChildViewById(rootView, id);
      if (middleRelativeTop == null) {
        break missingId;
      }

      id = R.id.middleRelativeTopSwipe;
      SwipeRefreshLayout middleRelativeTopSwipe = ViewBindings.findChildViewById(rootView, id);
      if (middleRelativeTopSwipe == null) {
        break missingId;
      }

      id = R.id.middleRelativeTopSwipeBody;
      LinearLayout middleRelativeTopSwipeBody = ViewBindings.findChildViewById(rootView, id);
      if (middleRelativeTopSwipeBody == null) {
        break missingId;
      }

      id = R.id.noInternetBody;
      LinearLayout noInternetBody = ViewBindings.findChildViewById(rootView, id);
      if (noInternetBody == null) {
        break missingId;
      }

      id = R.id.noInternetBodyIc;
      ImageView noInternetBodyIc = ViewBindings.findChildViewById(rootView, id);
      if (noInternetBodyIc == null) {
        break missingId;
      }

      id = R.id.noInternetBodyRetry;
      TextView noInternetBodyRetry = ViewBindings.findChildViewById(rootView, id);
      if (noInternetBodyRetry == null) {
        break missingId;
      }

      id = R.id.noInternetBodySubtitle;
      TextView noInternetBodySubtitle = ViewBindings.findChildViewById(rootView, id);
      if (noInternetBodySubtitle == null) {
        break missingId;
      }

      id = R.id.noInternetBodyTitle;
      TextView noInternetBodyTitle = ViewBindings.findChildViewById(rootView, id);
      if (noInternetBodyTitle == null) {
        break missingId;
      }

      id = R.id.videosRecyclerView;
      RecyclerView videosRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (videosRecyclerView == null) {
        break missingId;
      }

      return new LineVideoPlayerBinding((LinearLayout) rootView, Main, body, bottomBar, bottomChats,
          bottomChatsIc, bottomHome, bottomHomeIc, bottomProfile, bottomProfileIc, bottomSearch,
          bottomSearchIc, bottomVideos, bottomVideosIc, loadedBody, middleRelative,
          middleRelativeBottom, middleRelativeBottomTop, middleRelativeBottomTopBack,
          middleRelativeBottomTopCoverIc, middleRelativeTop, middleRelativeTopSwipe,
          middleRelativeTopSwipeBody, noInternetBody, noInternetBodyIc, noInternetBodyRetry,
          noInternetBodySubtitle, noInternetBodyTitle, videosRecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
