// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UserFollowsListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout Main;

  @NonNull
  public final ImageView back;

  @NonNull
  public final LinearLayout body;

  @NonNull
  public final LinearLayout followersLayout;

  @NonNull
  public final RecyclerView followersLayoutList;

  @NonNull
  public final LinearLayout followersLayoutLoading;

  @NonNull
  public final ProgressBar followersLayoutLoadingBar;

  @NonNull
  public final TextView followersLayoutNoFollowers;

  @NonNull
  public final LinearLayout followingLayout;

  @NonNull
  public final RecyclerView followingLayoutList;

  @NonNull
  public final LinearLayout followingLayoutLoading;

  @NonNull
  public final ProgressBar followingLayoutLoadingBar;

  @NonNull
  public final TextView followingLayoutNoFollow;

  @NonNull
  public final LinearLayout mCoordinatorLayout;

  @NonNull
  public final LinearLayout mCoordinatorLayoutAppbar;

  @NonNull
  public final LinearLayout mCoordinatorLayoutCollapsingToolbar;

  @NonNull
  public final LinearLayout mCoordinatorLayoutCollapsingToolbarBody;

  @NonNull
  public final LinearLayout mLoadingLayout;

  @NonNull
  public final ProgressBar mLoadingLayoutBar;

  @NonNull
  public final ImageView more;

  @NonNull
  public final SwipeRefreshLayout swipeLayout;

  @NonNull
  public final LinearLayout swipeLayoutBody;

  @NonNull
  public final TextView tabFollowers;

  @NonNull
  public final TextView tabFollowings;

  @NonNull
  public final LinearLayout top;

  @NonNull
  public final CardView topProfileCard;

  @NonNull
  public final LinearLayout topProfileLayout;

  @NonNull
  public final ImageView topProfileLayoutGenderBadge;

  @NonNull
  public final ImageView topProfileLayoutProfileImage;

  @NonNull
  public final LinearLayout topProfileLayoutRight;

  @NonNull
  public final LinearLayout topProfileLayoutRightTop;

  @NonNull
  public final LinearLayout topProfileLayoutSpace;

  @NonNull
  public final TextView topProfileLayoutUsername;

  @NonNull
  public final TextView topProfileLayoutUsername2;

  @NonNull
  public final ImageView topProfileLayoutVerifiedBadge;

  @NonNull
  public final LinearLayout topSpace;

  private UserFollowsListBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout Main,
      @NonNull ImageView back, @NonNull LinearLayout body, @NonNull LinearLayout followersLayout,
      @NonNull RecyclerView followersLayoutList, @NonNull LinearLayout followersLayoutLoading,
      @NonNull ProgressBar followersLayoutLoadingBar, @NonNull TextView followersLayoutNoFollowers,
      @NonNull LinearLayout followingLayout, @NonNull RecyclerView followingLayoutList,
      @NonNull LinearLayout followingLayoutLoading, @NonNull ProgressBar followingLayoutLoadingBar,
      @NonNull TextView followingLayoutNoFollow, @NonNull LinearLayout mCoordinatorLayout,
      @NonNull LinearLayout mCoordinatorLayoutAppbar,
      @NonNull LinearLayout mCoordinatorLayoutCollapsingToolbar,
      @NonNull LinearLayout mCoordinatorLayoutCollapsingToolbarBody,
      @NonNull LinearLayout mLoadingLayout, @NonNull ProgressBar mLoadingLayoutBar,
      @NonNull ImageView more, @NonNull SwipeRefreshLayout swipeLayout,
      @NonNull LinearLayout swipeLayoutBody, @NonNull TextView tabFollowers,
      @NonNull TextView tabFollowings, @NonNull LinearLayout top, @NonNull CardView topProfileCard,
      @NonNull LinearLayout topProfileLayout, @NonNull ImageView topProfileLayoutGenderBadge,
      @NonNull ImageView topProfileLayoutProfileImage, @NonNull LinearLayout topProfileLayoutRight,
      @NonNull LinearLayout topProfileLayoutRightTop, @NonNull LinearLayout topProfileLayoutSpace,
      @NonNull TextView topProfileLayoutUsername, @NonNull TextView topProfileLayoutUsername2,
      @NonNull ImageView topProfileLayoutVerifiedBadge, @NonNull LinearLayout topSpace) {
    this.rootView = rootView;
    this.Main = Main;
    this.back = back;
    this.body = body;
    this.followersLayout = followersLayout;
    this.followersLayoutList = followersLayoutList;
    this.followersLayoutLoading = followersLayoutLoading;
    this.followersLayoutLoadingBar = followersLayoutLoadingBar;
    this.followersLayoutNoFollowers = followersLayoutNoFollowers;
    this.followingLayout = followingLayout;
    this.followingLayoutList = followingLayoutList;
    this.followingLayoutLoading = followingLayoutLoading;
    this.followingLayoutLoadingBar = followingLayoutLoadingBar;
    this.followingLayoutNoFollow = followingLayoutNoFollow;
    this.mCoordinatorLayout = mCoordinatorLayout;
    this.mCoordinatorLayoutAppbar = mCoordinatorLayoutAppbar;
    this.mCoordinatorLayoutCollapsingToolbar = mCoordinatorLayoutCollapsingToolbar;
    this.mCoordinatorLayoutCollapsingToolbarBody = mCoordinatorLayoutCollapsingToolbarBody;
    this.mLoadingLayout = mLoadingLayout;
    this.mLoadingLayoutBar = mLoadingLayoutBar;
    this.more = more;
    this.swipeLayout = swipeLayout;
    this.swipeLayoutBody = swipeLayoutBody;
    this.tabFollowers = tabFollowers;
    this.tabFollowings = tabFollowings;
    this.top = top;
    this.topProfileCard = topProfileCard;
    this.topProfileLayout = topProfileLayout;
    this.topProfileLayoutGenderBadge = topProfileLayoutGenderBadge;
    this.topProfileLayoutProfileImage = topProfileLayoutProfileImage;
    this.topProfileLayoutRight = topProfileLayoutRight;
    this.topProfileLayoutRightTop = topProfileLayoutRightTop;
    this.topProfileLayoutSpace = topProfileLayoutSpace;
    this.topProfileLayoutUsername = topProfileLayoutUsername;
    this.topProfileLayoutUsername2 = topProfileLayoutUsername2;
    this.topProfileLayoutVerifiedBadge = topProfileLayoutVerifiedBadge;
    this.topSpace = topSpace;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UserFollowsListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UserFollowsListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.user_follows_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UserFollowsListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout Main = (LinearLayout) rootView;

      id = R.id.back;
      ImageView back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.body;
      LinearLayout body = ViewBindings.findChildViewById(rootView, id);
      if (body == null) {
        break missingId;
      }

      id = R.id.followers_layout;
      LinearLayout followersLayout = ViewBindings.findChildViewById(rootView, id);
      if (followersLayout == null) {
        break missingId;
      }

      id = R.id.followers_layout_list;
      RecyclerView followersLayoutList = ViewBindings.findChildViewById(rootView, id);
      if (followersLayoutList == null) {
        break missingId;
      }

      id = R.id.followers_layout_loading;
      LinearLayout followersLayoutLoading = ViewBindings.findChildViewById(rootView, id);
      if (followersLayoutLoading == null) {
        break missingId;
      }

      id = R.id.followers_layout_loading_bar;
      ProgressBar followersLayoutLoadingBar = ViewBindings.findChildViewById(rootView, id);
      if (followersLayoutLoadingBar == null) {
        break missingId;
      }

      id = R.id.followers_layout_no_followers;
      TextView followersLayoutNoFollowers = ViewBindings.findChildViewById(rootView, id);
      if (followersLayoutNoFollowers == null) {
        break missingId;
      }

      id = R.id.following_layout;
      LinearLayout followingLayout = ViewBindings.findChildViewById(rootView, id);
      if (followingLayout == null) {
        break missingId;
      }

      id = R.id.following_layout_list;
      RecyclerView followingLayoutList = ViewBindings.findChildViewById(rootView, id);
      if (followingLayoutList == null) {
        break missingId;
      }

      id = R.id.following_layout_loading;
      LinearLayout followingLayoutLoading = ViewBindings.findChildViewById(rootView, id);
      if (followingLayoutLoading == null) {
        break missingId;
      }

      id = R.id.following_layout_loading_bar;
      ProgressBar followingLayoutLoadingBar = ViewBindings.findChildViewById(rootView, id);
      if (followingLayoutLoadingBar == null) {
        break missingId;
      }

      id = R.id.following_layout_no_follow;
      TextView followingLayoutNoFollow = ViewBindings.findChildViewById(rootView, id);
      if (followingLayoutNoFollow == null) {
        break missingId;
      }

      id = R.id.m_coordinator_layout;
      LinearLayout mCoordinatorLayout = ViewBindings.findChildViewById(rootView, id);
      if (mCoordinatorLayout == null) {
        break missingId;
      }

      id = R.id.m_coordinator_layout_appbar;
      LinearLayout mCoordinatorLayoutAppbar = ViewBindings.findChildViewById(rootView, id);
      if (mCoordinatorLayoutAppbar == null) {
        break missingId;
      }

      id = R.id.m_coordinator_layout_collapsing_toolbar;
      LinearLayout mCoordinatorLayoutCollapsingToolbar = ViewBindings.findChildViewById(rootView, id);
      if (mCoordinatorLayoutCollapsingToolbar == null) {
        break missingId;
      }

      id = R.id.m_coordinator_layout_collapsing_toolbar_body;
      LinearLayout mCoordinatorLayoutCollapsingToolbarBody = ViewBindings.findChildViewById(rootView, id);
      if (mCoordinatorLayoutCollapsingToolbarBody == null) {
        break missingId;
      }

      id = R.id.mLoadingLayout;
      LinearLayout mLoadingLayout = ViewBindings.findChildViewById(rootView, id);
      if (mLoadingLayout == null) {
        break missingId;
      }

      id = R.id.mLoadingLayoutBar;
      ProgressBar mLoadingLayoutBar = ViewBindings.findChildViewById(rootView, id);
      if (mLoadingLayoutBar == null) {
        break missingId;
      }

      id = R.id.more;
      ImageView more = ViewBindings.findChildViewById(rootView, id);
      if (more == null) {
        break missingId;
      }

      id = R.id.swipe_layout;
      SwipeRefreshLayout swipeLayout = ViewBindings.findChildViewById(rootView, id);
      if (swipeLayout == null) {
        break missingId;
      }

      id = R.id.swipe_layout_body;
      LinearLayout swipeLayoutBody = ViewBindings.findChildViewById(rootView, id);
      if (swipeLayoutBody == null) {
        break missingId;
      }

      id = R.id.tab_followers;
      TextView tabFollowers = ViewBindings.findChildViewById(rootView, id);
      if (tabFollowers == null) {
        break missingId;
      }

      id = R.id.tab_followings;
      TextView tabFollowings = ViewBindings.findChildViewById(rootView, id);
      if (tabFollowings == null) {
        break missingId;
      }

      id = R.id.top;
      LinearLayout top = ViewBindings.findChildViewById(rootView, id);
      if (top == null) {
        break missingId;
      }

      id = R.id.topProfileCard;
      CardView topProfileCard = ViewBindings.findChildViewById(rootView, id);
      if (topProfileCard == null) {
        break missingId;
      }

      id = R.id.topProfileLayout;
      LinearLayout topProfileLayout = ViewBindings.findChildViewById(rootView, id);
      if (topProfileLayout == null) {
        break missingId;
      }

      id = R.id.topProfileLayoutGenderBadge;
      ImageView topProfileLayoutGenderBadge = ViewBindings.findChildViewById(rootView, id);
      if (topProfileLayoutGenderBadge == null) {
        break missingId;
      }

      id = R.id.topProfileLayoutProfileImage;
      ImageView topProfileLayoutProfileImage = ViewBindings.findChildViewById(rootView, id);
      if (topProfileLayoutProfileImage == null) {
        break missingId;
      }

      id = R.id.topProfileLayoutRight;
      LinearLayout topProfileLayoutRight = ViewBindings.findChildViewById(rootView, id);
      if (topProfileLayoutRight == null) {
        break missingId;
      }

      id = R.id.topProfileLayoutRightTop;
      LinearLayout topProfileLayoutRightTop = ViewBindings.findChildViewById(rootView, id);
      if (topProfileLayoutRightTop == null) {
        break missingId;
      }

      id = R.id.topProfileLayoutSpace;
      LinearLayout topProfileLayoutSpace = ViewBindings.findChildViewById(rootView, id);
      if (topProfileLayoutSpace == null) {
        break missingId;
      }

      id = R.id.topProfileLayoutUsername;
      TextView topProfileLayoutUsername = ViewBindings.findChildViewById(rootView, id);
      if (topProfileLayoutUsername == null) {
        break missingId;
      }

      id = R.id.topProfileLayoutUsername2;
      TextView topProfileLayoutUsername2 = ViewBindings.findChildViewById(rootView, id);
      if (topProfileLayoutUsername2 == null) {
        break missingId;
      }

      id = R.id.topProfileLayoutVerifiedBadge;
      ImageView topProfileLayoutVerifiedBadge = ViewBindings.findChildViewById(rootView, id);
      if (topProfileLayoutVerifiedBadge == null) {
        break missingId;
      }

      id = R.id.topSpace;
      LinearLayout topSpace = ViewBindings.findChildViewById(rootView, id);
      if (topSpace == null) {
        break missingId;
      }

      return new UserFollowsListBinding((LinearLayout) rootView, Main, back, body, followersLayout,
          followersLayoutList, followersLayoutLoading, followersLayoutLoadingBar,
          followersLayoutNoFollowers, followingLayout, followingLayoutList, followingLayoutLoading,
          followingLayoutLoadingBar, followingLayoutNoFollow, mCoordinatorLayout,
          mCoordinatorLayoutAppbar, mCoordinatorLayoutCollapsingToolbar,
          mCoordinatorLayoutCollapsingToolbarBody, mLoadingLayout, mLoadingLayoutBar, more,
          swipeLayout, swipeLayoutBody, tabFollowers, tabFollowings, top, topProfileCard,
          topProfileLayout, topProfileLayoutGenderBadge, topProfileLayoutProfileImage,
          topProfileLayoutRight, topProfileLayoutRightTop, topProfileLayoutSpace,
          topProfileLayoutUsername, topProfileLayoutUsername2, topProfileLayoutVerifiedBadge,
          topSpace);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
