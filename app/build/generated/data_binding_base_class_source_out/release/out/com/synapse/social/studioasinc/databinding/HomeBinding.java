// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HomeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout Main;

  @NonNull
  public final LinearLayout PublicPostsBody;

  @NonNull
  public final RecyclerView PublicPostsList;

  @NonNull
  public final TextView PublicPostsListNotFound;

  @NonNull
  public final TextView appNameBar;

  @NonNull
  public final LinearLayout body;

  @NonNull
  public final LinearLayout bottomBar;

  @NonNull
  public final LinearLayout bottomSpc;

  @NonNull
  public final ProgressBar loadingBar;

  @NonNull
  public final LinearLayout loadingBody;

  @NonNull
  public final CoordinatorLayout mCoordinatorLayout;

  @NonNull
  public final AppBarLayout mCoordinatorLayoutAppbar;

  @NonNull
  public final CollapsingToolbarLayout mCoordinatorLayoutCollapsingToolbar;

  @NonNull
  public final LinearLayout mCoordinatorLayoutCollapsingToolbarBody;

  @NonNull
  public final LinearLayout middleLayout;

  @NonNull
  public final LinearLayout miniPostLayout;

  @NonNull
  public final LinearLayout miniPostLayoutBottom;

  @NonNull
  public final LinearLayout miniPostLayoutBottomSpace;

  @NonNull
  public final LinearLayout miniPostLayoutBottomSpc;

  @NonNull
  public final HorizontalScrollView miniPostLayoutFiltersScroll;

  @NonNull
  public final LinearLayout miniPostLayoutFiltersScrollBody;

  @NonNull
  public final TextView miniPostLayoutFiltersScrollBodyFilterFAVORITE;

  @NonNull
  public final TextView miniPostLayoutFiltersScrollBodyFilterFOLLOWED;

  @NonNull
  public final TextView miniPostLayoutFiltersScrollBodyFilterLOCAL;

  @NonNull
  public final TextView miniPostLayoutFiltersScrollBodyFilterPUBLIC;

  @NonNull
  public final ImageView miniPostLayoutImagePost;

  @NonNull
  public final LinearLayout miniPostLayoutMiddleSpc;

  @NonNull
  public final ImageView miniPostLayoutMoreButton;

  @NonNull
  public final CardView miniPostLayoutProfileCard;

  @NonNull
  public final ImageView miniPostLayoutProfileImage;

  @NonNull
  public final ImageView miniPostLayoutTextPost;

  @NonNull
  public final EditText miniPostLayoutTextPostInput;

  @NonNull
  public final TextView miniPostLayoutTextPostPublish;

  @NonNull
  public final LinearLayout miniPostLayoutTop;

  @NonNull
  public final ImageView miniPostLayoutVideoPost;

  @NonNull
  public final LinearLayout navFeed;

  @NonNull
  public final ImageView navFeedIc;

  @NonNull
  public final LinearLayout navInbox;

  @NonNull
  public final ImageView navInboxIc;

  @NonNull
  public final LinearLayout navProfile;

  @NonNull
  public final ImageView navProfileIc;

  @NonNull
  public final LinearLayout navReels;

  @NonNull
  public final ImageView navReelsIc;

  @NonNull
  public final LinearLayout navSearch;

  @NonNull
  public final ImageView navSearchIc;

  @NonNull
  public final LinearLayout noInternetBody;

  @NonNull
  public final ImageView noInternetBodyIc;

  @NonNull
  public final TextView noInternetBodyRetry;

  @NonNull
  public final TextView noInternetBodySubtitle;

  @NonNull
  public final TextView noInternetBodyTitle;

  @NonNull
  public final ImageView settingsButton;

  @NonNull
  public final LinearLayout stories;

  @NonNull
  public final LinearLayout storiesAndMiniPostsSpc;

  @NonNull
  public final RecyclerView storiesView;

  @NonNull
  public final SwipeRefreshLayout swipeLayout;

  @NonNull
  public final LinearLayout swipeLayoutBody;

  @NonNull
  public final LinearLayout topBar;

  @NonNull
  public final LinearLayout topBarSpace;

  @NonNull
  public final LinearLayout topCollapsingSpc;

  @NonNull
  public final LinearLayout topSpc14;

  private HomeBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout Main,
      @NonNull LinearLayout PublicPostsBody, @NonNull RecyclerView PublicPostsList,
      @NonNull TextView PublicPostsListNotFound, @NonNull TextView appNameBar,
      @NonNull LinearLayout body, @NonNull LinearLayout bottomBar, @NonNull LinearLayout bottomSpc,
      @NonNull ProgressBar loadingBar, @NonNull LinearLayout loadingBody,
      @NonNull CoordinatorLayout mCoordinatorLayout, @NonNull AppBarLayout mCoordinatorLayoutAppbar,
      @NonNull CollapsingToolbarLayout mCoordinatorLayoutCollapsingToolbar,
      @NonNull LinearLayout mCoordinatorLayoutCollapsingToolbarBody,
      @NonNull LinearLayout middleLayout, @NonNull LinearLayout miniPostLayout,
      @NonNull LinearLayout miniPostLayoutBottom, @NonNull LinearLayout miniPostLayoutBottomSpace,
      @NonNull LinearLayout miniPostLayoutBottomSpc,
      @NonNull HorizontalScrollView miniPostLayoutFiltersScroll,
      @NonNull LinearLayout miniPostLayoutFiltersScrollBody,
      @NonNull TextView miniPostLayoutFiltersScrollBodyFilterFAVORITE,
      @NonNull TextView miniPostLayoutFiltersScrollBodyFilterFOLLOWED,
      @NonNull TextView miniPostLayoutFiltersScrollBodyFilterLOCAL,
      @NonNull TextView miniPostLayoutFiltersScrollBodyFilterPUBLIC,
      @NonNull ImageView miniPostLayoutImagePost, @NonNull LinearLayout miniPostLayoutMiddleSpc,
      @NonNull ImageView miniPostLayoutMoreButton, @NonNull CardView miniPostLayoutProfileCard,
      @NonNull ImageView miniPostLayoutProfileImage, @NonNull ImageView miniPostLayoutTextPost,
      @NonNull EditText miniPostLayoutTextPostInput,
      @NonNull TextView miniPostLayoutTextPostPublish, @NonNull LinearLayout miniPostLayoutTop,
      @NonNull ImageView miniPostLayoutVideoPost, @NonNull LinearLayout navFeed,
      @NonNull ImageView navFeedIc, @NonNull LinearLayout navInbox, @NonNull ImageView navInboxIc,
      @NonNull LinearLayout navProfile, @NonNull ImageView navProfileIc,
      @NonNull LinearLayout navReels, @NonNull ImageView navReelsIc,
      @NonNull LinearLayout navSearch, @NonNull ImageView navSearchIc,
      @NonNull LinearLayout noInternetBody, @NonNull ImageView noInternetBodyIc,
      @NonNull TextView noInternetBodyRetry, @NonNull TextView noInternetBodySubtitle,
      @NonNull TextView noInternetBodyTitle, @NonNull ImageView settingsButton,
      @NonNull LinearLayout stories, @NonNull LinearLayout storiesAndMiniPostsSpc,
      @NonNull RecyclerView storiesView, @NonNull SwipeRefreshLayout swipeLayout,
      @NonNull LinearLayout swipeLayoutBody, @NonNull LinearLayout topBar,
      @NonNull LinearLayout topBarSpace, @NonNull LinearLayout topCollapsingSpc,
      @NonNull LinearLayout topSpc14) {
    this.rootView = rootView;
    this.Main = Main;
    this.PublicPostsBody = PublicPostsBody;
    this.PublicPostsList = PublicPostsList;
    this.PublicPostsListNotFound = PublicPostsListNotFound;
    this.appNameBar = appNameBar;
    this.body = body;
    this.bottomBar = bottomBar;
    this.bottomSpc = bottomSpc;
    this.loadingBar = loadingBar;
    this.loadingBody = loadingBody;
    this.mCoordinatorLayout = mCoordinatorLayout;
    this.mCoordinatorLayoutAppbar = mCoordinatorLayoutAppbar;
    this.mCoordinatorLayoutCollapsingToolbar = mCoordinatorLayoutCollapsingToolbar;
    this.mCoordinatorLayoutCollapsingToolbarBody = mCoordinatorLayoutCollapsingToolbarBody;
    this.middleLayout = middleLayout;
    this.miniPostLayout = miniPostLayout;
    this.miniPostLayoutBottom = miniPostLayoutBottom;
    this.miniPostLayoutBottomSpace = miniPostLayoutBottomSpace;
    this.miniPostLayoutBottomSpc = miniPostLayoutBottomSpc;
    this.miniPostLayoutFiltersScroll = miniPostLayoutFiltersScroll;
    this.miniPostLayoutFiltersScrollBody = miniPostLayoutFiltersScrollBody;
    this.miniPostLayoutFiltersScrollBodyFilterFAVORITE = miniPostLayoutFiltersScrollBodyFilterFAVORITE;
    this.miniPostLayoutFiltersScrollBodyFilterFOLLOWED = miniPostLayoutFiltersScrollBodyFilterFOLLOWED;
    this.miniPostLayoutFiltersScrollBodyFilterLOCAL = miniPostLayoutFiltersScrollBodyFilterLOCAL;
    this.miniPostLayoutFiltersScrollBodyFilterPUBLIC = miniPostLayoutFiltersScrollBodyFilterPUBLIC;
    this.miniPostLayoutImagePost = miniPostLayoutImagePost;
    this.miniPostLayoutMiddleSpc = miniPostLayoutMiddleSpc;
    this.miniPostLayoutMoreButton = miniPostLayoutMoreButton;
    this.miniPostLayoutProfileCard = miniPostLayoutProfileCard;
    this.miniPostLayoutProfileImage = miniPostLayoutProfileImage;
    this.miniPostLayoutTextPost = miniPostLayoutTextPost;
    this.miniPostLayoutTextPostInput = miniPostLayoutTextPostInput;
    this.miniPostLayoutTextPostPublish = miniPostLayoutTextPostPublish;
    this.miniPostLayoutTop = miniPostLayoutTop;
    this.miniPostLayoutVideoPost = miniPostLayoutVideoPost;
    this.navFeed = navFeed;
    this.navFeedIc = navFeedIc;
    this.navInbox = navInbox;
    this.navInboxIc = navInboxIc;
    this.navProfile = navProfile;
    this.navProfileIc = navProfileIc;
    this.navReels = navReels;
    this.navReelsIc = navReelsIc;
    this.navSearch = navSearch;
    this.navSearchIc = navSearchIc;
    this.noInternetBody = noInternetBody;
    this.noInternetBodyIc = noInternetBodyIc;
    this.noInternetBodyRetry = noInternetBodyRetry;
    this.noInternetBodySubtitle = noInternetBodySubtitle;
    this.noInternetBodyTitle = noInternetBodyTitle;
    this.settingsButton = settingsButton;
    this.stories = stories;
    this.storiesAndMiniPostsSpc = storiesAndMiniPostsSpc;
    this.storiesView = storiesView;
    this.swipeLayout = swipeLayout;
    this.swipeLayoutBody = swipeLayoutBody;
    this.topBar = topBar;
    this.topBarSpace = topBarSpace;
    this.topCollapsingSpc = topCollapsingSpc;
    this.topSpc14 = topSpc14;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HomeBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout Main = (LinearLayout) rootView;

      id = R.id.PublicPostsBody;
      LinearLayout PublicPostsBody = ViewBindings.findChildViewById(rootView, id);
      if (PublicPostsBody == null) {
        break missingId;
      }

      id = R.id.PublicPostsList;
      RecyclerView PublicPostsList = ViewBindings.findChildViewById(rootView, id);
      if (PublicPostsList == null) {
        break missingId;
      }

      id = R.id.PublicPostsListNotFound;
      TextView PublicPostsListNotFound = ViewBindings.findChildViewById(rootView, id);
      if (PublicPostsListNotFound == null) {
        break missingId;
      }

      id = R.id.app_name_bar;
      TextView appNameBar = ViewBindings.findChildViewById(rootView, id);
      if (appNameBar == null) {
        break missingId;
      }

      id = R.id.body;
      LinearLayout body = ViewBindings.findChildViewById(rootView, id);
      if (body == null) {
        break missingId;
      }

      id = R.id.bottomBar;
      LinearLayout bottomBar = ViewBindings.findChildViewById(rootView, id);
      if (bottomBar == null) {
        break missingId;
      }

      id = R.id.bottomSpc;
      LinearLayout bottomSpc = ViewBindings.findChildViewById(rootView, id);
      if (bottomSpc == null) {
        break missingId;
      }

      id = R.id.loading_bar;
      ProgressBar loadingBar = ViewBindings.findChildViewById(rootView, id);
      if (loadingBar == null) {
        break missingId;
      }

      id = R.id.loadingBody;
      LinearLayout loadingBody = ViewBindings.findChildViewById(rootView, id);
      if (loadingBody == null) {
        break missingId;
      }

      id = R.id.m_coordinator_layout;
      CoordinatorLayout mCoordinatorLayout = ViewBindings.findChildViewById(rootView, id);
      if (mCoordinatorLayout == null) {
        break missingId;
      }

      id = R.id.m_coordinator_layout_appbar;
      AppBarLayout mCoordinatorLayoutAppbar = ViewBindings.findChildViewById(rootView, id);
      if (mCoordinatorLayoutAppbar == null) {
        break missingId;
      }

      id = R.id.m_coordinator_layout_collapsing_toolbar;
      CollapsingToolbarLayout mCoordinatorLayoutCollapsingToolbar = ViewBindings.findChildViewById(rootView, id);
      if (mCoordinatorLayoutCollapsingToolbar == null) {
        break missingId;
      }

      id = R.id.m_coordinator_layout_collapsing_toolbar_body;
      LinearLayout mCoordinatorLayoutCollapsingToolbarBody = ViewBindings.findChildViewById(rootView, id);
      if (mCoordinatorLayoutCollapsingToolbarBody == null) {
        break missingId;
      }

      id = R.id.middleLayout;
      LinearLayout middleLayout = ViewBindings.findChildViewById(rootView, id);
      if (middleLayout == null) {
        break missingId;
      }

      id = R.id.miniPostLayout;
      LinearLayout miniPostLayout = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayout == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutBottom;
      LinearLayout miniPostLayoutBottom = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutBottom == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutBottomSpace;
      LinearLayout miniPostLayoutBottomSpace = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutBottomSpace == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutBottomSpc;
      LinearLayout miniPostLayoutBottomSpc = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutBottomSpc == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutFiltersScroll;
      HorizontalScrollView miniPostLayoutFiltersScroll = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutFiltersScroll == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutFiltersScrollBody;
      LinearLayout miniPostLayoutFiltersScrollBody = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutFiltersScrollBody == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutFiltersScrollBodyFilterFAVORITE;
      TextView miniPostLayoutFiltersScrollBodyFilterFAVORITE = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutFiltersScrollBodyFilterFAVORITE == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutFiltersScrollBodyFilterFOLLOWED;
      TextView miniPostLayoutFiltersScrollBodyFilterFOLLOWED = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutFiltersScrollBodyFilterFOLLOWED == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutFiltersScrollBodyFilterLOCAL;
      TextView miniPostLayoutFiltersScrollBodyFilterLOCAL = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutFiltersScrollBodyFilterLOCAL == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutFiltersScrollBodyFilterPUBLIC;
      TextView miniPostLayoutFiltersScrollBodyFilterPUBLIC = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutFiltersScrollBodyFilterPUBLIC == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutImagePost;
      ImageView miniPostLayoutImagePost = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutImagePost == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutMiddleSpc;
      LinearLayout miniPostLayoutMiddleSpc = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutMiddleSpc == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutMoreButton;
      ImageView miniPostLayoutMoreButton = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutMoreButton == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutProfileCard;
      CardView miniPostLayoutProfileCard = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutProfileCard == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutProfileImage;
      ImageView miniPostLayoutProfileImage = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutProfileImage == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutTextPost;
      ImageView miniPostLayoutTextPost = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutTextPost == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutTextPostInput;
      EditText miniPostLayoutTextPostInput = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutTextPostInput == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutTextPostPublish;
      TextView miniPostLayoutTextPostPublish = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutTextPostPublish == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutTop;
      LinearLayout miniPostLayoutTop = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutTop == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutVideoPost;
      ImageView miniPostLayoutVideoPost = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutVideoPost == null) {
        break missingId;
      }

      id = R.id.nav_feed;
      LinearLayout navFeed = ViewBindings.findChildViewById(rootView, id);
      if (navFeed == null) {
        break missingId;
      }

      id = R.id.nav_feed_ic;
      ImageView navFeedIc = ViewBindings.findChildViewById(rootView, id);
      if (navFeedIc == null) {
        break missingId;
      }

      id = R.id.nav_inbox;
      LinearLayout navInbox = ViewBindings.findChildViewById(rootView, id);
      if (navInbox == null) {
        break missingId;
      }

      id = R.id.nav_inbox_ic;
      ImageView navInboxIc = ViewBindings.findChildViewById(rootView, id);
      if (navInboxIc == null) {
        break missingId;
      }

      id = R.id.nav_profile;
      LinearLayout navProfile = ViewBindings.findChildViewById(rootView, id);
      if (navProfile == null) {
        break missingId;
      }

      id = R.id.nav_profile_ic;
      ImageView navProfileIc = ViewBindings.findChildViewById(rootView, id);
      if (navProfileIc == null) {
        break missingId;
      }

      id = R.id.nav_reels;
      LinearLayout navReels = ViewBindings.findChildViewById(rootView, id);
      if (navReels == null) {
        break missingId;
      }

      id = R.id.nav_reels_ic;
      ImageView navReelsIc = ViewBindings.findChildViewById(rootView, id);
      if (navReelsIc == null) {
        break missingId;
      }

      id = R.id.nav_search;
      LinearLayout navSearch = ViewBindings.findChildViewById(rootView, id);
      if (navSearch == null) {
        break missingId;
      }

      id = R.id.nav_search_ic;
      ImageView navSearchIc = ViewBindings.findChildViewById(rootView, id);
      if (navSearchIc == null) {
        break missingId;
      }

      id = R.id.noInternetBody;
      LinearLayout noInternetBody = ViewBindings.findChildViewById(rootView, id);
      if (noInternetBody == null) {
        break missingId;
      }

      id = R.id.noInternetBodyIc;
      ImageView noInternetBodyIc = ViewBindings.findChildViewById(rootView, id);
      if (noInternetBodyIc == null) {
        break missingId;
      }

      id = R.id.noInternetBodyRetry;
      TextView noInternetBodyRetry = ViewBindings.findChildViewById(rootView, id);
      if (noInternetBodyRetry == null) {
        break missingId;
      }

      id = R.id.noInternetBodySubtitle;
      TextView noInternetBodySubtitle = ViewBindings.findChildViewById(rootView, id);
      if (noInternetBodySubtitle == null) {
        break missingId;
      }

      id = R.id.noInternetBodyTitle;
      TextView noInternetBodyTitle = ViewBindings.findChildViewById(rootView, id);
      if (noInternetBodyTitle == null) {
        break missingId;
      }

      id = R.id.settings_button;
      ImageView settingsButton = ViewBindings.findChildViewById(rootView, id);
      if (settingsButton == null) {
        break missingId;
      }

      id = R.id.stories;
      LinearLayout stories = ViewBindings.findChildViewById(rootView, id);
      if (stories == null) {
        break missingId;
      }

      id = R.id.storiesAndMiniPostsSpc;
      LinearLayout storiesAndMiniPostsSpc = ViewBindings.findChildViewById(rootView, id);
      if (storiesAndMiniPostsSpc == null) {
        break missingId;
      }

      id = R.id.storiesView;
      RecyclerView storiesView = ViewBindings.findChildViewById(rootView, id);
      if (storiesView == null) {
        break missingId;
      }

      id = R.id.swipeLayout;
      SwipeRefreshLayout swipeLayout = ViewBindings.findChildViewById(rootView, id);
      if (swipeLayout == null) {
        break missingId;
      }

      id = R.id.swipeLayoutBody;
      LinearLayout swipeLayoutBody = ViewBindings.findChildViewById(rootView, id);
      if (swipeLayoutBody == null) {
        break missingId;
      }

      id = R.id.topBar;
      LinearLayout topBar = ViewBindings.findChildViewById(rootView, id);
      if (topBar == null) {
        break missingId;
      }

      id = R.id.topBarSpace;
      LinearLayout topBarSpace = ViewBindings.findChildViewById(rootView, id);
      if (topBarSpace == null) {
        break missingId;
      }

      id = R.id.topCollapsingSpc;
      LinearLayout topCollapsingSpc = ViewBindings.findChildViewById(rootView, id);
      if (topCollapsingSpc == null) {
        break missingId;
      }

      id = R.id.topSpc14;
      LinearLayout topSpc14 = ViewBindings.findChildViewById(rootView, id);
      if (topSpc14 == null) {
        break missingId;
      }

      return new HomeBinding((LinearLayout) rootView, Main, PublicPostsBody, PublicPostsList,
          PublicPostsListNotFound, appNameBar, body, bottomBar, bottomSpc, loadingBar, loadingBody,
          mCoordinatorLayout, mCoordinatorLayoutAppbar, mCoordinatorLayoutCollapsingToolbar,
          mCoordinatorLayoutCollapsingToolbarBody, middleLayout, miniPostLayout,
          miniPostLayoutBottom, miniPostLayoutBottomSpace, miniPostLayoutBottomSpc,
          miniPostLayoutFiltersScroll, miniPostLayoutFiltersScrollBody,
          miniPostLayoutFiltersScrollBodyFilterFAVORITE,
          miniPostLayoutFiltersScrollBodyFilterFOLLOWED, miniPostLayoutFiltersScrollBodyFilterLOCAL,
          miniPostLayoutFiltersScrollBodyFilterPUBLIC, miniPostLayoutImagePost,
          miniPostLayoutMiddleSpc, miniPostLayoutMoreButton, miniPostLayoutProfileCard,
          miniPostLayoutProfileImage, miniPostLayoutTextPost, miniPostLayoutTextPostInput,
          miniPostLayoutTextPostPublish, miniPostLayoutTop, miniPostLayoutVideoPost, navFeed,
          navFeedIc, navInbox, navInboxIc, navProfile, navProfileIc, navReels, navReelsIc,
          navSearch, navSearchIc, noInternetBody, noInternetBodyIc, noInternetBodyRetry,
          noInternetBodySubtitle, noInternetBodyTitle, settingsButton, stories,
          storiesAndMiniPostsSpc, storiesView, swipeLayout, swipeLayoutBody, topBar, topBarSpace,
          topCollapsingSpc, topSpc14);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
