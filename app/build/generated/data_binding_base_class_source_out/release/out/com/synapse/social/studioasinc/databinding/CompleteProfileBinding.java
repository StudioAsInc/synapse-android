// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.synapse.social.studioasinc.FadeEditText;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CompleteProfileBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout Main;

  @NonNull
  public final ImageView back;

  @NonNull
  public final FadeEditText biographyInput;

  @NonNull
  public final LinearLayout body;

  @NonNull
  public final LinearLayout buttons;

  @NonNull
  public final ImageView cancelCreateAccount;

  @NonNull
  public final ProgressBar cancelCreateAccountProgress;

  @NonNull
  public final LinearLayout completeButton;

  @NonNull
  public final ProgressBar completeButtonLoaderBar;

  @NonNull
  public final TextView completeButtonTitle;

  @NonNull
  public final LinearLayout emailVerification;

  @NonNull
  public final ImageView emailVerificationErrorIc;

  @NonNull
  public final LinearLayout emailVerificationMiddle;

  @NonNull
  public final TextView emailVerificationSend;

  @NonNull
  public final TextView emailVerificationStatus;

  @NonNull
  public final ImageView emailVerificationStatusRefresh;

  @NonNull
  public final TextView emailVerificationSubtitle;

  @NonNull
  public final TextView emailVerificationTitle;

  @NonNull
  public final ImageView emailVerificationVerifiedIc;

  @NonNull
  public final FadeEditText nicknameInput;

  @NonNull
  public final ImageView profileImage;

  @NonNull
  public final CardView profileImageCard;

  @NonNull
  public final ScrollView scroll;

  @NonNull
  public final TextView skipButton;

  @NonNull
  public final TextView subtitle;

  @NonNull
  public final TextView title;

  @NonNull
  public final LinearLayout top;

  @NonNull
  public final LinearLayout topMiddle;

  @NonNull
  public final FadeEditText usernameInput;

  private CompleteProfileBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout Main,
      @NonNull ImageView back, @NonNull FadeEditText biographyInput, @NonNull LinearLayout body,
      @NonNull LinearLayout buttons, @NonNull ImageView cancelCreateAccount,
      @NonNull ProgressBar cancelCreateAccountProgress, @NonNull LinearLayout completeButton,
      @NonNull ProgressBar completeButtonLoaderBar, @NonNull TextView completeButtonTitle,
      @NonNull LinearLayout emailVerification, @NonNull ImageView emailVerificationErrorIc,
      @NonNull LinearLayout emailVerificationMiddle, @NonNull TextView emailVerificationSend,
      @NonNull TextView emailVerificationStatus, @NonNull ImageView emailVerificationStatusRefresh,
      @NonNull TextView emailVerificationSubtitle, @NonNull TextView emailVerificationTitle,
      @NonNull ImageView emailVerificationVerifiedIc, @NonNull FadeEditText nicknameInput,
      @NonNull ImageView profileImage, @NonNull CardView profileImageCard,
      @NonNull ScrollView scroll, @NonNull TextView skipButton, @NonNull TextView subtitle,
      @NonNull TextView title, @NonNull LinearLayout top, @NonNull LinearLayout topMiddle,
      @NonNull FadeEditText usernameInput) {
    this.rootView = rootView;
    this.Main = Main;
    this.back = back;
    this.biographyInput = biographyInput;
    this.body = body;
    this.buttons = buttons;
    this.cancelCreateAccount = cancelCreateAccount;
    this.cancelCreateAccountProgress = cancelCreateAccountProgress;
    this.completeButton = completeButton;
    this.completeButtonLoaderBar = completeButtonLoaderBar;
    this.completeButtonTitle = completeButtonTitle;
    this.emailVerification = emailVerification;
    this.emailVerificationErrorIc = emailVerificationErrorIc;
    this.emailVerificationMiddle = emailVerificationMiddle;
    this.emailVerificationSend = emailVerificationSend;
    this.emailVerificationStatus = emailVerificationStatus;
    this.emailVerificationStatusRefresh = emailVerificationStatusRefresh;
    this.emailVerificationSubtitle = emailVerificationSubtitle;
    this.emailVerificationTitle = emailVerificationTitle;
    this.emailVerificationVerifiedIc = emailVerificationVerifiedIc;
    this.nicknameInput = nicknameInput;
    this.profileImage = profileImage;
    this.profileImageCard = profileImageCard;
    this.scroll = scroll;
    this.skipButton = skipButton;
    this.subtitle = subtitle;
    this.title = title;
    this.top = top;
    this.topMiddle = topMiddle;
    this.usernameInput = usernameInput;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CompleteProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CompleteProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.complete_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CompleteProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout Main = (LinearLayout) rootView;

      id = R.id.back;
      ImageView back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.biography_input;
      FadeEditText biographyInput = ViewBindings.findChildViewById(rootView, id);
      if (biographyInput == null) {
        break missingId;
      }

      id = R.id.body;
      LinearLayout body = ViewBindings.findChildViewById(rootView, id);
      if (body == null) {
        break missingId;
      }

      id = R.id.buttons;
      LinearLayout buttons = ViewBindings.findChildViewById(rootView, id);
      if (buttons == null) {
        break missingId;
      }

      id = R.id.cancelCreateAccount;
      ImageView cancelCreateAccount = ViewBindings.findChildViewById(rootView, id);
      if (cancelCreateAccount == null) {
        break missingId;
      }

      id = R.id.cancel_create_account_progress;
      ProgressBar cancelCreateAccountProgress = ViewBindings.findChildViewById(rootView, id);
      if (cancelCreateAccountProgress == null) {
        break missingId;
      }

      id = R.id.complete_button;
      LinearLayout completeButton = ViewBindings.findChildViewById(rootView, id);
      if (completeButton == null) {
        break missingId;
      }

      id = R.id.complete_button_loader_bar;
      ProgressBar completeButtonLoaderBar = ViewBindings.findChildViewById(rootView, id);
      if (completeButtonLoaderBar == null) {
        break missingId;
      }

      id = R.id.complete_button_title;
      TextView completeButtonTitle = ViewBindings.findChildViewById(rootView, id);
      if (completeButtonTitle == null) {
        break missingId;
      }

      id = R.id.email_verification;
      LinearLayout emailVerification = ViewBindings.findChildViewById(rootView, id);
      if (emailVerification == null) {
        break missingId;
      }

      id = R.id.email_verification_error_ic;
      ImageView emailVerificationErrorIc = ViewBindings.findChildViewById(rootView, id);
      if (emailVerificationErrorIc == null) {
        break missingId;
      }

      id = R.id.email_verification_middle;
      LinearLayout emailVerificationMiddle = ViewBindings.findChildViewById(rootView, id);
      if (emailVerificationMiddle == null) {
        break missingId;
      }

      id = R.id.email_verification_send;
      TextView emailVerificationSend = ViewBindings.findChildViewById(rootView, id);
      if (emailVerificationSend == null) {
        break missingId;
      }

      id = R.id.email_verification_status;
      TextView emailVerificationStatus = ViewBindings.findChildViewById(rootView, id);
      if (emailVerificationStatus == null) {
        break missingId;
      }

      id = R.id.email_verification_status_refresh;
      ImageView emailVerificationStatusRefresh = ViewBindings.findChildViewById(rootView, id);
      if (emailVerificationStatusRefresh == null) {
        break missingId;
      }

      id = R.id.email_verification_subtitle;
      TextView emailVerificationSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (emailVerificationSubtitle == null) {
        break missingId;
      }

      id = R.id.email_verification_title;
      TextView emailVerificationTitle = ViewBindings.findChildViewById(rootView, id);
      if (emailVerificationTitle == null) {
        break missingId;
      }

      id = R.id.email_verification_verified_ic;
      ImageView emailVerificationVerifiedIc = ViewBindings.findChildViewById(rootView, id);
      if (emailVerificationVerifiedIc == null) {
        break missingId;
      }

      id = R.id.nickname_input;
      FadeEditText nicknameInput = ViewBindings.findChildViewById(rootView, id);
      if (nicknameInput == null) {
        break missingId;
      }

      id = R.id.profile_image;
      ImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.profile_image_card;
      CardView profileImageCard = ViewBindings.findChildViewById(rootView, id);
      if (profileImageCard == null) {
        break missingId;
      }

      id = R.id.scroll;
      ScrollView scroll = ViewBindings.findChildViewById(rootView, id);
      if (scroll == null) {
        break missingId;
      }

      id = R.id.skip_button;
      TextView skipButton = ViewBindings.findChildViewById(rootView, id);
      if (skipButton == null) {
        break missingId;
      }

      id = R.id.subtitle;
      TextView subtitle = ViewBindings.findChildViewById(rootView, id);
      if (subtitle == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.top;
      LinearLayout top = ViewBindings.findChildViewById(rootView, id);
      if (top == null) {
        break missingId;
      }

      id = R.id.topMiddle;
      LinearLayout topMiddle = ViewBindings.findChildViewById(rootView, id);
      if (topMiddle == null) {
        break missingId;
      }

      id = R.id.username_input;
      FadeEditText usernameInput = ViewBindings.findChildViewById(rootView, id);
      if (usernameInput == null) {
        break missingId;
      }

      return new CompleteProfileBinding((LinearLayout) rootView, Main, back, biographyInput, body,
          buttons, cancelCreateAccount, cancelCreateAccountProgress, completeButton,
          completeButtonLoaderBar, completeButtonTitle, emailVerification, emailVerificationErrorIc,
          emailVerificationMiddle, emailVerificationSend, emailVerificationStatus,
          emailVerificationStatusRefresh, emailVerificationSubtitle, emailVerificationTitle,
          emailVerificationVerifiedIc, nicknameInput, profileImage, profileImageCard, scroll,
          skipButton, subtitle, title, top, topMiddle, usernameInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
