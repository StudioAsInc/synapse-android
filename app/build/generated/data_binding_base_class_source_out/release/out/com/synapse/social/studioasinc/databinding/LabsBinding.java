// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LabsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout Main;

  @NonNull
  public final LinearLayout linear2;

  @NonNull
  public final LinearLayout linear4;

  @NonNull
  public final TextView textview2;

  @NonNull
  public final TextView textview4;

  @NonNull
  public final TextView textview5;

  @NonNull
  public final TextView textview6;

  @NonNull
  public final ScrollView vscroll2;

  private LabsBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout Main,
      @NonNull LinearLayout linear2, @NonNull LinearLayout linear4, @NonNull TextView textview2,
      @NonNull TextView textview4, @NonNull TextView textview5, @NonNull TextView textview6,
      @NonNull ScrollView vscroll2) {
    this.rootView = rootView;
    this.Main = Main;
    this.linear2 = linear2;
    this.linear4 = linear4;
    this.textview2 = textview2;
    this.textview4 = textview4;
    this.textview5 = textview5;
    this.textview6 = textview6;
    this.vscroll2 = vscroll2;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LabsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LabsBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.labs, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LabsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout Main = (LinearLayout) rootView;

      id = R.id.linear2;
      LinearLayout linear2 = ViewBindings.findChildViewById(rootView, id);
      if (linear2 == null) {
        break missingId;
      }

      id = R.id.linear4;
      LinearLayout linear4 = ViewBindings.findChildViewById(rootView, id);
      if (linear4 == null) {
        break missingId;
      }

      id = R.id.textview2;
      TextView textview2 = ViewBindings.findChildViewById(rootView, id);
      if (textview2 == null) {
        break missingId;
      }

      id = R.id.textview4;
      TextView textview4 = ViewBindings.findChildViewById(rootView, id);
      if (textview4 == null) {
        break missingId;
      }

      id = R.id.textview5;
      TextView textview5 = ViewBindings.findChildViewById(rootView, id);
      if (textview5 == null) {
        break missingId;
      }

      id = R.id.textview6;
      TextView textview6 = ViewBindings.findChildViewById(rootView, id);
      if (textview6 == null) {
        break missingId;
      }

      id = R.id.vscroll2;
      ScrollView vscroll2 = ViewBindings.findChildViewById(rootView, id);
      if (vscroll2 == null) {
        break missingId;
      }

      return new LabsBinding((LinearLayout) rootView, Main, linear2, linear4, textview2, textview4,
          textview5, textview6, vscroll2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
