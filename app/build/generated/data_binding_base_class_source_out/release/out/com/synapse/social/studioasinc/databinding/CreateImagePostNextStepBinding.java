// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.synapse.social.studioasinc.FadeEditText;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CreateImagePostNextStepBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout Main;

  @NonNull
  public final LinearLayout PostInfoTop1;

  @NonNull
  public final ImageView back;

  @NonNull
  public final Button continueButton;

  @NonNull
  public final ImageView croppedImageView;

  @NonNull
  public final CardView cropperImageCard;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final FadeEditText postDescription;

  @NonNull
  public final LinearLayout postSettingsPrivacy;

  @NonNull
  public final LinearLayout postSettingsPrivacyDisableComments;

  @NonNull
  public final TextView postSettingsPrivacyDisableCommentsSubtitle;

  @NonNull
  public final SwitchCompat postSettingsPrivacyDisableCommentsSwitch;

  @NonNull
  public final LinearLayout postSettingsPrivacyDisableSave;

  @NonNull
  public final TextView postSettingsPrivacyDisableSaveSubtitle;

  @NonNull
  public final SwitchCompat postSettingsPrivacyDisableSaveSwitch;

  @NonNull
  public final LinearLayout postSettingsPrivacyHidePost;

  @NonNull
  public final TextView postSettingsPrivacyHidePostSubtitle;

  @NonNull
  public final SwitchCompat postSettingsPrivacyHidePostSwitch;

  @NonNull
  public final LinearLayout postSettingsPrivacyMiddle;

  @NonNull
  public final LinearLayout postSettingsPrivacyTop;

  @NonNull
  public final ImageView postSettingsPrivacyTopArrow;

  @NonNull
  public final TextView postSettingsPrivacyTopTitle;

  @NonNull
  public final LinearLayout postSettingsStatistics;

  @NonNull
  public final LinearLayout postSettingsStatisticsHideComments;

  @NonNull
  public final TextView postSettingsStatisticsHideCommentsSubtitle;

  @NonNull
  public final SwitchCompat postSettingsStatisticsHideCommentsSwitch;

  @NonNull
  public final LinearLayout postSettingsStatisticsHideLikes;

  @NonNull
  public final TextView postSettingsStatisticsHideLikesSubtitle;

  @NonNull
  public final SwitchCompat postSettingsStatisticsHideLikesSwitch;

  @NonNull
  public final LinearLayout postSettingsStatisticsHideViews;

  @NonNull
  public final TextView postSettingsStatisticsHideViewsSubtitle;

  @NonNull
  public final SwitchCompat postSettingsStatisticsHideViewsSwitch;

  @NonNull
  public final LinearLayout postSettingsStatisticsMiddle;

  @NonNull
  public final LinearLayout postSettingsStatisticsTop;

  @NonNull
  public final ImageView postSettingsStatisticsTopArrow;

  @NonNull
  public final TextView postSettingsStatisticsTopTitle;

  @NonNull
  public final ScrollView scroll;

  @NonNull
  public final LinearLayout scrollBody;

  @NonNull
  public final LinearLayout spc2;

  @NonNull
  public final LinearLayout spc3;

  @NonNull
  public final LinearLayout spc4;

  @NonNull
  public final TextView title;

  @NonNull
  public final LinearLayout top;

  @NonNull
  public final LinearLayout topSpace;

  @NonNull
  public final LinearLayout topSpace2;

  @NonNull
  public final LinearLayout topSpc;

  private CreateImagePostNextStepBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout Main,
      @NonNull LinearLayout PostInfoTop1, @NonNull ImageView back, @NonNull Button continueButton,
      @NonNull ImageView croppedImageView, @NonNull CardView cropperImageCard,
      @NonNull LinearLayout main, @NonNull FadeEditText postDescription,
      @NonNull LinearLayout postSettingsPrivacy,
      @NonNull LinearLayout postSettingsPrivacyDisableComments,
      @NonNull TextView postSettingsPrivacyDisableCommentsSubtitle,
      @NonNull SwitchCompat postSettingsPrivacyDisableCommentsSwitch,
      @NonNull LinearLayout postSettingsPrivacyDisableSave,
      @NonNull TextView postSettingsPrivacyDisableSaveSubtitle,
      @NonNull SwitchCompat postSettingsPrivacyDisableSaveSwitch,
      @NonNull LinearLayout postSettingsPrivacyHidePost,
      @NonNull TextView postSettingsPrivacyHidePostSubtitle,
      @NonNull SwitchCompat postSettingsPrivacyHidePostSwitch,
      @NonNull LinearLayout postSettingsPrivacyMiddle, @NonNull LinearLayout postSettingsPrivacyTop,
      @NonNull ImageView postSettingsPrivacyTopArrow, @NonNull TextView postSettingsPrivacyTopTitle,
      @NonNull LinearLayout postSettingsStatistics,
      @NonNull LinearLayout postSettingsStatisticsHideComments,
      @NonNull TextView postSettingsStatisticsHideCommentsSubtitle,
      @NonNull SwitchCompat postSettingsStatisticsHideCommentsSwitch,
      @NonNull LinearLayout postSettingsStatisticsHideLikes,
      @NonNull TextView postSettingsStatisticsHideLikesSubtitle,
      @NonNull SwitchCompat postSettingsStatisticsHideLikesSwitch,
      @NonNull LinearLayout postSettingsStatisticsHideViews,
      @NonNull TextView postSettingsStatisticsHideViewsSubtitle,
      @NonNull SwitchCompat postSettingsStatisticsHideViewsSwitch,
      @NonNull LinearLayout postSettingsStatisticsMiddle,
      @NonNull LinearLayout postSettingsStatisticsTop,
      @NonNull ImageView postSettingsStatisticsTopArrow,
      @NonNull TextView postSettingsStatisticsTopTitle, @NonNull ScrollView scroll,
      @NonNull LinearLayout scrollBody, @NonNull LinearLayout spc2, @NonNull LinearLayout spc3,
      @NonNull LinearLayout spc4, @NonNull TextView title, @NonNull LinearLayout top,
      @NonNull LinearLayout topSpace, @NonNull LinearLayout topSpace2,
      @NonNull LinearLayout topSpc) {
    this.rootView = rootView;
    this.Main = Main;
    this.PostInfoTop1 = PostInfoTop1;
    this.back = back;
    this.continueButton = continueButton;
    this.croppedImageView = croppedImageView;
    this.cropperImageCard = cropperImageCard;
    this.main = main;
    this.postDescription = postDescription;
    this.postSettingsPrivacy = postSettingsPrivacy;
    this.postSettingsPrivacyDisableComments = postSettingsPrivacyDisableComments;
    this.postSettingsPrivacyDisableCommentsSubtitle = postSettingsPrivacyDisableCommentsSubtitle;
    this.postSettingsPrivacyDisableCommentsSwitch = postSettingsPrivacyDisableCommentsSwitch;
    this.postSettingsPrivacyDisableSave = postSettingsPrivacyDisableSave;
    this.postSettingsPrivacyDisableSaveSubtitle = postSettingsPrivacyDisableSaveSubtitle;
    this.postSettingsPrivacyDisableSaveSwitch = postSettingsPrivacyDisableSaveSwitch;
    this.postSettingsPrivacyHidePost = postSettingsPrivacyHidePost;
    this.postSettingsPrivacyHidePostSubtitle = postSettingsPrivacyHidePostSubtitle;
    this.postSettingsPrivacyHidePostSwitch = postSettingsPrivacyHidePostSwitch;
    this.postSettingsPrivacyMiddle = postSettingsPrivacyMiddle;
    this.postSettingsPrivacyTop = postSettingsPrivacyTop;
    this.postSettingsPrivacyTopArrow = postSettingsPrivacyTopArrow;
    this.postSettingsPrivacyTopTitle = postSettingsPrivacyTopTitle;
    this.postSettingsStatistics = postSettingsStatistics;
    this.postSettingsStatisticsHideComments = postSettingsStatisticsHideComments;
    this.postSettingsStatisticsHideCommentsSubtitle = postSettingsStatisticsHideCommentsSubtitle;
    this.postSettingsStatisticsHideCommentsSwitch = postSettingsStatisticsHideCommentsSwitch;
    this.postSettingsStatisticsHideLikes = postSettingsStatisticsHideLikes;
    this.postSettingsStatisticsHideLikesSubtitle = postSettingsStatisticsHideLikesSubtitle;
    this.postSettingsStatisticsHideLikesSwitch = postSettingsStatisticsHideLikesSwitch;
    this.postSettingsStatisticsHideViews = postSettingsStatisticsHideViews;
    this.postSettingsStatisticsHideViewsSubtitle = postSettingsStatisticsHideViewsSubtitle;
    this.postSettingsStatisticsHideViewsSwitch = postSettingsStatisticsHideViewsSwitch;
    this.postSettingsStatisticsMiddle = postSettingsStatisticsMiddle;
    this.postSettingsStatisticsTop = postSettingsStatisticsTop;
    this.postSettingsStatisticsTopArrow = postSettingsStatisticsTopArrow;
    this.postSettingsStatisticsTopTitle = postSettingsStatisticsTopTitle;
    this.scroll = scroll;
    this.scrollBody = scrollBody;
    this.spc2 = spc2;
    this.spc3 = spc3;
    this.spc4 = spc4;
    this.title = title;
    this.top = top;
    this.topSpace = topSpace;
    this.topSpace2 = topSpace2;
    this.topSpc = topSpc;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CreateImagePostNextStepBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CreateImagePostNextStepBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.create_image_post_next_step, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CreateImagePostNextStepBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout Main = (LinearLayout) rootView;

      id = R.id.PostInfoTop1;
      LinearLayout PostInfoTop1 = ViewBindings.findChildViewById(rootView, id);
      if (PostInfoTop1 == null) {
        break missingId;
      }

      id = R.id.back;
      ImageView back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.continueButton;
      Button continueButton = ViewBindings.findChildViewById(rootView, id);
      if (continueButton == null) {
        break missingId;
      }

      id = R.id.croppedImageView;
      ImageView croppedImageView = ViewBindings.findChildViewById(rootView, id);
      if (croppedImageView == null) {
        break missingId;
      }

      id = R.id.cropperImageCard;
      CardView cropperImageCard = ViewBindings.findChildViewById(rootView, id);
      if (cropperImageCard == null) {
        break missingId;
      }

      id = R.id.main;
      LinearLayout main = ViewBindings.findChildViewById(rootView, id);
      if (main == null) {
        break missingId;
      }

      id = R.id.postDescription;
      FadeEditText postDescription = ViewBindings.findChildViewById(rootView, id);
      if (postDescription == null) {
        break missingId;
      }

      id = R.id.post_settings_privacy;
      LinearLayout postSettingsPrivacy = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsPrivacy == null) {
        break missingId;
      }

      id = R.id.post_settings_privacy_disable_comments;
      LinearLayout postSettingsPrivacyDisableComments = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsPrivacyDisableComments == null) {
        break missingId;
      }

      id = R.id.post_settings_privacy_disable_comments_subtitle;
      TextView postSettingsPrivacyDisableCommentsSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsPrivacyDisableCommentsSubtitle == null) {
        break missingId;
      }

      id = R.id.post_settings_privacy_disable_comments_switch;
      SwitchCompat postSettingsPrivacyDisableCommentsSwitch = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsPrivacyDisableCommentsSwitch == null) {
        break missingId;
      }

      id = R.id.post_settings_privacy_disable_save;
      LinearLayout postSettingsPrivacyDisableSave = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsPrivacyDisableSave == null) {
        break missingId;
      }

      id = R.id.post_settings_privacy_disable_save_subtitle;
      TextView postSettingsPrivacyDisableSaveSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsPrivacyDisableSaveSubtitle == null) {
        break missingId;
      }

      id = R.id.post_settings_privacy_disable_save_switch;
      SwitchCompat postSettingsPrivacyDisableSaveSwitch = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsPrivacyDisableSaveSwitch == null) {
        break missingId;
      }

      id = R.id.post_settings_privacy_hide_post;
      LinearLayout postSettingsPrivacyHidePost = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsPrivacyHidePost == null) {
        break missingId;
      }

      id = R.id.post_settings_privacy_hide_post_subtitle;
      TextView postSettingsPrivacyHidePostSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsPrivacyHidePostSubtitle == null) {
        break missingId;
      }

      id = R.id.post_settings_privacy_hide_post_switch;
      SwitchCompat postSettingsPrivacyHidePostSwitch = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsPrivacyHidePostSwitch == null) {
        break missingId;
      }

      id = R.id.post_settings_privacy_middle;
      LinearLayout postSettingsPrivacyMiddle = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsPrivacyMiddle == null) {
        break missingId;
      }

      id = R.id.post_settings_privacy_top;
      LinearLayout postSettingsPrivacyTop = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsPrivacyTop == null) {
        break missingId;
      }

      id = R.id.post_settings_privacy_top_arrow;
      ImageView postSettingsPrivacyTopArrow = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsPrivacyTopArrow == null) {
        break missingId;
      }

      id = R.id.post_settings_privacy_top_title;
      TextView postSettingsPrivacyTopTitle = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsPrivacyTopTitle == null) {
        break missingId;
      }

      id = R.id.post_settings_statistics;
      LinearLayout postSettingsStatistics = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsStatistics == null) {
        break missingId;
      }

      id = R.id.post_settings_statistics_hide_comments;
      LinearLayout postSettingsStatisticsHideComments = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsStatisticsHideComments == null) {
        break missingId;
      }

      id = R.id.post_settings_statistics_hide_comments_subtitle;
      TextView postSettingsStatisticsHideCommentsSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsStatisticsHideCommentsSubtitle == null) {
        break missingId;
      }

      id = R.id.post_settings_statistics_hide_comments_switch;
      SwitchCompat postSettingsStatisticsHideCommentsSwitch = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsStatisticsHideCommentsSwitch == null) {
        break missingId;
      }

      id = R.id.post_settings_statistics_hide_likes;
      LinearLayout postSettingsStatisticsHideLikes = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsStatisticsHideLikes == null) {
        break missingId;
      }

      id = R.id.post_settings_statistics_hide_likes_subtitle;
      TextView postSettingsStatisticsHideLikesSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsStatisticsHideLikesSubtitle == null) {
        break missingId;
      }

      id = R.id.post_settings_statistics_hide_likes_switch;
      SwitchCompat postSettingsStatisticsHideLikesSwitch = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsStatisticsHideLikesSwitch == null) {
        break missingId;
      }

      id = R.id.post_settings_statistics_hide_views;
      LinearLayout postSettingsStatisticsHideViews = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsStatisticsHideViews == null) {
        break missingId;
      }

      id = R.id.post_settings_statistics_hide_views_subtitle;
      TextView postSettingsStatisticsHideViewsSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsStatisticsHideViewsSubtitle == null) {
        break missingId;
      }

      id = R.id.post_settings_statistics_hide_views_switch;
      SwitchCompat postSettingsStatisticsHideViewsSwitch = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsStatisticsHideViewsSwitch == null) {
        break missingId;
      }

      id = R.id.post_settings_statistics_middle;
      LinearLayout postSettingsStatisticsMiddle = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsStatisticsMiddle == null) {
        break missingId;
      }

      id = R.id.post_settings_statistics_top;
      LinearLayout postSettingsStatisticsTop = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsStatisticsTop == null) {
        break missingId;
      }

      id = R.id.post_settings_statistics_top_arrow;
      ImageView postSettingsStatisticsTopArrow = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsStatisticsTopArrow == null) {
        break missingId;
      }

      id = R.id.post_settings_statistics_top_title;
      TextView postSettingsStatisticsTopTitle = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsStatisticsTopTitle == null) {
        break missingId;
      }

      id = R.id.scroll;
      ScrollView scroll = ViewBindings.findChildViewById(rootView, id);
      if (scroll == null) {
        break missingId;
      }

      id = R.id.scrollBody;
      LinearLayout scrollBody = ViewBindings.findChildViewById(rootView, id);
      if (scrollBody == null) {
        break missingId;
      }

      id = R.id.spc2;
      LinearLayout spc2 = ViewBindings.findChildViewById(rootView, id);
      if (spc2 == null) {
        break missingId;
      }

      id = R.id.spc3;
      LinearLayout spc3 = ViewBindings.findChildViewById(rootView, id);
      if (spc3 == null) {
        break missingId;
      }

      id = R.id.spc4;
      LinearLayout spc4 = ViewBindings.findChildViewById(rootView, id);
      if (spc4 == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.top;
      LinearLayout top = ViewBindings.findChildViewById(rootView, id);
      if (top == null) {
        break missingId;
      }

      id = R.id.topSpace;
      LinearLayout topSpace = ViewBindings.findChildViewById(rootView, id);
      if (topSpace == null) {
        break missingId;
      }

      id = R.id.topSpace2;
      LinearLayout topSpace2 = ViewBindings.findChildViewById(rootView, id);
      if (topSpace2 == null) {
        break missingId;
      }

      id = R.id.topSpc;
      LinearLayout topSpc = ViewBindings.findChildViewById(rootView, id);
      if (topSpc == null) {
        break missingId;
      }

      return new CreateImagePostNextStepBinding((LinearLayout) rootView, Main, PostInfoTop1, back,
          continueButton, croppedImageView, cropperImageCard, main, postDescription,
          postSettingsPrivacy, postSettingsPrivacyDisableComments,
          postSettingsPrivacyDisableCommentsSubtitle, postSettingsPrivacyDisableCommentsSwitch,
          postSettingsPrivacyDisableSave, postSettingsPrivacyDisableSaveSubtitle,
          postSettingsPrivacyDisableSaveSwitch, postSettingsPrivacyHidePost,
          postSettingsPrivacyHidePostSubtitle, postSettingsPrivacyHidePostSwitch,
          postSettingsPrivacyMiddle, postSettingsPrivacyTop, postSettingsPrivacyTopArrow,
          postSettingsPrivacyTopTitle, postSettingsStatistics, postSettingsStatisticsHideComments,
          postSettingsStatisticsHideCommentsSubtitle, postSettingsStatisticsHideCommentsSwitch,
          postSettingsStatisticsHideLikes, postSettingsStatisticsHideLikesSubtitle,
          postSettingsStatisticsHideLikesSwitch, postSettingsStatisticsHideViews,
          postSettingsStatisticsHideViewsSubtitle, postSettingsStatisticsHideViewsSwitch,
          postSettingsStatisticsMiddle, postSettingsStatisticsTop, postSettingsStatisticsTopArrow,
          postSettingsStatisticsTopTitle, scroll, scrollBody, spc2, spc3, spc4, title, top,
          topSpace, topSpace2, topSpc);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
