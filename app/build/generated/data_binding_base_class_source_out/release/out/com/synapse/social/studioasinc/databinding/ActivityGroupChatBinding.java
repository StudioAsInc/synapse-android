// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import com.google.android.material.textfield.TextInputEditText;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGroupChatBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final MaterialCardView attachmentPreview;

  @NonNull
  public final MaterialButton btnAttachment;

  @NonNull
  public final MaterialButton btnClearAttachments;

  @NonNull
  public final MaterialButton btnEmoji;

  @NonNull
  public final MaterialButton btnSend;

  @NonNull
  public final MaterialButton btnVoiceNote;

  @NonNull
  public final TextInputEditText etMessage;

  @NonNull
  public final MaterialCardView inputContainer;

  @NonNull
  public final LinearProgressIndicator progressBar;

  @NonNull
  public final LinearProgressIndicator progressBarUpload;

  @NonNull
  public final RecyclerView rvMessages;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final TextView tvAttachmentCount;

  private ActivityGroupChatBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull MaterialCardView attachmentPreview,
      @NonNull MaterialButton btnAttachment, @NonNull MaterialButton btnClearAttachments,
      @NonNull MaterialButton btnEmoji, @NonNull MaterialButton btnSend,
      @NonNull MaterialButton btnVoiceNote, @NonNull TextInputEditText etMessage,
      @NonNull MaterialCardView inputContainer, @NonNull LinearProgressIndicator progressBar,
      @NonNull LinearProgressIndicator progressBarUpload, @NonNull RecyclerView rvMessages,
      @NonNull MaterialToolbar toolbar, @NonNull TextView tvAttachmentCount) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.attachmentPreview = attachmentPreview;
    this.btnAttachment = btnAttachment;
    this.btnClearAttachments = btnClearAttachments;
    this.btnEmoji = btnEmoji;
    this.btnSend = btnSend;
    this.btnVoiceNote = btnVoiceNote;
    this.etMessage = etMessage;
    this.inputContainer = inputContainer;
    this.progressBar = progressBar;
    this.progressBarUpload = progressBarUpload;
    this.rvMessages = rvMessages;
    this.toolbar = toolbar;
    this.tvAttachmentCount = tvAttachmentCount;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGroupChatBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGroupChatBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_group_chat, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGroupChatBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.attachmentPreview;
      MaterialCardView attachmentPreview = ViewBindings.findChildViewById(rootView, id);
      if (attachmentPreview == null) {
        break missingId;
      }

      id = R.id.btnAttachment;
      MaterialButton btnAttachment = ViewBindings.findChildViewById(rootView, id);
      if (btnAttachment == null) {
        break missingId;
      }

      id = R.id.btnClearAttachments;
      MaterialButton btnClearAttachments = ViewBindings.findChildViewById(rootView, id);
      if (btnClearAttachments == null) {
        break missingId;
      }

      id = R.id.btnEmoji;
      MaterialButton btnEmoji = ViewBindings.findChildViewById(rootView, id);
      if (btnEmoji == null) {
        break missingId;
      }

      id = R.id.btnSend;
      MaterialButton btnSend = ViewBindings.findChildViewById(rootView, id);
      if (btnSend == null) {
        break missingId;
      }

      id = R.id.btnVoiceNote;
      MaterialButton btnVoiceNote = ViewBindings.findChildViewById(rootView, id);
      if (btnVoiceNote == null) {
        break missingId;
      }

      id = R.id.etMessage;
      TextInputEditText etMessage = ViewBindings.findChildViewById(rootView, id);
      if (etMessage == null) {
        break missingId;
      }

      id = R.id.inputContainer;
      MaterialCardView inputContainer = ViewBindings.findChildViewById(rootView, id);
      if (inputContainer == null) {
        break missingId;
      }

      id = R.id.progressBar;
      LinearProgressIndicator progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.progressBarUpload;
      LinearProgressIndicator progressBarUpload = ViewBindings.findChildViewById(rootView, id);
      if (progressBarUpload == null) {
        break missingId;
      }

      id = R.id.rvMessages;
      RecyclerView rvMessages = ViewBindings.findChildViewById(rootView, id);
      if (rvMessages == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvAttachmentCount;
      TextView tvAttachmentCount = ViewBindings.findChildViewById(rootView, id);
      if (tvAttachmentCount == null) {
        break missingId;
      }

      return new ActivityGroupChatBinding((CoordinatorLayout) rootView, appBarLayout,
          attachmentPreview, btnAttachment, btnClearAttachments, btnEmoji, btnSend, btnVoiceNote,
          etMessage, inputContainer, progressBar, progressBarUpload, rvMessages, toolbar,
          tvAttachmentCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
