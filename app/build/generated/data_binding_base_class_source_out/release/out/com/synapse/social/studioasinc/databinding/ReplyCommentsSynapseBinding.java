// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.synapse.social.studioasinc.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ReplyCommentsSynapseBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView badge;

  @NonNull
  public final LinearLayout body;

  @NonNull
  public final LinearLayout btmSpc;

  @NonNull
  public final LinearLayout cmBottom;

  @NonNull
  public final TextView commentText;

  @NonNull
  public final LinearLayout commentUnix;

  @NonNull
  public final ImageView genderBadge;

  @NonNull
  public final TextView hideRepliesListButton;

  @NonNull
  public final TextView likeCount;

  @NonNull
  public final LinearLayout likeUnlike;

  @NonNull
  public final ImageView likeUnlikeIc;

  @NonNull
  public final RelativeLayout likedByPublisherLayout;

  @NonNull
  public final CircleImageView likedByPublisherLayoutAvatar;

  @NonNull
  public final ImageView likedByPublisherLayoutHeartIc;

  @NonNull
  public final LinearLayout likedByPublisherLayoutRelative;

  @NonNull
  public final LinearLayout more;

  @NonNull
  public final ImageView moreIc;

  @NonNull
  public final RecyclerView otherRepliesList;

  @NonNull
  public final LinearLayout pcb;

  @NonNull
  public final CardView profileCard;

  @NonNull
  public final ImageView profileImage;

  @NonNull
  public final ProgressBar progress;

  @NonNull
  public final TextView push;

  @NonNull
  public final LinearLayout repliesLayout;

  @NonNull
  public final TextView showMoreComment;

  @NonNull
  public final TextView showOtherRepliesButton;

  @NonNull
  public final LinearLayout spc;

  @NonNull
  public final LinearLayout top;

  @NonNull
  public final ImageView topPopular1FireIc;

  @NonNull
  public final ImageView topPopular2FireIc;

  @NonNull
  public final ImageView topPopular3FireIc;

  @NonNull
  public final TextView username;

  private ReplyCommentsSynapseBinding(@NonNull LinearLayout rootView, @NonNull ImageView badge,
      @NonNull LinearLayout body, @NonNull LinearLayout btmSpc, @NonNull LinearLayout cmBottom,
      @NonNull TextView commentText, @NonNull LinearLayout commentUnix,
      @NonNull ImageView genderBadge, @NonNull TextView hideRepliesListButton,
      @NonNull TextView likeCount, @NonNull LinearLayout likeUnlike,
      @NonNull ImageView likeUnlikeIc, @NonNull RelativeLayout likedByPublisherLayout,
      @NonNull CircleImageView likedByPublisherLayoutAvatar,
      @NonNull ImageView likedByPublisherLayoutHeartIc,
      @NonNull LinearLayout likedByPublisherLayoutRelative, @NonNull LinearLayout more,
      @NonNull ImageView moreIc, @NonNull RecyclerView otherRepliesList, @NonNull LinearLayout pcb,
      @NonNull CardView profileCard, @NonNull ImageView profileImage, @NonNull ProgressBar progress,
      @NonNull TextView push, @NonNull LinearLayout repliesLayout,
      @NonNull TextView showMoreComment, @NonNull TextView showOtherRepliesButton,
      @NonNull LinearLayout spc, @NonNull LinearLayout top, @NonNull ImageView topPopular1FireIc,
      @NonNull ImageView topPopular2FireIc, @NonNull ImageView topPopular3FireIc,
      @NonNull TextView username) {
    this.rootView = rootView;
    this.badge = badge;
    this.body = body;
    this.btmSpc = btmSpc;
    this.cmBottom = cmBottom;
    this.commentText = commentText;
    this.commentUnix = commentUnix;
    this.genderBadge = genderBadge;
    this.hideRepliesListButton = hideRepliesListButton;
    this.likeCount = likeCount;
    this.likeUnlike = likeUnlike;
    this.likeUnlikeIc = likeUnlikeIc;
    this.likedByPublisherLayout = likedByPublisherLayout;
    this.likedByPublisherLayoutAvatar = likedByPublisherLayoutAvatar;
    this.likedByPublisherLayoutHeartIc = likedByPublisherLayoutHeartIc;
    this.likedByPublisherLayoutRelative = likedByPublisherLayoutRelative;
    this.more = more;
    this.moreIc = moreIc;
    this.otherRepliesList = otherRepliesList;
    this.pcb = pcb;
    this.profileCard = profileCard;
    this.profileImage = profileImage;
    this.progress = progress;
    this.push = push;
    this.repliesLayout = repliesLayout;
    this.showMoreComment = showMoreComment;
    this.showOtherRepliesButton = showOtherRepliesButton;
    this.spc = spc;
    this.top = top;
    this.topPopular1FireIc = topPopular1FireIc;
    this.topPopular2FireIc = topPopular2FireIc;
    this.topPopular3FireIc = topPopular3FireIc;
    this.username = username;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ReplyCommentsSynapseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReplyCommentsSynapseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.reply_comments_synapse, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReplyCommentsSynapseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.badge;
      ImageView badge = ViewBindings.findChildViewById(rootView, id);
      if (badge == null) {
        break missingId;
      }

      id = R.id.body;
      LinearLayout body = ViewBindings.findChildViewById(rootView, id);
      if (body == null) {
        break missingId;
      }

      id = R.id.btmSpc;
      LinearLayout btmSpc = ViewBindings.findChildViewById(rootView, id);
      if (btmSpc == null) {
        break missingId;
      }

      id = R.id.cmBottom;
      LinearLayout cmBottom = ViewBindings.findChildViewById(rootView, id);
      if (cmBottom == null) {
        break missingId;
      }

      id = R.id.comment_text;
      TextView commentText = ViewBindings.findChildViewById(rootView, id);
      if (commentText == null) {
        break missingId;
      }

      id = R.id.commentUnix;
      LinearLayout commentUnix = ViewBindings.findChildViewById(rootView, id);
      if (commentUnix == null) {
        break missingId;
      }

      id = R.id.genderBadge;
      ImageView genderBadge = ViewBindings.findChildViewById(rootView, id);
      if (genderBadge == null) {
        break missingId;
      }

      id = R.id.hide_replies_list_button;
      TextView hideRepliesListButton = ViewBindings.findChildViewById(rootView, id);
      if (hideRepliesListButton == null) {
        break missingId;
      }

      id = R.id.like_count;
      TextView likeCount = ViewBindings.findChildViewById(rootView, id);
      if (likeCount == null) {
        break missingId;
      }

      id = R.id.like_unlike;
      LinearLayout likeUnlike = ViewBindings.findChildViewById(rootView, id);
      if (likeUnlike == null) {
        break missingId;
      }

      id = R.id.like_unlike_ic;
      ImageView likeUnlikeIc = ViewBindings.findChildViewById(rootView, id);
      if (likeUnlikeIc == null) {
        break missingId;
      }

      id = R.id.likedByPublisherLayout;
      RelativeLayout likedByPublisherLayout = ViewBindings.findChildViewById(rootView, id);
      if (likedByPublisherLayout == null) {
        break missingId;
      }

      id = R.id.likedByPublisherLayoutAvatar;
      CircleImageView likedByPublisherLayoutAvatar = ViewBindings.findChildViewById(rootView, id);
      if (likedByPublisherLayoutAvatar == null) {
        break missingId;
      }

      id = R.id.likedByPublisherLayoutHeartIc;
      ImageView likedByPublisherLayoutHeartIc = ViewBindings.findChildViewById(rootView, id);
      if (likedByPublisherLayoutHeartIc == null) {
        break missingId;
      }

      id = R.id.likedByPublisherLayoutRelative;
      LinearLayout likedByPublisherLayoutRelative = ViewBindings.findChildViewById(rootView, id);
      if (likedByPublisherLayoutRelative == null) {
        break missingId;
      }

      id = R.id.more;
      LinearLayout more = ViewBindings.findChildViewById(rootView, id);
      if (more == null) {
        break missingId;
      }

      id = R.id.more_ic;
      ImageView moreIc = ViewBindings.findChildViewById(rootView, id);
      if (moreIc == null) {
        break missingId;
      }

      id = R.id.other_replies_list;
      RecyclerView otherRepliesList = ViewBindings.findChildViewById(rootView, id);
      if (otherRepliesList == null) {
        break missingId;
      }

      id = R.id.pcb;
      LinearLayout pcb = ViewBindings.findChildViewById(rootView, id);
      if (pcb == null) {
        break missingId;
      }

      id = R.id.profileCard;
      CardView profileCard = ViewBindings.findChildViewById(rootView, id);
      if (profileCard == null) {
        break missingId;
      }

      id = R.id.profileImage;
      ImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.progress;
      ProgressBar progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.push;
      TextView push = ViewBindings.findChildViewById(rootView, id);
      if (push == null) {
        break missingId;
      }

      id = R.id.replies_layout;
      LinearLayout repliesLayout = ViewBindings.findChildViewById(rootView, id);
      if (repliesLayout == null) {
        break missingId;
      }

      id = R.id.show_more_comment;
      TextView showMoreComment = ViewBindings.findChildViewById(rootView, id);
      if (showMoreComment == null) {
        break missingId;
      }

      id = R.id.show_other_replies_button;
      TextView showOtherRepliesButton = ViewBindings.findChildViewById(rootView, id);
      if (showOtherRepliesButton == null) {
        break missingId;
      }

      id = R.id.spc;
      LinearLayout spc = ViewBindings.findChildViewById(rootView, id);
      if (spc == null) {
        break missingId;
      }

      id = R.id.top;
      LinearLayout top = ViewBindings.findChildViewById(rootView, id);
      if (top == null) {
        break missingId;
      }

      id = R.id.top_popular_1_fire_ic;
      ImageView topPopular1FireIc = ViewBindings.findChildViewById(rootView, id);
      if (topPopular1FireIc == null) {
        break missingId;
      }

      id = R.id.top_popular_2_fire_ic;
      ImageView topPopular2FireIc = ViewBindings.findChildViewById(rootView, id);
      if (topPopular2FireIc == null) {
        break missingId;
      }

      id = R.id.top_popular_3_fire_ic;
      ImageView topPopular3FireIc = ViewBindings.findChildViewById(rootView, id);
      if (topPopular3FireIc == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new ReplyCommentsSynapseBinding((LinearLayout) rootView, badge, body, btmSpc, cmBottom,
          commentText, commentUnix, genderBadge, hideRepliesListButton, likeCount, likeUnlike,
          likeUnlikeIc, likedByPublisherLayout, likedByPublisherLayoutAvatar,
          likedByPublisherLayoutHeartIc, likedByPublisherLayoutRelative, more, moreIc,
          otherRepliesList, pcb, profileCard, profileImage, progress, push, repliesLayout,
          showMoreComment, showOtherRepliesButton, spc, top, topPopular1FireIc, topPopular2FireIc,
          topPopular3FireIc, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
