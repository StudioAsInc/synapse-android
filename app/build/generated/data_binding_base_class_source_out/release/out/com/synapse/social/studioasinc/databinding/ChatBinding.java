// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.synapse.social.studioasinc.FadeEditText;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChatBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RecyclerView ChatMessagesListRecycler;

  @NonNull
  public final LinearLayout Main;

  @NonNull
  public final LinearLayout appBar;

  @NonNull
  public final RelativeLayout attachmentLayoutListHolder;

  @NonNull
  public final ImageView back;

  @NonNull
  public final TextView blockedTxt;

  @NonNull
  public final LinearLayout body;

  @NonNull
  public final MaterialButton btnSendMessage;

  @NonNull
  public final CardView cardAttactmentListRVHolder;

  @NonNull
  public final ImageView closeAttachmentsBtn;

  @NonNull
  public final LinearLayout deviderMicCamera;

  @NonNull
  public final ImageView expandSendTypeBtn;

  @NonNull
  public final ImageView galleryBtn;

  @NonNull
  public final ImageView icAudioCall;

  @NonNull
  public final ImageView icMore;

  @NonNull
  public final ImageView icVideoCall;

  @NonNull
  public final ImageView ivBGimage;

  @NonNull
  public final LinearLayout mMessageReplyLayout;

  @NonNull
  public final LinearLayout mMessageReplyLayoutBody;

  @NonNull
  public final ImageView mMessageReplyLayoutBodyCancel;

  @NonNull
  public final ImageView mMessageReplyLayoutBodyIc;

  @NonNull
  public final LinearLayout mMessageReplyLayoutBodyRight;

  @NonNull
  public final TextView mMessageReplyLayoutBodyRightMessage;

  @NonNull
  public final TextView mMessageReplyLayoutBodyRightUsername;

  @NonNull
  public final LinearLayout mMessageReplyLayoutSpace;

  @NonNull
  public final FadeEditText messageEt;

  @NonNull
  public final LinearLayout messageInputOutlinedRound;

  @NonNull
  public final LinearLayout messageInputOverallContainer;

  @NonNull
  public final LinearLayout middle;

  @NonNull
  public final TextView noChatText;

  @NonNull
  public final LinearLayout parent;

  @NonNull
  public final RelativeLayout relativelayout1;

  @NonNull
  public final RecyclerView rvAttacmentList;

  @NonNull
  public final LinearLayout toolContainer;

  @NonNull
  public final CardView topProfileCard;

  @NonNull
  public final LinearLayout topProfileLayout;

  @NonNull
  public final ImageView topProfileLayoutGenderBadge;

  @NonNull
  public final ImageView topProfileLayoutProfileImage;

  @NonNull
  public final LinearLayout topProfileLayoutRight;

  @NonNull
  public final LinearLayout topProfileLayoutRightTop;

  @NonNull
  public final LinearLayout topProfileLayoutSpace;

  @NonNull
  public final TextView topProfileLayoutStatus;

  @NonNull
  public final TextView topProfileLayoutUsername;

  @NonNull
  public final ImageView topProfileLayoutVerifiedBadge;

  private ChatBinding(@NonNull LinearLayout rootView,
      @NonNull RecyclerView ChatMessagesListRecycler, @NonNull LinearLayout Main,
      @NonNull LinearLayout appBar, @NonNull RelativeLayout attachmentLayoutListHolder,
      @NonNull ImageView back, @NonNull TextView blockedTxt, @NonNull LinearLayout body,
      @NonNull MaterialButton btnSendMessage, @NonNull CardView cardAttactmentListRVHolder,
      @NonNull ImageView closeAttachmentsBtn, @NonNull LinearLayout deviderMicCamera,
      @NonNull ImageView expandSendTypeBtn, @NonNull ImageView galleryBtn,
      @NonNull ImageView icAudioCall, @NonNull ImageView icMore, @NonNull ImageView icVideoCall,
      @NonNull ImageView ivBGimage, @NonNull LinearLayout mMessageReplyLayout,
      @NonNull LinearLayout mMessageReplyLayoutBody,
      @NonNull ImageView mMessageReplyLayoutBodyCancel,
      @NonNull ImageView mMessageReplyLayoutBodyIc,
      @NonNull LinearLayout mMessageReplyLayoutBodyRight,
      @NonNull TextView mMessageReplyLayoutBodyRightMessage,
      @NonNull TextView mMessageReplyLayoutBodyRightUsername,
      @NonNull LinearLayout mMessageReplyLayoutSpace, @NonNull FadeEditText messageEt,
      @NonNull LinearLayout messageInputOutlinedRound,
      @NonNull LinearLayout messageInputOverallContainer, @NonNull LinearLayout middle,
      @NonNull TextView noChatText, @NonNull LinearLayout parent,
      @NonNull RelativeLayout relativelayout1, @NonNull RecyclerView rvAttacmentList,
      @NonNull LinearLayout toolContainer, @NonNull CardView topProfileCard,
      @NonNull LinearLayout topProfileLayout, @NonNull ImageView topProfileLayoutGenderBadge,
      @NonNull ImageView topProfileLayoutProfileImage, @NonNull LinearLayout topProfileLayoutRight,
      @NonNull LinearLayout topProfileLayoutRightTop, @NonNull LinearLayout topProfileLayoutSpace,
      @NonNull TextView topProfileLayoutStatus, @NonNull TextView topProfileLayoutUsername,
      @NonNull ImageView topProfileLayoutVerifiedBadge) {
    this.rootView = rootView;
    this.ChatMessagesListRecycler = ChatMessagesListRecycler;
    this.Main = Main;
    this.appBar = appBar;
    this.attachmentLayoutListHolder = attachmentLayoutListHolder;
    this.back = back;
    this.blockedTxt = blockedTxt;
    this.body = body;
    this.btnSendMessage = btnSendMessage;
    this.cardAttactmentListRVHolder = cardAttactmentListRVHolder;
    this.closeAttachmentsBtn = closeAttachmentsBtn;
    this.deviderMicCamera = deviderMicCamera;
    this.expandSendTypeBtn = expandSendTypeBtn;
    this.galleryBtn = galleryBtn;
    this.icAudioCall = icAudioCall;
    this.icMore = icMore;
    this.icVideoCall = icVideoCall;
    this.ivBGimage = ivBGimage;
    this.mMessageReplyLayout = mMessageReplyLayout;
    this.mMessageReplyLayoutBody = mMessageReplyLayoutBody;
    this.mMessageReplyLayoutBodyCancel = mMessageReplyLayoutBodyCancel;
    this.mMessageReplyLayoutBodyIc = mMessageReplyLayoutBodyIc;
    this.mMessageReplyLayoutBodyRight = mMessageReplyLayoutBodyRight;
    this.mMessageReplyLayoutBodyRightMessage = mMessageReplyLayoutBodyRightMessage;
    this.mMessageReplyLayoutBodyRightUsername = mMessageReplyLayoutBodyRightUsername;
    this.mMessageReplyLayoutSpace = mMessageReplyLayoutSpace;
    this.messageEt = messageEt;
    this.messageInputOutlinedRound = messageInputOutlinedRound;
    this.messageInputOverallContainer = messageInputOverallContainer;
    this.middle = middle;
    this.noChatText = noChatText;
    this.parent = parent;
    this.relativelayout1 = relativelayout1;
    this.rvAttacmentList = rvAttacmentList;
    this.toolContainer = toolContainer;
    this.topProfileCard = topProfileCard;
    this.topProfileLayout = topProfileLayout;
    this.topProfileLayoutGenderBadge = topProfileLayoutGenderBadge;
    this.topProfileLayoutProfileImage = topProfileLayoutProfileImage;
    this.topProfileLayoutRight = topProfileLayoutRight;
    this.topProfileLayoutRightTop = topProfileLayoutRightTop;
    this.topProfileLayoutSpace = topProfileLayoutSpace;
    this.topProfileLayoutStatus = topProfileLayoutStatus;
    this.topProfileLayoutUsername = topProfileLayoutUsername;
    this.topProfileLayoutVerifiedBadge = topProfileLayoutVerifiedBadge;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ChatBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChatBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.chat, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChatBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ChatMessagesListRecycler;
      RecyclerView ChatMessagesListRecycler = ViewBindings.findChildViewById(rootView, id);
      if (ChatMessagesListRecycler == null) {
        break missingId;
      }

      LinearLayout Main = (LinearLayout) rootView;

      id = R.id.appBar;
      LinearLayout appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.attachmentLayoutListHolder;
      RelativeLayout attachmentLayoutListHolder = ViewBindings.findChildViewById(rootView, id);
      if (attachmentLayoutListHolder == null) {
        break missingId;
      }

      id = R.id.back;
      ImageView back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.blocked_txt;
      TextView blockedTxt = ViewBindings.findChildViewById(rootView, id);
      if (blockedTxt == null) {
        break missingId;
      }

      id = R.id.body;
      LinearLayout body = ViewBindings.findChildViewById(rootView, id);
      if (body == null) {
        break missingId;
      }

      id = R.id.btn_sendMessage;
      MaterialButton btnSendMessage = ViewBindings.findChildViewById(rootView, id);
      if (btnSendMessage == null) {
        break missingId;
      }

      id = R.id.card_attactmentListRVHolder;
      CardView cardAttactmentListRVHolder = ViewBindings.findChildViewById(rootView, id);
      if (cardAttactmentListRVHolder == null) {
        break missingId;
      }

      id = R.id.close_attachments_btn;
      ImageView closeAttachmentsBtn = ViewBindings.findChildViewById(rootView, id);
      if (closeAttachmentsBtn == null) {
        break missingId;
      }

      id = R.id.devider_mic_camera;
      LinearLayout deviderMicCamera = ViewBindings.findChildViewById(rootView, id);
      if (deviderMicCamera == null) {
        break missingId;
      }

      id = R.id.expand_send_type_btn;
      ImageView expandSendTypeBtn = ViewBindings.findChildViewById(rootView, id);
      if (expandSendTypeBtn == null) {
        break missingId;
      }

      id = R.id.galleryBtn;
      ImageView galleryBtn = ViewBindings.findChildViewById(rootView, id);
      if (galleryBtn == null) {
        break missingId;
      }

      id = R.id.ic_audio_call;
      ImageView icAudioCall = ViewBindings.findChildViewById(rootView, id);
      if (icAudioCall == null) {
        break missingId;
      }

      id = R.id.ic_more;
      ImageView icMore = ViewBindings.findChildViewById(rootView, id);
      if (icMore == null) {
        break missingId;
      }

      id = R.id.ic_video_call;
      ImageView icVideoCall = ViewBindings.findChildViewById(rootView, id);
      if (icVideoCall == null) {
        break missingId;
      }

      id = R.id.ivBGimage;
      ImageView ivBGimage = ViewBindings.findChildViewById(rootView, id);
      if (ivBGimage == null) {
        break missingId;
      }

      id = R.id.mMessageReplyLayout;
      LinearLayout mMessageReplyLayout = ViewBindings.findChildViewById(rootView, id);
      if (mMessageReplyLayout == null) {
        break missingId;
      }

      id = R.id.mMessageReplyLayoutBody;
      LinearLayout mMessageReplyLayoutBody = ViewBindings.findChildViewById(rootView, id);
      if (mMessageReplyLayoutBody == null) {
        break missingId;
      }

      id = R.id.mMessageReplyLayoutBodyCancel;
      ImageView mMessageReplyLayoutBodyCancel = ViewBindings.findChildViewById(rootView, id);
      if (mMessageReplyLayoutBodyCancel == null) {
        break missingId;
      }

      id = R.id.mMessageReplyLayoutBodyIc;
      ImageView mMessageReplyLayoutBodyIc = ViewBindings.findChildViewById(rootView, id);
      if (mMessageReplyLayoutBodyIc == null) {
        break missingId;
      }

      id = R.id.mMessageReplyLayoutBodyRight;
      LinearLayout mMessageReplyLayoutBodyRight = ViewBindings.findChildViewById(rootView, id);
      if (mMessageReplyLayoutBodyRight == null) {
        break missingId;
      }

      id = R.id.mMessageReplyLayoutBodyRightMessage;
      TextView mMessageReplyLayoutBodyRightMessage = ViewBindings.findChildViewById(rootView, id);
      if (mMessageReplyLayoutBodyRightMessage == null) {
        break missingId;
      }

      id = R.id.mMessageReplyLayoutBodyRightUsername;
      TextView mMessageReplyLayoutBodyRightUsername = ViewBindings.findChildViewById(rootView, id);
      if (mMessageReplyLayoutBodyRightUsername == null) {
        break missingId;
      }

      id = R.id.mMessageReplyLayoutSpace;
      LinearLayout mMessageReplyLayoutSpace = ViewBindings.findChildViewById(rootView, id);
      if (mMessageReplyLayoutSpace == null) {
        break missingId;
      }

      id = R.id.message_et;
      FadeEditText messageEt = ViewBindings.findChildViewById(rootView, id);
      if (messageEt == null) {
        break missingId;
      }

      id = R.id.message_input_outlined_round;
      LinearLayout messageInputOutlinedRound = ViewBindings.findChildViewById(rootView, id);
      if (messageInputOutlinedRound == null) {
        break missingId;
      }

      id = R.id.message_input_overall_container;
      LinearLayout messageInputOverallContainer = ViewBindings.findChildViewById(rootView, id);
      if (messageInputOverallContainer == null) {
        break missingId;
      }

      id = R.id.middle;
      LinearLayout middle = ViewBindings.findChildViewById(rootView, id);
      if (middle == null) {
        break missingId;
      }

      id = R.id.noChatText;
      TextView noChatText = ViewBindings.findChildViewById(rootView, id);
      if (noChatText == null) {
        break missingId;
      }

      id = R.id.parent;
      LinearLayout parent = ViewBindings.findChildViewById(rootView, id);
      if (parent == null) {
        break missingId;
      }

      id = R.id.relativelayout1;
      RelativeLayout relativelayout1 = ViewBindings.findChildViewById(rootView, id);
      if (relativelayout1 == null) {
        break missingId;
      }

      id = R.id.rv_attacmentList;
      RecyclerView rvAttacmentList = ViewBindings.findChildViewById(rootView, id);
      if (rvAttacmentList == null) {
        break missingId;
      }

      id = R.id.toolContainer;
      LinearLayout toolContainer = ViewBindings.findChildViewById(rootView, id);
      if (toolContainer == null) {
        break missingId;
      }

      id = R.id.topProfileCard;
      CardView topProfileCard = ViewBindings.findChildViewById(rootView, id);
      if (topProfileCard == null) {
        break missingId;
      }

      id = R.id.topProfileLayout;
      LinearLayout topProfileLayout = ViewBindings.findChildViewById(rootView, id);
      if (topProfileLayout == null) {
        break missingId;
      }

      id = R.id.topProfileLayoutGenderBadge;
      ImageView topProfileLayoutGenderBadge = ViewBindings.findChildViewById(rootView, id);
      if (topProfileLayoutGenderBadge == null) {
        break missingId;
      }

      id = R.id.topProfileLayoutProfileImage;
      ImageView topProfileLayoutProfileImage = ViewBindings.findChildViewById(rootView, id);
      if (topProfileLayoutProfileImage == null) {
        break missingId;
      }

      id = R.id.topProfileLayoutRight;
      LinearLayout topProfileLayoutRight = ViewBindings.findChildViewById(rootView, id);
      if (topProfileLayoutRight == null) {
        break missingId;
      }

      id = R.id.topProfileLayoutRightTop;
      LinearLayout topProfileLayoutRightTop = ViewBindings.findChildViewById(rootView, id);
      if (topProfileLayoutRightTop == null) {
        break missingId;
      }

      id = R.id.topProfileLayoutSpace;
      LinearLayout topProfileLayoutSpace = ViewBindings.findChildViewById(rootView, id);
      if (topProfileLayoutSpace == null) {
        break missingId;
      }

      id = R.id.topProfileLayoutStatus;
      TextView topProfileLayoutStatus = ViewBindings.findChildViewById(rootView, id);
      if (topProfileLayoutStatus == null) {
        break missingId;
      }

      id = R.id.topProfileLayoutUsername;
      TextView topProfileLayoutUsername = ViewBindings.findChildViewById(rootView, id);
      if (topProfileLayoutUsername == null) {
        break missingId;
      }

      id = R.id.topProfileLayoutVerifiedBadge;
      ImageView topProfileLayoutVerifiedBadge = ViewBindings.findChildViewById(rootView, id);
      if (topProfileLayoutVerifiedBadge == null) {
        break missingId;
      }

      return new ChatBinding((LinearLayout) rootView, ChatMessagesListRecycler, Main, appBar,
          attachmentLayoutListHolder, back, blockedTxt, body, btnSendMessage,
          cardAttactmentListRVHolder, closeAttachmentsBtn, deviderMicCamera, expandSendTypeBtn,
          galleryBtn, icAudioCall, icMore, icVideoCall, ivBGimage, mMessageReplyLayout,
          mMessageReplyLayoutBody, mMessageReplyLayoutBodyCancel, mMessageReplyLayoutBodyIc,
          mMessageReplyLayoutBodyRight, mMessageReplyLayoutBodyRightMessage,
          mMessageReplyLayoutBodyRightUsername, mMessageReplyLayoutSpace, messageEt,
          messageInputOutlinedRound, messageInputOverallContainer, middle, noChatText, parent,
          relativelayout1, rvAttacmentList, toolContainer, topProfileCard, topProfileLayout,
          topProfileLayoutGenderBadge, topProfileLayoutProfileImage, topProfileLayoutRight,
          topProfileLayoutRightTop, topProfileLayoutSpace, topProfileLayoutStatus,
          topProfileLayoutUsername, topProfileLayoutVerifiedBadge);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
