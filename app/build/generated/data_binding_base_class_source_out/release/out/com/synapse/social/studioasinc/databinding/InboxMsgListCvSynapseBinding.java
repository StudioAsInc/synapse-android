// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class InboxMsgListCvSynapseBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout ProfileRelativeUp;

  @NonNull
  public final LinearLayout body;

  @NonNull
  public final LinearLayout btnss;

  @NonNull
  public final CardView cardview1;

  @NonNull
  public final ImageView genderBadge;

  @NonNull
  public final TextView lastMessage;

  @NonNull
  public final LinearLayout lin;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final ImageView messageState;

  @NonNull
  public final CardView profileCard;

  @NonNull
  public final ImageView profileCardImage;

  @NonNull
  public final RelativeLayout profileCardRelative;

  @NonNull
  public final TextView push;

  @NonNull
  public final LinearLayout spc;

  @NonNull
  public final LinearLayout spcBottom;

  @NonNull
  public final TextView unreadMessagesCountBadge;

  @NonNull
  public final LinearLayout userStatusCircleBG;

  @NonNull
  public final LinearLayout userStatusCircleIN;

  @NonNull
  public final TextView username;

  @NonNull
  public final LinearLayout usr;

  @NonNull
  public final ImageView verifiedBadge;

  private InboxMsgListCvSynapseBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout ProfileRelativeUp, @NonNull LinearLayout body,
      @NonNull LinearLayout btnss, @NonNull CardView cardview1, @NonNull ImageView genderBadge,
      @NonNull TextView lastMessage, @NonNull LinearLayout lin, @NonNull LinearLayout main,
      @NonNull ImageView messageState, @NonNull CardView profileCard,
      @NonNull ImageView profileCardImage, @NonNull RelativeLayout profileCardRelative,
      @NonNull TextView push, @NonNull LinearLayout spc, @NonNull LinearLayout spcBottom,
      @NonNull TextView unreadMessagesCountBadge, @NonNull LinearLayout userStatusCircleBG,
      @NonNull LinearLayout userStatusCircleIN, @NonNull TextView username,
      @NonNull LinearLayout usr, @NonNull ImageView verifiedBadge) {
    this.rootView = rootView;
    this.ProfileRelativeUp = ProfileRelativeUp;
    this.body = body;
    this.btnss = btnss;
    this.cardview1 = cardview1;
    this.genderBadge = genderBadge;
    this.lastMessage = lastMessage;
    this.lin = lin;
    this.main = main;
    this.messageState = messageState;
    this.profileCard = profileCard;
    this.profileCardImage = profileCardImage;
    this.profileCardRelative = profileCardRelative;
    this.push = push;
    this.spc = spc;
    this.spcBottom = spcBottom;
    this.unreadMessagesCountBadge = unreadMessagesCountBadge;
    this.userStatusCircleBG = userStatusCircleBG;
    this.userStatusCircleIN = userStatusCircleIN;
    this.username = username;
    this.usr = usr;
    this.verifiedBadge = verifiedBadge;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static InboxMsgListCvSynapseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static InboxMsgListCvSynapseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.inbox_msg_list_cv_synapse, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static InboxMsgListCvSynapseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ProfileRelativeUp;
      LinearLayout ProfileRelativeUp = ViewBindings.findChildViewById(rootView, id);
      if (ProfileRelativeUp == null) {
        break missingId;
      }

      id = R.id.body;
      LinearLayout body = ViewBindings.findChildViewById(rootView, id);
      if (body == null) {
        break missingId;
      }

      id = R.id.btnss;
      LinearLayout btnss = ViewBindings.findChildViewById(rootView, id);
      if (btnss == null) {
        break missingId;
      }

      id = R.id.cardview1;
      CardView cardview1 = ViewBindings.findChildViewById(rootView, id);
      if (cardview1 == null) {
        break missingId;
      }

      id = R.id.genderBadge;
      ImageView genderBadge = ViewBindings.findChildViewById(rootView, id);
      if (genderBadge == null) {
        break missingId;
      }

      id = R.id.last_message;
      TextView lastMessage = ViewBindings.findChildViewById(rootView, id);
      if (lastMessage == null) {
        break missingId;
      }

      id = R.id.lin;
      LinearLayout lin = ViewBindings.findChildViewById(rootView, id);
      if (lin == null) {
        break missingId;
      }

      id = R.id.main;
      LinearLayout main = ViewBindings.findChildViewById(rootView, id);
      if (main == null) {
        break missingId;
      }

      id = R.id.message_state;
      ImageView messageState = ViewBindings.findChildViewById(rootView, id);
      if (messageState == null) {
        break missingId;
      }

      id = R.id.profileCard;
      CardView profileCard = ViewBindings.findChildViewById(rootView, id);
      if (profileCard == null) {
        break missingId;
      }

      id = R.id.profileCardImage;
      ImageView profileCardImage = ViewBindings.findChildViewById(rootView, id);
      if (profileCardImage == null) {
        break missingId;
      }

      id = R.id.profileCardRelative;
      RelativeLayout profileCardRelative = ViewBindings.findChildViewById(rootView, id);
      if (profileCardRelative == null) {
        break missingId;
      }

      id = R.id.push;
      TextView push = ViewBindings.findChildViewById(rootView, id);
      if (push == null) {
        break missingId;
      }

      id = R.id.spc;
      LinearLayout spc = ViewBindings.findChildViewById(rootView, id);
      if (spc == null) {
        break missingId;
      }

      id = R.id.spcBottom;
      LinearLayout spcBottom = ViewBindings.findChildViewById(rootView, id);
      if (spcBottom == null) {
        break missingId;
      }

      id = R.id.unread_messages_count_badge;
      TextView unreadMessagesCountBadge = ViewBindings.findChildViewById(rootView, id);
      if (unreadMessagesCountBadge == null) {
        break missingId;
      }

      id = R.id.userStatusCircleBG;
      LinearLayout userStatusCircleBG = ViewBindings.findChildViewById(rootView, id);
      if (userStatusCircleBG == null) {
        break missingId;
      }

      id = R.id.userStatusCircleIN;
      LinearLayout userStatusCircleIN = ViewBindings.findChildViewById(rootView, id);
      if (userStatusCircleIN == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      id = R.id.usr;
      LinearLayout usr = ViewBindings.findChildViewById(rootView, id);
      if (usr == null) {
        break missingId;
      }

      id = R.id.verifiedBadge;
      ImageView verifiedBadge = ViewBindings.findChildViewById(rootView, id);
      if (verifiedBadge == null) {
        break missingId;
      }

      return new InboxMsgListCvSynapseBinding((LinearLayout) rootView, ProfileRelativeUp, body,
          btnss, cardview1, genderBadge, lastMessage, lin, main, messageState, profileCard,
          profileCardImage, profileCardRelative, push, spc, spcBottom, unreadMessagesCountBadge,
          userStatusCircleBG, userStatusCircleIN, username, usr, verifiedBadge);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
