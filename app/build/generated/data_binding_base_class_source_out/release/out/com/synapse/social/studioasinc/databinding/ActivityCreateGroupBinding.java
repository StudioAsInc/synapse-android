// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.materialswitch.MaterialSwitch;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import com.google.android.material.slider.Slider;
import com.google.android.material.textfield.TextInputEditText;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCreateGroupBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final MaterialButton btnCreateGroup;

  @NonNull
  public final MaterialButton btnSelectIcon;

  @NonNull
  public final ChipGroup chipGroupMembers;

  @NonNull
  public final TextInputEditText etGroupDescription;

  @NonNull
  public final TextInputEditText etGroupName;

  @NonNull
  public final TextInputEditText etSearchMembers;

  @NonNull
  public final ShapeableImageView ivGroupIcon;

  @NonNull
  public final LinearProgressIndicator progressBar;

  @NonNull
  public final LinearProgressIndicator progressBarSearch;

  @NonNull
  public final RecyclerView rvSearchResults;

  @NonNull
  public final Slider sliderMaxMembers;

  @NonNull
  public final MaterialSwitch switchAllowMembersToAdd;

  @NonNull
  public final MaterialSwitch switchAllowMembersToEdit;

  @NonNull
  public final MaterialSwitch switchOnlyAdminsMessage;

  @NonNull
  public final MaterialSwitch switchPrivateGroup;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final TextView tvMaxMembersValue;

  @NonNull
  public final TextView tvMemberCount;

  private ActivityCreateGroupBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull MaterialButton btnCreateGroup,
      @NonNull MaterialButton btnSelectIcon, @NonNull ChipGroup chipGroupMembers,
      @NonNull TextInputEditText etGroupDescription, @NonNull TextInputEditText etGroupName,
      @NonNull TextInputEditText etSearchMembers, @NonNull ShapeableImageView ivGroupIcon,
      @NonNull LinearProgressIndicator progressBar,
      @NonNull LinearProgressIndicator progressBarSearch, @NonNull RecyclerView rvSearchResults,
      @NonNull Slider sliderMaxMembers, @NonNull MaterialSwitch switchAllowMembersToAdd,
      @NonNull MaterialSwitch switchAllowMembersToEdit,
      @NonNull MaterialSwitch switchOnlyAdminsMessage, @NonNull MaterialSwitch switchPrivateGroup,
      @NonNull MaterialToolbar toolbar, @NonNull TextView tvMaxMembersValue,
      @NonNull TextView tvMemberCount) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.btnCreateGroup = btnCreateGroup;
    this.btnSelectIcon = btnSelectIcon;
    this.chipGroupMembers = chipGroupMembers;
    this.etGroupDescription = etGroupDescription;
    this.etGroupName = etGroupName;
    this.etSearchMembers = etSearchMembers;
    this.ivGroupIcon = ivGroupIcon;
    this.progressBar = progressBar;
    this.progressBarSearch = progressBarSearch;
    this.rvSearchResults = rvSearchResults;
    this.sliderMaxMembers = sliderMaxMembers;
    this.switchAllowMembersToAdd = switchAllowMembersToAdd;
    this.switchAllowMembersToEdit = switchAllowMembersToEdit;
    this.switchOnlyAdminsMessage = switchOnlyAdminsMessage;
    this.switchPrivateGroup = switchPrivateGroup;
    this.toolbar = toolbar;
    this.tvMaxMembersValue = tvMaxMembersValue;
    this.tvMemberCount = tvMemberCount;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCreateGroupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCreateGroupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_create_group, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCreateGroupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.btnCreateGroup;
      MaterialButton btnCreateGroup = ViewBindings.findChildViewById(rootView, id);
      if (btnCreateGroup == null) {
        break missingId;
      }

      id = R.id.btnSelectIcon;
      MaterialButton btnSelectIcon = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectIcon == null) {
        break missingId;
      }

      id = R.id.chipGroupMembers;
      ChipGroup chipGroupMembers = ViewBindings.findChildViewById(rootView, id);
      if (chipGroupMembers == null) {
        break missingId;
      }

      id = R.id.etGroupDescription;
      TextInputEditText etGroupDescription = ViewBindings.findChildViewById(rootView, id);
      if (etGroupDescription == null) {
        break missingId;
      }

      id = R.id.etGroupName;
      TextInputEditText etGroupName = ViewBindings.findChildViewById(rootView, id);
      if (etGroupName == null) {
        break missingId;
      }

      id = R.id.etSearchMembers;
      TextInputEditText etSearchMembers = ViewBindings.findChildViewById(rootView, id);
      if (etSearchMembers == null) {
        break missingId;
      }

      id = R.id.ivGroupIcon;
      ShapeableImageView ivGroupIcon = ViewBindings.findChildViewById(rootView, id);
      if (ivGroupIcon == null) {
        break missingId;
      }

      id = R.id.progressBar;
      LinearProgressIndicator progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.progressBarSearch;
      LinearProgressIndicator progressBarSearch = ViewBindings.findChildViewById(rootView, id);
      if (progressBarSearch == null) {
        break missingId;
      }

      id = R.id.rvSearchResults;
      RecyclerView rvSearchResults = ViewBindings.findChildViewById(rootView, id);
      if (rvSearchResults == null) {
        break missingId;
      }

      id = R.id.sliderMaxMembers;
      Slider sliderMaxMembers = ViewBindings.findChildViewById(rootView, id);
      if (sliderMaxMembers == null) {
        break missingId;
      }

      id = R.id.switchAllowMembersToAdd;
      MaterialSwitch switchAllowMembersToAdd = ViewBindings.findChildViewById(rootView, id);
      if (switchAllowMembersToAdd == null) {
        break missingId;
      }

      id = R.id.switchAllowMembersToEdit;
      MaterialSwitch switchAllowMembersToEdit = ViewBindings.findChildViewById(rootView, id);
      if (switchAllowMembersToEdit == null) {
        break missingId;
      }

      id = R.id.switchOnlyAdminsMessage;
      MaterialSwitch switchOnlyAdminsMessage = ViewBindings.findChildViewById(rootView, id);
      if (switchOnlyAdminsMessage == null) {
        break missingId;
      }

      id = R.id.switchPrivateGroup;
      MaterialSwitch switchPrivateGroup = ViewBindings.findChildViewById(rootView, id);
      if (switchPrivateGroup == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvMaxMembersValue;
      TextView tvMaxMembersValue = ViewBindings.findChildViewById(rootView, id);
      if (tvMaxMembersValue == null) {
        break missingId;
      }

      id = R.id.tvMemberCount;
      TextView tvMemberCount = ViewBindings.findChildViewById(rootView, id);
      if (tvMemberCount == null) {
        break missingId;
      }

      return new ActivityCreateGroupBinding((CoordinatorLayout) rootView, appBarLayout,
          btnCreateGroup, btnSelectIcon, chipGroupMembers, etGroupDescription, etGroupName,
          etSearchMembers, ivGroupIcon, progressBar, progressBarSearch, rvSearchResults,
          sliderMaxMembers, switchAllowMembersToAdd, switchAllowMembersToEdit,
          switchOnlyAdminsMessage, switchPrivateGroup, toolbar, tvMaxMembersValue, tvMemberCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
