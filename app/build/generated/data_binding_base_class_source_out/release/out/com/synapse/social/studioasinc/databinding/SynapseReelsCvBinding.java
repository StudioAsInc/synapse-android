// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import android.widget.VideoView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SynapseReelsCvBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout addFavoriteButton;

  @NonNull
  public final TextView addFavoriteButtonCount;

  @NonNull
  public final ImageView addFavoriteButtonIc;

  @NonNull
  public final RelativeLayout body;

  @NonNull
  public final LinearLayout buttonsRelative;

  @NonNull
  public final LinearLayout buttonsRelativeBottom;

  @NonNull
  public final LinearLayout buttonsRelativeBottomMD;

  @NonNull
  public final LinearLayout buttonsRelativeBottomUserInf;

  @NonNull
  public final ImageView buttonsRelativeBottomUserInfGenderBadge;

  @NonNull
  public final LinearLayout buttonsRelativeBottomUserInfMiniRight;

  @NonNull
  public final TextView buttonsRelativeBottomUserInfUsername;

  @NonNull
  public final ImageView buttonsRelativeBottomUserInfVerifiedBadge;

  @NonNull
  public final LinearLayout buttonsRelativeTop;

  @NonNull
  public final LinearLayout commentsButton;

  @NonNull
  public final TextView commentsButtonCount;

  @NonNull
  public final ImageView commentsButtonIc;

  @NonNull
  public final LinearLayout likeButton;

  @NonNull
  public final TextView likeButtonCount;

  @NonNull
  public final ImageView likeButtonIc;

  @NonNull
  public final LinearLayout mediaPlayerControllers;

  @NonNull
  public final FrameLayout middle;

  @NonNull
  public final ImageView playPauseButton;

  @NonNull
  public final TextView postDescription;

  @NonNull
  public final LinearLayout postInfosLayout;

  @NonNull
  public final CardView profileCard;

  @NonNull
  public final ImageView profileCardImage;

  @NonNull
  public final LinearLayout shareButton;

  @NonNull
  public final TextView shareButtonCount;

  @NonNull
  public final ImageView shareButtonIc;

  @NonNull
  public final LinearLayout videoMusicInfo;

  @NonNull
  public final ImageView videoMusicInfoIc;

  @NonNull
  public final TextView videoMusicInfoTitle;

  @NonNull
  public final SeekBar videoSeek;

  @NonNull
  public final VideoView videoView;

  private SynapseReelsCvBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout addFavoriteButton, @NonNull TextView addFavoriteButtonCount,
      @NonNull ImageView addFavoriteButtonIc, @NonNull RelativeLayout body,
      @NonNull LinearLayout buttonsRelative, @NonNull LinearLayout buttonsRelativeBottom,
      @NonNull LinearLayout buttonsRelativeBottomMD,
      @NonNull LinearLayout buttonsRelativeBottomUserInf,
      @NonNull ImageView buttonsRelativeBottomUserInfGenderBadge,
      @NonNull LinearLayout buttonsRelativeBottomUserInfMiniRight,
      @NonNull TextView buttonsRelativeBottomUserInfUsername,
      @NonNull ImageView buttonsRelativeBottomUserInfVerifiedBadge,
      @NonNull LinearLayout buttonsRelativeTop, @NonNull LinearLayout commentsButton,
      @NonNull TextView commentsButtonCount, @NonNull ImageView commentsButtonIc,
      @NonNull LinearLayout likeButton, @NonNull TextView likeButtonCount,
      @NonNull ImageView likeButtonIc, @NonNull LinearLayout mediaPlayerControllers,
      @NonNull FrameLayout middle, @NonNull ImageView playPauseButton,
      @NonNull TextView postDescription, @NonNull LinearLayout postInfosLayout,
      @NonNull CardView profileCard, @NonNull ImageView profileCardImage,
      @NonNull LinearLayout shareButton, @NonNull TextView shareButtonCount,
      @NonNull ImageView shareButtonIc, @NonNull LinearLayout videoMusicInfo,
      @NonNull ImageView videoMusicInfoIc, @NonNull TextView videoMusicInfoTitle,
      @NonNull SeekBar videoSeek, @NonNull VideoView videoView) {
    this.rootView = rootView;
    this.addFavoriteButton = addFavoriteButton;
    this.addFavoriteButtonCount = addFavoriteButtonCount;
    this.addFavoriteButtonIc = addFavoriteButtonIc;
    this.body = body;
    this.buttonsRelative = buttonsRelative;
    this.buttonsRelativeBottom = buttonsRelativeBottom;
    this.buttonsRelativeBottomMD = buttonsRelativeBottomMD;
    this.buttonsRelativeBottomUserInf = buttonsRelativeBottomUserInf;
    this.buttonsRelativeBottomUserInfGenderBadge = buttonsRelativeBottomUserInfGenderBadge;
    this.buttonsRelativeBottomUserInfMiniRight = buttonsRelativeBottomUserInfMiniRight;
    this.buttonsRelativeBottomUserInfUsername = buttonsRelativeBottomUserInfUsername;
    this.buttonsRelativeBottomUserInfVerifiedBadge = buttonsRelativeBottomUserInfVerifiedBadge;
    this.buttonsRelativeTop = buttonsRelativeTop;
    this.commentsButton = commentsButton;
    this.commentsButtonCount = commentsButtonCount;
    this.commentsButtonIc = commentsButtonIc;
    this.likeButton = likeButton;
    this.likeButtonCount = likeButtonCount;
    this.likeButtonIc = likeButtonIc;
    this.mediaPlayerControllers = mediaPlayerControllers;
    this.middle = middle;
    this.playPauseButton = playPauseButton;
    this.postDescription = postDescription;
    this.postInfosLayout = postInfosLayout;
    this.profileCard = profileCard;
    this.profileCardImage = profileCardImage;
    this.shareButton = shareButton;
    this.shareButtonCount = shareButtonCount;
    this.shareButtonIc = shareButtonIc;
    this.videoMusicInfo = videoMusicInfo;
    this.videoMusicInfoIc = videoMusicInfoIc;
    this.videoMusicInfoTitle = videoMusicInfoTitle;
    this.videoSeek = videoSeek;
    this.videoView = videoView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SynapseReelsCvBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SynapseReelsCvBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.synapse_reels_cv, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SynapseReelsCvBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addFavoriteButton;
      LinearLayout addFavoriteButton = ViewBindings.findChildViewById(rootView, id);
      if (addFavoriteButton == null) {
        break missingId;
      }

      id = R.id.addFavoriteButtonCount;
      TextView addFavoriteButtonCount = ViewBindings.findChildViewById(rootView, id);
      if (addFavoriteButtonCount == null) {
        break missingId;
      }

      id = R.id.addFavoriteButtonIc;
      ImageView addFavoriteButtonIc = ViewBindings.findChildViewById(rootView, id);
      if (addFavoriteButtonIc == null) {
        break missingId;
      }

      id = R.id.body;
      RelativeLayout body = ViewBindings.findChildViewById(rootView, id);
      if (body == null) {
        break missingId;
      }

      id = R.id.buttonsRelative;
      LinearLayout buttonsRelative = ViewBindings.findChildViewById(rootView, id);
      if (buttonsRelative == null) {
        break missingId;
      }

      id = R.id.buttonsRelativeBottom;
      LinearLayout buttonsRelativeBottom = ViewBindings.findChildViewById(rootView, id);
      if (buttonsRelativeBottom == null) {
        break missingId;
      }

      id = R.id.buttonsRelativeBottomMD;
      LinearLayout buttonsRelativeBottomMD = ViewBindings.findChildViewById(rootView, id);
      if (buttonsRelativeBottomMD == null) {
        break missingId;
      }

      id = R.id.buttonsRelativeBottomUserInf;
      LinearLayout buttonsRelativeBottomUserInf = ViewBindings.findChildViewById(rootView, id);
      if (buttonsRelativeBottomUserInf == null) {
        break missingId;
      }

      id = R.id.buttonsRelativeBottomUserInfGenderBadge;
      ImageView buttonsRelativeBottomUserInfGenderBadge = ViewBindings.findChildViewById(rootView, id);
      if (buttonsRelativeBottomUserInfGenderBadge == null) {
        break missingId;
      }

      id = R.id.buttonsRelativeBottomUserInfMiniRight;
      LinearLayout buttonsRelativeBottomUserInfMiniRight = ViewBindings.findChildViewById(rootView, id);
      if (buttonsRelativeBottomUserInfMiniRight == null) {
        break missingId;
      }

      id = R.id.buttonsRelativeBottomUserInfUsername;
      TextView buttonsRelativeBottomUserInfUsername = ViewBindings.findChildViewById(rootView, id);
      if (buttonsRelativeBottomUserInfUsername == null) {
        break missingId;
      }

      id = R.id.buttonsRelativeBottomUserInfVerifiedBadge;
      ImageView buttonsRelativeBottomUserInfVerifiedBadge = ViewBindings.findChildViewById(rootView, id);
      if (buttonsRelativeBottomUserInfVerifiedBadge == null) {
        break missingId;
      }

      id = R.id.buttonsRelativeTop;
      LinearLayout buttonsRelativeTop = ViewBindings.findChildViewById(rootView, id);
      if (buttonsRelativeTop == null) {
        break missingId;
      }

      id = R.id.commentsButton;
      LinearLayout commentsButton = ViewBindings.findChildViewById(rootView, id);
      if (commentsButton == null) {
        break missingId;
      }

      id = R.id.commentsButtonCount;
      TextView commentsButtonCount = ViewBindings.findChildViewById(rootView, id);
      if (commentsButtonCount == null) {
        break missingId;
      }

      id = R.id.commentsButtonIc;
      ImageView commentsButtonIc = ViewBindings.findChildViewById(rootView, id);
      if (commentsButtonIc == null) {
        break missingId;
      }

      id = R.id.likeButton;
      LinearLayout likeButton = ViewBindings.findChildViewById(rootView, id);
      if (likeButton == null) {
        break missingId;
      }

      id = R.id.likeButtonCount;
      TextView likeButtonCount = ViewBindings.findChildViewById(rootView, id);
      if (likeButtonCount == null) {
        break missingId;
      }

      id = R.id.likeButtonIc;
      ImageView likeButtonIc = ViewBindings.findChildViewById(rootView, id);
      if (likeButtonIc == null) {
        break missingId;
      }

      id = R.id.mediaPlayerControllers;
      LinearLayout mediaPlayerControllers = ViewBindings.findChildViewById(rootView, id);
      if (mediaPlayerControllers == null) {
        break missingId;
      }

      id = R.id.middle;
      FrameLayout middle = ViewBindings.findChildViewById(rootView, id);
      if (middle == null) {
        break missingId;
      }

      id = R.id.playPauseButton;
      ImageView playPauseButton = ViewBindings.findChildViewById(rootView, id);
      if (playPauseButton == null) {
        break missingId;
      }

      id = R.id.postDescription;
      TextView postDescription = ViewBindings.findChildViewById(rootView, id);
      if (postDescription == null) {
        break missingId;
      }

      id = R.id.postInfosLayout;
      LinearLayout postInfosLayout = ViewBindings.findChildViewById(rootView, id);
      if (postInfosLayout == null) {
        break missingId;
      }

      id = R.id.profileCard;
      CardView profileCard = ViewBindings.findChildViewById(rootView, id);
      if (profileCard == null) {
        break missingId;
      }

      id = R.id.profileCardImage;
      ImageView profileCardImage = ViewBindings.findChildViewById(rootView, id);
      if (profileCardImage == null) {
        break missingId;
      }

      id = R.id.shareButton;
      LinearLayout shareButton = ViewBindings.findChildViewById(rootView, id);
      if (shareButton == null) {
        break missingId;
      }

      id = R.id.shareButtonCount;
      TextView shareButtonCount = ViewBindings.findChildViewById(rootView, id);
      if (shareButtonCount == null) {
        break missingId;
      }

      id = R.id.shareButtonIc;
      ImageView shareButtonIc = ViewBindings.findChildViewById(rootView, id);
      if (shareButtonIc == null) {
        break missingId;
      }

      id = R.id.videoMusicInfo;
      LinearLayout videoMusicInfo = ViewBindings.findChildViewById(rootView, id);
      if (videoMusicInfo == null) {
        break missingId;
      }

      id = R.id.videoMusicInfoIc;
      ImageView videoMusicInfoIc = ViewBindings.findChildViewById(rootView, id);
      if (videoMusicInfoIc == null) {
        break missingId;
      }

      id = R.id.videoMusicInfoTitle;
      TextView videoMusicInfoTitle = ViewBindings.findChildViewById(rootView, id);
      if (videoMusicInfoTitle == null) {
        break missingId;
      }

      id = R.id.videoSeek;
      SeekBar videoSeek = ViewBindings.findChildViewById(rootView, id);
      if (videoSeek == null) {
        break missingId;
      }

      id = R.id.videoView;
      VideoView videoView = ViewBindings.findChildViewById(rootView, id);
      if (videoView == null) {
        break missingId;
      }

      return new SynapseReelsCvBinding((LinearLayout) rootView, addFavoriteButton,
          addFavoriteButtonCount, addFavoriteButtonIc, body, buttonsRelative, buttonsRelativeBottom,
          buttonsRelativeBottomMD, buttonsRelativeBottomUserInf,
          buttonsRelativeBottomUserInfGenderBadge, buttonsRelativeBottomUserInfMiniRight,
          buttonsRelativeBottomUserInfUsername, buttonsRelativeBottomUserInfVerifiedBadge,
          buttonsRelativeTop, commentsButton, commentsButtonCount, commentsButtonIc, likeButton,
          likeButtonCount, likeButtonIc, mediaPlayerControllers, middle, playPauseButton,
          postDescription, postInfosLayout, profileCard, profileCardImage, shareButton,
          shareButtonCount, shareButtonIc, videoMusicInfo, videoMusicInfoIc, videoMusicInfoTitle,
          videoSeek, videoView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
