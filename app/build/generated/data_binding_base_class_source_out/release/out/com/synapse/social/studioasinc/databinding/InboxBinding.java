// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class InboxBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout Main;

  @NonNull
  public final LinearLayout appBar;

  @NonNull
  public final BottomNavigationView bottomnavigation1;

  @NonNull
  public final LinearLayout contentHolderLayout;

  @NonNull
  public final ImageView imageview1;

  @NonNull
  public final ImageView imageview2;

  @NonNull
  public final ImageView imageview3;

  @NonNull
  public final LinearLayout linear1;

  @NonNull
  public final LinearLayout parentLayout;

  @NonNull
  public final TextView textview1;

  @NonNull
  public final ViewPager viewpager1;

  private InboxBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout Main,
      @NonNull LinearLayout appBar, @NonNull BottomNavigationView bottomnavigation1,
      @NonNull LinearLayout contentHolderLayout, @NonNull ImageView imageview1,
      @NonNull ImageView imageview2, @NonNull ImageView imageview3, @NonNull LinearLayout linear1,
      @NonNull LinearLayout parentLayout, @NonNull TextView textview1,
      @NonNull ViewPager viewpager1) {
    this.rootView = rootView;
    this.Main = Main;
    this.appBar = appBar;
    this.bottomnavigation1 = bottomnavigation1;
    this.contentHolderLayout = contentHolderLayout;
    this.imageview1 = imageview1;
    this.imageview2 = imageview2;
    this.imageview3 = imageview3;
    this.linear1 = linear1;
    this.parentLayout = parentLayout;
    this.textview1 = textview1;
    this.viewpager1 = viewpager1;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static InboxBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static InboxBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.inbox, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static InboxBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout Main = (LinearLayout) rootView;

      id = R.id.appBar;
      LinearLayout appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.bottomnavigation1;
      BottomNavigationView bottomnavigation1 = ViewBindings.findChildViewById(rootView, id);
      if (bottomnavigation1 == null) {
        break missingId;
      }

      id = R.id.contentHolderLayout;
      LinearLayout contentHolderLayout = ViewBindings.findChildViewById(rootView, id);
      if (contentHolderLayout == null) {
        break missingId;
      }

      id = R.id.imageview1;
      ImageView imageview1 = ViewBindings.findChildViewById(rootView, id);
      if (imageview1 == null) {
        break missingId;
      }

      id = R.id.imageview2;
      ImageView imageview2 = ViewBindings.findChildViewById(rootView, id);
      if (imageview2 == null) {
        break missingId;
      }

      id = R.id.imageview3;
      ImageView imageview3 = ViewBindings.findChildViewById(rootView, id);
      if (imageview3 == null) {
        break missingId;
      }

      id = R.id.linear1;
      LinearLayout linear1 = ViewBindings.findChildViewById(rootView, id);
      if (linear1 == null) {
        break missingId;
      }

      id = R.id.parentLayout;
      LinearLayout parentLayout = ViewBindings.findChildViewById(rootView, id);
      if (parentLayout == null) {
        break missingId;
      }

      id = R.id.textview1;
      TextView textview1 = ViewBindings.findChildViewById(rootView, id);
      if (textview1 == null) {
        break missingId;
      }

      id = R.id.viewpager1;
      ViewPager viewpager1 = ViewBindings.findChildViewById(rootView, id);
      if (viewpager1 == null) {
        break missingId;
      }

      return new InboxBinding((LinearLayout) rootView, Main, appBar, bottomnavigation1,
          contentHolderLayout, imageview1, imageview2, imageview3, linear1, parentLayout, textview1,
          viewpager1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
