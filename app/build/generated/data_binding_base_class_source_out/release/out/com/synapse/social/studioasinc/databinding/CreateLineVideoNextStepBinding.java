// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CreateLineVideoNextStepBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout HashtagLayoutBody;

  @NonNull
  public final LinearLayout Main;

  @NonNull
  public final LinearLayout PostInfoTop1;

  @NonNull
  public final ImageView back;

  @NonNull
  public final TextView continueButton;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final EditText postDescription;

  @NonNull
  public final RecyclerView recyclerview1;

  @NonNull
  public final ScrollView scroll;

  @NonNull
  public final LinearLayout scrollBody;

  @NonNull
  public final TextView subtitle;

  @NonNull
  public final TextView title;

  @NonNull
  public final LinearLayout top;

  @NonNull
  public final LinearLayout topSpace;

  @NonNull
  public final LinearLayout topSpace2;

  @NonNull
  public final LinearLayout topSpc;

  private CreateLineVideoNextStepBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout HashtagLayoutBody, @NonNull LinearLayout Main,
      @NonNull LinearLayout PostInfoTop1, @NonNull ImageView back, @NonNull TextView continueButton,
      @NonNull LinearLayout main, @NonNull EditText postDescription,
      @NonNull RecyclerView recyclerview1, @NonNull ScrollView scroll,
      @NonNull LinearLayout scrollBody, @NonNull TextView subtitle, @NonNull TextView title,
      @NonNull LinearLayout top, @NonNull LinearLayout topSpace, @NonNull LinearLayout topSpace2,
      @NonNull LinearLayout topSpc) {
    this.rootView = rootView;
    this.HashtagLayoutBody = HashtagLayoutBody;
    this.Main = Main;
    this.PostInfoTop1 = PostInfoTop1;
    this.back = back;
    this.continueButton = continueButton;
    this.main = main;
    this.postDescription = postDescription;
    this.recyclerview1 = recyclerview1;
    this.scroll = scroll;
    this.scrollBody = scrollBody;
    this.subtitle = subtitle;
    this.title = title;
    this.top = top;
    this.topSpace = topSpace;
    this.topSpace2 = topSpace2;
    this.topSpc = topSpc;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CreateLineVideoNextStepBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CreateLineVideoNextStepBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.create_line_video_next_step, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CreateLineVideoNextStepBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.HashtagLayoutBody;
      LinearLayout HashtagLayoutBody = ViewBindings.findChildViewById(rootView, id);
      if (HashtagLayoutBody == null) {
        break missingId;
      }

      LinearLayout Main = (LinearLayout) rootView;

      id = R.id.PostInfoTop1;
      LinearLayout PostInfoTop1 = ViewBindings.findChildViewById(rootView, id);
      if (PostInfoTop1 == null) {
        break missingId;
      }

      id = R.id.back;
      ImageView back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.continueButton;
      TextView continueButton = ViewBindings.findChildViewById(rootView, id);
      if (continueButton == null) {
        break missingId;
      }

      id = R.id.main;
      LinearLayout main = ViewBindings.findChildViewById(rootView, id);
      if (main == null) {
        break missingId;
      }

      id = R.id.postDescription;
      EditText postDescription = ViewBindings.findChildViewById(rootView, id);
      if (postDescription == null) {
        break missingId;
      }

      id = R.id.recyclerview1;
      RecyclerView recyclerview1 = ViewBindings.findChildViewById(rootView, id);
      if (recyclerview1 == null) {
        break missingId;
      }

      id = R.id.scroll;
      ScrollView scroll = ViewBindings.findChildViewById(rootView, id);
      if (scroll == null) {
        break missingId;
      }

      id = R.id.scrollBody;
      LinearLayout scrollBody = ViewBindings.findChildViewById(rootView, id);
      if (scrollBody == null) {
        break missingId;
      }

      id = R.id.subtitle;
      TextView subtitle = ViewBindings.findChildViewById(rootView, id);
      if (subtitle == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.top;
      LinearLayout top = ViewBindings.findChildViewById(rootView, id);
      if (top == null) {
        break missingId;
      }

      id = R.id.topSpace;
      LinearLayout topSpace = ViewBindings.findChildViewById(rootView, id);
      if (topSpace == null) {
        break missingId;
      }

      id = R.id.topSpace2;
      LinearLayout topSpace2 = ViewBindings.findChildViewById(rootView, id);
      if (topSpace2 == null) {
        break missingId;
      }

      id = R.id.topSpc;
      LinearLayout topSpc = ViewBindings.findChildViewById(rootView, id);
      if (topSpc == null) {
        break missingId;
      }

      return new CreateLineVideoNextStepBinding((LinearLayout) rootView, HashtagLayoutBody, Main,
          PostInfoTop1, back, continueButton, main, postDescription, recyclerview1, scroll,
          scrollBody, subtitle, title, top, topSpace, topSpace2, topSpc);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
