// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProfilePhotoHistoryBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final CoordinatorLayout Coordinator;

  @NonNull
  public final FloatingActionButton Fab;

  @NonNull
  public final LinearLayout Main;

  @NonNull
  public final RecyclerView ProfilePhotosHistoryList;

  @NonNull
  public final ImageView back;

  @NonNull
  public final LinearLayout body;

  @NonNull
  public final LinearLayout isDataExistsLayout;

  @NonNull
  public final LinearLayout isDataNotExistsLayout;

  @NonNull
  public final TextView isDataNotExistsLayoutSubTitle;

  @NonNull
  public final TextView isDataNotExistsLayoutTitle;

  @NonNull
  public final LinearLayout mLoadedBody;

  @NonNull
  public final ProgressBar mLoadingBar;

  @NonNull
  public final LinearLayout mLoadingBody;

  @NonNull
  public final SwipeRefreshLayout mSwipeLayout;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final TextView title;

  @NonNull
  public final LinearLayout top;

  private ProfilePhotoHistoryBinding(@NonNull CoordinatorLayout rootView,
      @NonNull CoordinatorLayout Coordinator, @NonNull FloatingActionButton Fab,
      @NonNull LinearLayout Main, @NonNull RecyclerView ProfilePhotosHistoryList,
      @NonNull ImageView back, @NonNull LinearLayout body, @NonNull LinearLayout isDataExistsLayout,
      @NonNull LinearLayout isDataNotExistsLayout, @NonNull TextView isDataNotExistsLayoutSubTitle,
      @NonNull TextView isDataNotExistsLayoutTitle, @NonNull LinearLayout mLoadedBody,
      @NonNull ProgressBar mLoadingBar, @NonNull LinearLayout mLoadingBody,
      @NonNull SwipeRefreshLayout mSwipeLayout, @NonNull LinearLayout main, @NonNull TextView title,
      @NonNull LinearLayout top) {
    this.rootView = rootView;
    this.Coordinator = Coordinator;
    this.Fab = Fab;
    this.Main = Main;
    this.ProfilePhotosHistoryList = ProfilePhotosHistoryList;
    this.back = back;
    this.body = body;
    this.isDataExistsLayout = isDataExistsLayout;
    this.isDataNotExistsLayout = isDataNotExistsLayout;
    this.isDataNotExistsLayoutSubTitle = isDataNotExistsLayoutSubTitle;
    this.isDataNotExistsLayoutTitle = isDataNotExistsLayoutTitle;
    this.mLoadedBody = mLoadedBody;
    this.mLoadingBar = mLoadingBar;
    this.mLoadingBody = mLoadingBody;
    this.mSwipeLayout = mSwipeLayout;
    this.main = main;
    this.title = title;
    this.top = top;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ProfilePhotoHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProfilePhotoHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.profile_photo_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProfilePhotoHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CoordinatorLayout Coordinator = (CoordinatorLayout) rootView;

      id = R.id._fab;
      FloatingActionButton Fab = ViewBindings.findChildViewById(rootView, id);
      if (Fab == null) {
        break missingId;
      }

      id = R.id._main;
      LinearLayout Main = ViewBindings.findChildViewById(rootView, id);
      if (Main == null) {
        break missingId;
      }

      id = R.id.ProfilePhotosHistoryList;
      RecyclerView ProfilePhotosHistoryList = ViewBindings.findChildViewById(rootView, id);
      if (ProfilePhotosHistoryList == null) {
        break missingId;
      }

      id = R.id.back;
      ImageView back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.body;
      LinearLayout body = ViewBindings.findChildViewById(rootView, id);
      if (body == null) {
        break missingId;
      }

      id = R.id.isDataExistsLayout;
      LinearLayout isDataExistsLayout = ViewBindings.findChildViewById(rootView, id);
      if (isDataExistsLayout == null) {
        break missingId;
      }

      id = R.id.isDataNotExistsLayout;
      LinearLayout isDataNotExistsLayout = ViewBindings.findChildViewById(rootView, id);
      if (isDataNotExistsLayout == null) {
        break missingId;
      }

      id = R.id.isDataNotExistsLayoutSubTitle;
      TextView isDataNotExistsLayoutSubTitle = ViewBindings.findChildViewById(rootView, id);
      if (isDataNotExistsLayoutSubTitle == null) {
        break missingId;
      }

      id = R.id.isDataNotExistsLayoutTitle;
      TextView isDataNotExistsLayoutTitle = ViewBindings.findChildViewById(rootView, id);
      if (isDataNotExistsLayoutTitle == null) {
        break missingId;
      }

      id = R.id.mLoadedBody;
      LinearLayout mLoadedBody = ViewBindings.findChildViewById(rootView, id);
      if (mLoadedBody == null) {
        break missingId;
      }

      id = R.id.mLoadingBar;
      ProgressBar mLoadingBar = ViewBindings.findChildViewById(rootView, id);
      if (mLoadingBar == null) {
        break missingId;
      }

      id = R.id.mLoadingBody;
      LinearLayout mLoadingBody = ViewBindings.findChildViewById(rootView, id);
      if (mLoadingBody == null) {
        break missingId;
      }

      id = R.id.mSwipeLayout;
      SwipeRefreshLayout mSwipeLayout = ViewBindings.findChildViewById(rootView, id);
      if (mSwipeLayout == null) {
        break missingId;
      }

      id = R.id.main;
      LinearLayout main = ViewBindings.findChildViewById(rootView, id);
      if (main == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.top;
      LinearLayout top = ViewBindings.findChildViewById(rootView, id);
      if (top == null) {
        break missingId;
      }

      return new ProfilePhotoHistoryBinding((CoordinatorLayout) rootView, Coordinator, Fab, Main,
          ProfilePhotosHistoryList, back, body, isDataExistsLayout, isDataNotExistsLayout,
          isDataNotExistsLayoutSubTitle, isDataNotExistsLayoutTitle, mLoadedBody, mLoadingBar,
          mLoadingBody, mSwipeLayout, main, title, top);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
