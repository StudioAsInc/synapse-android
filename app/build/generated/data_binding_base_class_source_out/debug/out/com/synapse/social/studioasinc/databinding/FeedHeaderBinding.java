// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FeedHeaderBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout miniPostLayout;

  @NonNull
  public final LinearLayout miniPostLayoutBottom;

  @NonNull
  public final LinearLayout miniPostLayoutBottomSpace;

  @NonNull
  public final LinearLayout miniPostLayoutBottomSpc;

  @NonNull
  public final ImageView miniPostLayoutImagePost;

  @NonNull
  public final LinearLayout miniPostLayoutMiddleSpc;

  @NonNull
  public final ImageView miniPostLayoutMoreButton;

  @NonNull
  public final CardView miniPostLayoutProfileCard;

  @NonNull
  public final ImageView miniPostLayoutProfileImage;

  @NonNull
  public final ImageView miniPostLayoutTextPost;

  @NonNull
  public final EditText miniPostLayoutTextPostInput;

  @NonNull
  public final TextView miniPostLayoutTextPostPublish;

  @NonNull
  public final LinearLayout miniPostLayoutTop;

  @NonNull
  public final ImageView miniPostLayoutVideoPost;

  @NonNull
  public final LinearLayout stories;

  @NonNull
  public final LinearLayout storiesAndMiniPostsSpc;

  @NonNull
  public final RecyclerView storiesView;

  @NonNull
  public final LinearLayout topSpc14;

  private FeedHeaderBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout miniPostLayout,
      @NonNull LinearLayout miniPostLayoutBottom, @NonNull LinearLayout miniPostLayoutBottomSpace,
      @NonNull LinearLayout miniPostLayoutBottomSpc, @NonNull ImageView miniPostLayoutImagePost,
      @NonNull LinearLayout miniPostLayoutMiddleSpc, @NonNull ImageView miniPostLayoutMoreButton,
      @NonNull CardView miniPostLayoutProfileCard, @NonNull ImageView miniPostLayoutProfileImage,
      @NonNull ImageView miniPostLayoutTextPost, @NonNull EditText miniPostLayoutTextPostInput,
      @NonNull TextView miniPostLayoutTextPostPublish, @NonNull LinearLayout miniPostLayoutTop,
      @NonNull ImageView miniPostLayoutVideoPost, @NonNull LinearLayout stories,
      @NonNull LinearLayout storiesAndMiniPostsSpc, @NonNull RecyclerView storiesView,
      @NonNull LinearLayout topSpc14) {
    this.rootView = rootView;
    this.miniPostLayout = miniPostLayout;
    this.miniPostLayoutBottom = miniPostLayoutBottom;
    this.miniPostLayoutBottomSpace = miniPostLayoutBottomSpace;
    this.miniPostLayoutBottomSpc = miniPostLayoutBottomSpc;
    this.miniPostLayoutImagePost = miniPostLayoutImagePost;
    this.miniPostLayoutMiddleSpc = miniPostLayoutMiddleSpc;
    this.miniPostLayoutMoreButton = miniPostLayoutMoreButton;
    this.miniPostLayoutProfileCard = miniPostLayoutProfileCard;
    this.miniPostLayoutProfileImage = miniPostLayoutProfileImage;
    this.miniPostLayoutTextPost = miniPostLayoutTextPost;
    this.miniPostLayoutTextPostInput = miniPostLayoutTextPostInput;
    this.miniPostLayoutTextPostPublish = miniPostLayoutTextPostPublish;
    this.miniPostLayoutTop = miniPostLayoutTop;
    this.miniPostLayoutVideoPost = miniPostLayoutVideoPost;
    this.stories = stories;
    this.storiesAndMiniPostsSpc = storiesAndMiniPostsSpc;
    this.storiesView = storiesView;
    this.topSpc14 = topSpc14;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FeedHeaderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FeedHeaderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.feed_header, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FeedHeaderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.miniPostLayout;
      LinearLayout miniPostLayout = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayout == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutBottom;
      LinearLayout miniPostLayoutBottom = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutBottom == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutBottomSpace;
      LinearLayout miniPostLayoutBottomSpace = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutBottomSpace == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutBottomSpc;
      LinearLayout miniPostLayoutBottomSpc = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutBottomSpc == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutImagePost;
      ImageView miniPostLayoutImagePost = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutImagePost == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutMiddleSpc;
      LinearLayout miniPostLayoutMiddleSpc = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutMiddleSpc == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutMoreButton;
      ImageView miniPostLayoutMoreButton = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutMoreButton == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutProfileCard;
      CardView miniPostLayoutProfileCard = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutProfileCard == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutProfileImage;
      ImageView miniPostLayoutProfileImage = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutProfileImage == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutTextPost;
      ImageView miniPostLayoutTextPost = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutTextPost == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutTextPostInput;
      EditText miniPostLayoutTextPostInput = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutTextPostInput == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutTextPostPublish;
      TextView miniPostLayoutTextPostPublish = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutTextPostPublish == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutTop;
      LinearLayout miniPostLayoutTop = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutTop == null) {
        break missingId;
      }

      id = R.id.miniPostLayoutVideoPost;
      ImageView miniPostLayoutVideoPost = ViewBindings.findChildViewById(rootView, id);
      if (miniPostLayoutVideoPost == null) {
        break missingId;
      }

      id = R.id.stories;
      LinearLayout stories = ViewBindings.findChildViewById(rootView, id);
      if (stories == null) {
        break missingId;
      }

      id = R.id.storiesAndMiniPostsSpc;
      LinearLayout storiesAndMiniPostsSpc = ViewBindings.findChildViewById(rootView, id);
      if (storiesAndMiniPostsSpc == null) {
        break missingId;
      }

      id = R.id.storiesView;
      RecyclerView storiesView = ViewBindings.findChildViewById(rootView, id);
      if (storiesView == null) {
        break missingId;
      }

      id = R.id.topSpc14;
      LinearLayout topSpc14 = ViewBindings.findChildViewById(rootView, id);
      if (topSpc14 == null) {
        break missingId;
      }

      return new FeedHeaderBinding((LinearLayout) rootView, miniPostLayout, miniPostLayoutBottom,
          miniPostLayoutBottomSpace, miniPostLayoutBottomSpc, miniPostLayoutImagePost,
          miniPostLayoutMiddleSpc, miniPostLayoutMoreButton, miniPostLayoutProfileCard,
          miniPostLayoutProfileImage, miniPostLayoutTextPost, miniPostLayoutTextPostInput,
          miniPostLayoutTextPostPublish, miniPostLayoutTop, miniPostLayoutVideoPost, stories,
          storiesAndMiniPostsSpc, storiesView, topSpc14);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
