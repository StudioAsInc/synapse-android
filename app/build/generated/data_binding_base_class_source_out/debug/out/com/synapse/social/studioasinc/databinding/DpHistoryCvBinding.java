// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DpHistoryCvBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout body;

  @NonNull
  public final CardView card;

  @NonNull
  public final LinearLayout checked;

  @NonNull
  public final ImageView checkedIc;

  @NonNull
  public final ImageView profile;

  @NonNull
  public final RelativeLayout relative;

  private DpHistoryCvBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout body,
      @NonNull CardView card, @NonNull LinearLayout checked, @NonNull ImageView checkedIc,
      @NonNull ImageView profile, @NonNull RelativeLayout relative) {
    this.rootView = rootView;
    this.body = body;
    this.card = card;
    this.checked = checked;
    this.checkedIc = checkedIc;
    this.profile = profile;
    this.relative = relative;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DpHistoryCvBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DpHistoryCvBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dp_history_cv, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DpHistoryCvBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.body;
      LinearLayout body = ViewBindings.findChildViewById(rootView, id);
      if (body == null) {
        break missingId;
      }

      id = R.id.card;
      CardView card = ViewBindings.findChildViewById(rootView, id);
      if (card == null) {
        break missingId;
      }

      id = R.id.checked;
      LinearLayout checked = ViewBindings.findChildViewById(rootView, id);
      if (checked == null) {
        break missingId;
      }

      id = R.id.checked_ic;
      ImageView checkedIc = ViewBindings.findChildViewById(rootView, id);
      if (checkedIc == null) {
        break missingId;
      }

      id = R.id.profile;
      ImageView profile = ViewBindings.findChildViewById(rootView, id);
      if (profile == null) {
        break missingId;
      }

      id = R.id.relative;
      RelativeLayout relative = ViewBindings.findChildViewById(rootView, id);
      if (relative == null) {
        break missingId;
      }

      return new DpHistoryCvBinding((LinearLayout) rootView, body, card, checked, checkedIc,
          profile, relative);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
