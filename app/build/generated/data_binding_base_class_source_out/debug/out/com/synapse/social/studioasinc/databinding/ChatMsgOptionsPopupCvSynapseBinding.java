// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChatMsgOptionsPopupCvSynapseBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView Cool;

  @NonNull
  public final TextView Dislike;

  @NonNull
  public final TextView HundredPerCent;

  @NonNull
  public final TextView Jocker;

  @NonNull
  public final LinearLayout body;

  @NonNull
  public final LinearLayout copy;

  @NonNull
  public final ImageView copyIcon;

  @NonNull
  public final TextView copyTitle;

  @NonNull
  public final LinearLayout delete;

  @NonNull
  public final ImageView deleteIcon;

  @NonNull
  public final TextView deleteTitle;

  @NonNull
  public final LinearLayout edit;

  @NonNull
  public final ImageView editIcon;

  @NonNull
  public final TextView editTitle;

  @NonNull
  public final TextView fire;

  @NonNull
  public final HorizontalScrollView hscroll1;

  @NonNull
  public final TextView like;

  @NonNull
  public final TextView love;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final CardView menuCard;

  @NonNull
  public final LinearLayout popupLayout;

  @NonNull
  public final LinearLayout reactionLayout;

  @NonNull
  public final LinearLayout reactionsContainer;

  @NonNull
  public final LinearLayout reply;

  @NonNull
  public final ImageView replyIcon;

  @NonNull
  public final TextView replyTitle;

  @NonNull
  public final LinearLayout summary;

  @NonNull
  public final ImageView summaryIcon;

  @NonNull
  public final TextView summaryTitle;

  private ChatMsgOptionsPopupCvSynapseBinding(@NonNull LinearLayout rootView,
      @NonNull TextView Cool, @NonNull TextView Dislike, @NonNull TextView HundredPerCent,
      @NonNull TextView Jocker, @NonNull LinearLayout body, @NonNull LinearLayout copy,
      @NonNull ImageView copyIcon, @NonNull TextView copyTitle, @NonNull LinearLayout delete,
      @NonNull ImageView deleteIcon, @NonNull TextView deleteTitle, @NonNull LinearLayout edit,
      @NonNull ImageView editIcon, @NonNull TextView editTitle, @NonNull TextView fire,
      @NonNull HorizontalScrollView hscroll1, @NonNull TextView like, @NonNull TextView love,
      @NonNull LinearLayout main, @NonNull CardView menuCard, @NonNull LinearLayout popupLayout,
      @NonNull LinearLayout reactionLayout, @NonNull LinearLayout reactionsContainer,
      @NonNull LinearLayout reply, @NonNull ImageView replyIcon, @NonNull TextView replyTitle,
      @NonNull LinearLayout summary, @NonNull ImageView summaryIcon,
      @NonNull TextView summaryTitle) {
    this.rootView = rootView;
    this.Cool = Cool;
    this.Dislike = Dislike;
    this.HundredPerCent = HundredPerCent;
    this.Jocker = Jocker;
    this.body = body;
    this.copy = copy;
    this.copyIcon = copyIcon;
    this.copyTitle = copyTitle;
    this.delete = delete;
    this.deleteIcon = deleteIcon;
    this.deleteTitle = deleteTitle;
    this.edit = edit;
    this.editIcon = editIcon;
    this.editTitle = editTitle;
    this.fire = fire;
    this.hscroll1 = hscroll1;
    this.like = like;
    this.love = love;
    this.main = main;
    this.menuCard = menuCard;
    this.popupLayout = popupLayout;
    this.reactionLayout = reactionLayout;
    this.reactionsContainer = reactionsContainer;
    this.reply = reply;
    this.replyIcon = replyIcon;
    this.replyTitle = replyTitle;
    this.summary = summary;
    this.summaryIcon = summaryIcon;
    this.summaryTitle = summaryTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ChatMsgOptionsPopupCvSynapseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChatMsgOptionsPopupCvSynapseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.chat_msg_options_popup_cv_synapse, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChatMsgOptionsPopupCvSynapseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Cool;
      TextView Cool = ViewBindings.findChildViewById(rootView, id);
      if (Cool == null) {
        break missingId;
      }

      id = R.id.Dislike;
      TextView Dislike = ViewBindings.findChildViewById(rootView, id);
      if (Dislike == null) {
        break missingId;
      }

      id = R.id.HundredPerCent;
      TextView HundredPerCent = ViewBindings.findChildViewById(rootView, id);
      if (HundredPerCent == null) {
        break missingId;
      }

      id = R.id.Jocker;
      TextView Jocker = ViewBindings.findChildViewById(rootView, id);
      if (Jocker == null) {
        break missingId;
      }

      id = R.id.body;
      LinearLayout body = ViewBindings.findChildViewById(rootView, id);
      if (body == null) {
        break missingId;
      }

      id = R.id.copy;
      LinearLayout copy = ViewBindings.findChildViewById(rootView, id);
      if (copy == null) {
        break missingId;
      }

      id = R.id.copy_icon;
      ImageView copyIcon = ViewBindings.findChildViewById(rootView, id);
      if (copyIcon == null) {
        break missingId;
      }

      id = R.id.copy_title;
      TextView copyTitle = ViewBindings.findChildViewById(rootView, id);
      if (copyTitle == null) {
        break missingId;
      }

      id = R.id.delete;
      LinearLayout delete = ViewBindings.findChildViewById(rootView, id);
      if (delete == null) {
        break missingId;
      }

      id = R.id.delete_icon;
      ImageView deleteIcon = ViewBindings.findChildViewById(rootView, id);
      if (deleteIcon == null) {
        break missingId;
      }

      id = R.id.delete_title;
      TextView deleteTitle = ViewBindings.findChildViewById(rootView, id);
      if (deleteTitle == null) {
        break missingId;
      }

      id = R.id.edit;
      LinearLayout edit = ViewBindings.findChildViewById(rootView, id);
      if (edit == null) {
        break missingId;
      }

      id = R.id.edit_icon;
      ImageView editIcon = ViewBindings.findChildViewById(rootView, id);
      if (editIcon == null) {
        break missingId;
      }

      id = R.id.edit_title;
      TextView editTitle = ViewBindings.findChildViewById(rootView, id);
      if (editTitle == null) {
        break missingId;
      }

      id = R.id.fire;
      TextView fire = ViewBindings.findChildViewById(rootView, id);
      if (fire == null) {
        break missingId;
      }

      id = R.id.hscroll1;
      HorizontalScrollView hscroll1 = ViewBindings.findChildViewById(rootView, id);
      if (hscroll1 == null) {
        break missingId;
      }

      id = R.id.like;
      TextView like = ViewBindings.findChildViewById(rootView, id);
      if (like == null) {
        break missingId;
      }

      id = R.id.love;
      TextView love = ViewBindings.findChildViewById(rootView, id);
      if (love == null) {
        break missingId;
      }

      id = R.id.main;
      LinearLayout main = ViewBindings.findChildViewById(rootView, id);
      if (main == null) {
        break missingId;
      }

      id = R.id.menu_card;
      CardView menuCard = ViewBindings.findChildViewById(rootView, id);
      if (menuCard == null) {
        break missingId;
      }

      id = R.id.popup_layout;
      LinearLayout popupLayout = ViewBindings.findChildViewById(rootView, id);
      if (popupLayout == null) {
        break missingId;
      }

      id = R.id.reaction_layout;
      LinearLayout reactionLayout = ViewBindings.findChildViewById(rootView, id);
      if (reactionLayout == null) {
        break missingId;
      }

      id = R.id.reactions_container;
      LinearLayout reactionsContainer = ViewBindings.findChildViewById(rootView, id);
      if (reactionsContainer == null) {
        break missingId;
      }

      id = R.id.reply;
      LinearLayout reply = ViewBindings.findChildViewById(rootView, id);
      if (reply == null) {
        break missingId;
      }

      id = R.id.reply_icon;
      ImageView replyIcon = ViewBindings.findChildViewById(rootView, id);
      if (replyIcon == null) {
        break missingId;
      }

      id = R.id.reply_title;
      TextView replyTitle = ViewBindings.findChildViewById(rootView, id);
      if (replyTitle == null) {
        break missingId;
      }

      id = R.id.summary;
      LinearLayout summary = ViewBindings.findChildViewById(rootView, id);
      if (summary == null) {
        break missingId;
      }

      id = R.id.summary_icon;
      ImageView summaryIcon = ViewBindings.findChildViewById(rootView, id);
      if (summaryIcon == null) {
        break missingId;
      }

      id = R.id.summary_title;
      TextView summaryTitle = ViewBindings.findChildViewById(rootView, id);
      if (summaryTitle == null) {
        break missingId;
      }

      return new ChatMsgOptionsPopupCvSynapseBinding((LinearLayout) rootView, Cool, Dislike,
          HundredPerCent, Jocker, body, copy, copyIcon, copyTitle, delete, deleteIcon, deleteTitle,
          edit, editIcon, editTitle, fire, hscroll1, like, love, main, menuCard, popupLayout,
          reactionLayout, reactionsContainer, reply, replyIcon, replyTitle, summary, summaryIcon,
          summaryTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
