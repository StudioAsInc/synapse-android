// Generated by view binder compiler. Do not edit!
package com.synapse.social.studioasinc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.synapse.social.studioasinc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BannedDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout body;

  @NonNull
  public final TextView closeAppButton;

  @NonNull
  public final TextView createRequestButton;

  @NonNull
  public final LinearLayout dialogBody;

  @NonNull
  public final LinearLayout linear1;

  @NonNull
  public final LottieAnimationView lottie1;

  @NonNull
  public final TextView subtext;

  @NonNull
  public final TextView textview3;

  @NonNull
  public final TextView title;

  @NonNull
  public final TextView watermarkAi;

  private BannedDialogBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout body,
      @NonNull TextView closeAppButton, @NonNull TextView createRequestButton,
      @NonNull LinearLayout dialogBody, @NonNull LinearLayout linear1,
      @NonNull LottieAnimationView lottie1, @NonNull TextView subtext, @NonNull TextView textview3,
      @NonNull TextView title, @NonNull TextView watermarkAi) {
    this.rootView = rootView;
    this.body = body;
    this.closeAppButton = closeAppButton;
    this.createRequestButton = createRequestButton;
    this.dialogBody = dialogBody;
    this.linear1 = linear1;
    this.lottie1 = lottie1;
    this.subtext = subtext;
    this.textview3 = textview3;
    this.title = title;
    this.watermarkAi = watermarkAi;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BannedDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BannedDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.banned_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BannedDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.body;
      LinearLayout body = ViewBindings.findChildViewById(rootView, id);
      if (body == null) {
        break missingId;
      }

      id = R.id.close_app_button;
      TextView closeAppButton = ViewBindings.findChildViewById(rootView, id);
      if (closeAppButton == null) {
        break missingId;
      }

      id = R.id.create_request_button;
      TextView createRequestButton = ViewBindings.findChildViewById(rootView, id);
      if (createRequestButton == null) {
        break missingId;
      }

      id = R.id.dialog_body;
      LinearLayout dialogBody = ViewBindings.findChildViewById(rootView, id);
      if (dialogBody == null) {
        break missingId;
      }

      id = R.id.linear1;
      LinearLayout linear1 = ViewBindings.findChildViewById(rootView, id);
      if (linear1 == null) {
        break missingId;
      }

      id = R.id.lottie1;
      LottieAnimationView lottie1 = ViewBindings.findChildViewById(rootView, id);
      if (lottie1 == null) {
        break missingId;
      }

      id = R.id.subtext;
      TextView subtext = ViewBindings.findChildViewById(rootView, id);
      if (subtext == null) {
        break missingId;
      }

      id = R.id.textview3;
      TextView textview3 = ViewBindings.findChildViewById(rootView, id);
      if (textview3 == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.watermark_ai;
      TextView watermarkAi = ViewBindings.findChildViewById(rootView, id);
      if (watermarkAi == null) {
        break missingId;
      }

      return new BannedDialogBinding((LinearLayout) rootView, body, closeAppButton,
          createRequestButton, dialogBody, linear1, lottie1, subtext, textview3, title,
          watermarkAi);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
